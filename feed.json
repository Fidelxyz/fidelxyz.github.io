{
    "version": "https://jsonfeed.org/version/1",
    "title": "Fidel's Lab",
    "subtitle": "不乱于心，不困于情。不畏将来，不念过往。",
    "icon": "https://fidel.js.org/images/favicon.ico",
    "description": null,
    "home_page_url": "https://fidel.js.org",
    "items": [
        {
            "id": "https://fidel.js.org/2021/05/22/cloudstudio/",
            "url": "https://fidel.js.org/2021/05/22/cloudstudio/",
            "title": "「机房利器」、Coding on iPad? —— 记一次使用 Cloud Studio 云端开发的尝试",
            "date_published": "2021-05-21T16:00:00.000Z",
            "content_html": "<p>曾经，Fidel's Lab 的部署平台在 Github Pages 和 Coding Pages 之间反复横跳。这篇文章所介绍的「Cloud Studio」（原「腾讯云开发者平台」）就是由 Coding 提供的在线 IDE。Cloud Studio <strong>基于 VS Code</strong>，只需要一个<s>现代的</s>浏览器和<s>正常的</s>网络连接即可在线使用。</p>\n<span id=\"more\"></span>\n<p>早在一年半前，我就对 Coding 当时的「腾讯云开发者平台」有所关注（当时好像不叫这个）。只不过由于极其有限的免费使用额度、需要购买云服务器才能获得良好的体验等门槛，最终并没有采用。经过一年多的升级迭代，现在的 Cloud Studio <a href=\"https://cloudstudio.net/docs/others/#%E5%B7%A5%E4%BD%9C%E7%A9%BA%E9%97%B4%E6%9C%89%E4%BD%95%E9%99%90%E5%88%B6%EF%BC%9F\">「每个用户<strong>每日</strong>可以（免费）使用工作空间共<strong>四小时</strong>」</a>，足以承担<strong>轻度</strong>的开发任务。</p>\n<p>经过一段时间的体验，个人认为 Coding Studio 的最佳使用场景之一是 <strong>OIer 们在校内机房短时间上机练习</strong>，由于<strong>只需配置一次环境即可快速启动</strong>，堪称 <strong>「机房利器」</strong>。</p>\n<p>这篇文章主要记录我使用 Cloud Studio 进行 OI 练习和编辑维护 Hexo 博客、以及尝试使用移动端（iPad）进行开发的过程。此文章全程在 Cloud Studio 上编辑。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/g3GhFjUoOENDS7k.jpg\" alt=\"\" /></p>\n<p><em><s>Coding 赶紧给我打钱</s></em></p>\n<h1 id=\"前置准备\"><a class=\"anchor\" href=\"#前置准备\">#</a> 前置准备</h1>\n<p>首先在 <span class=\"exturl\" data-url=\"aHR0cDovL2NvZGluZy5uZXQ=\">coding.net</span> 注册一个 Coding 账户。<s>我相信这一步是个人都会，就不详细描述了。</s></p>\n<details class=\"info\"><summary>「Coding」是什么？</summary><div>\n<p>你可以理解为是一个<strong>类似于 GitHub</strong>，<strong>在国内体验良好</strong>的代码托管仓库。关于 Coding 主站的功能，这里不详细讲述，有兴趣的 OIer 们可以自行研究。</p>\n</div></details>\n<p>从左侧菜单栏进入「Cloud Studio」，或者从 <span class=\"exturl\" data-url=\"aHR0cDovL2Nsb3Vkc3R1ZGlvLm5ldA==\">cloudstudio.net</span> 使用 Coding 账号登陆。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/xzPoX3vuUb15CKO.jpg\" alt=\"\" /></p>\n<h1 id=\"oi-on-cloud-studio\"><a class=\"anchor\" href=\"#oi-on-cloud-studio\">#</a> OI on Cloud Studio</h1>\n<h2 id=\"创建工作空间\"><a class=\"anchor\" href=\"#创建工作空间\">#</a> 创建工作空间</h2>\n<p>现在你进入了你的 Cloud Studio 面板。点击上方 <strong>「新建工作空间」</strong>。</p>\n<ul>\n<li>\n<p>关于 <strong>「运行环境」</strong>：这里我们选择 <strong>「预置环境」</strong>。（有服务器的大佬也可以连接云服务器使用，风险自行承担。）</p>\n<p>对于使用 C++ 的 OI 编程，我们选择 <strong>「Ubuntu」</strong>。</p>\n<details class=\"info\"><summary>「Ubuntu」是什么？</summary><div>\n<p>Linux 的发行版之一。</p>\n</div></details>\n</li>\n<li>\n<p>关于 <strong>「代码来源」</strong>：选择 <strong>「空」</strong>。</p>\n<p><span class=\"label info\">注意</span> Cloud Studio 自带的仓库同步不稳定。如果需要同步远程仓库代码，建议进入工作空间后使用 Git 手动配置。</p>\n</li>\n</ul>\n<p><img data-src=\"https://i.loli.net/2021/05/22/YDd8QCXZicgxtqO.jpg\" alt=\"\" /></p>\n<h2 id=\"初步探索\"><a class=\"anchor\" href=\"#初步探索\">#</a> 初步探索</h2>\n<p>进入工作空间，你会发现 Cloud Studio 的界面与 VS Code <s>完全一致</s>高度相似。熟悉 VS Code 的读者可以跳过此部分。</p>\n<h3 id=\"命令面板-commands-panel\"><a class=\"anchor\" href=\"#命令面板-commands-panel\">#</a> 命令面板 (Commands Panel)</h3>\n<p>按下 <strong> <code>Ctrl</code>  +  <code>Shift</code>  +  <code>P</code> </strong> 打开命令面板。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/QzgMLV1xwbGeBdp.jpg\" alt=\"\" /></p>\n<p>在命令面板里可以找到 VS Code 中所有的操作（包括插件）及对应的快捷键。</p>\n<h3 id=\"命令行-终端-terminal\"><a class=\"anchor\" href=\"#命令行-终端-terminal\">#</a> 命令行 / 终端 (Terminal)</h3>\n<p>Cloud Studio 的本质是一台云服务器，通过 VS Code 控制。如何仅通过一个编辑器控制一个操作系统呢？</p>\n<p>接下来介绍 Linux 中最强大的工具：<strong>命令行</strong> (Terminal)。</p>\n<p>在 VS Code 中，按下 <strong> <code>Ctrl</code>  + <code>`</code></strong> 打开<strong>终端</strong>。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/DFua6y4Zv5ISHbE.jpg\" alt=\"\" /></p>\n<details class=\"info\"><summary>Linux 命令行的基本用法</summary><div>\n<p>左侧的  <code>RemoteWorking</code>  表示当前所在的目录。</p>\n<ul>\n<li>\n<p><strong> <code>pwd</code> </strong> 查看完整的目录路径。</p>\n</li>\n<li>\n<p><strong> <code>mkdir &lt;dirname&gt;</code> </strong> 在当前目录下<strong>新建</strong>名为  <code>&lt;dirname&gt;</code>  的<strong>文件夹</strong>。</p>\n</li>\n<li>\n<p><strong> <code>ls</code> </strong> <strong>列出</strong>当前目录下的所有<strong>文件和文件夹</strong>。</p>\n</li>\n<li>\n<p><strong> <code>cd &lt;dirname&gt;</code> </strong> <strong>进入</strong>当前目录下名为  <code>&lt;dirname&gt;</code>  的<strong>文件夹</strong>。</p>\n<ul>\n<li>\n<p><strong> <code>cd ..</code> </strong> 返回<strong>上一级目录</strong>。</p>\n</li>\n<li>\n<p><strong> <code>cd ~</code> </strong> 前往<strong>家目录</strong>（如用户  <code>root</code>  的家目录为  <code>/root</code> ）。</p>\n</li>\n<li>\n<p><strong> <code>cd /</code> </strong> 前往<strong>根目录</strong> ( <code>/</code> )。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><strong> <code>touch &lt;filename&gt;</code> </strong> 在当前目录下<strong>创建</strong>名为  <code>&lt;filename&gt;</code>  的<strong>文件</strong>。</p>\n</li>\n<li>\n<p><strong> <code>rm &lt;filename&gt;</code> </strong> <strong>删除</strong>当前目录下名为  <code>&lt;filename&gt;</code>  的<strong>文件</strong>。</p>\n<ul>\n<li>\n<p><strong> <code>rm -r &lt;dirname&gt;</code> </strong> <strong>删除</strong>当前目录下名为  <code>&lt;filename&gt;</code>  的<strong>文件夹</strong>。</p>\n</li>\n<li>\n<p><strong> <code>rm -r *</code> </strong> <strong>删除</strong>当前目录下的<strong>所有文件和文件夹</strong>。</p>\n</li>\n<li>\n<p>参数 <strong> <code>-f</code> </strong> 不经过确认直接删除。</p>\n</li>\n</ul>\n</li>\n</ul>\n</div></details>\n<h3 id=\"设置-settings\"><a class=\"anchor\" href=\"#设置-settings\">#</a> 设置 (Settings)</h3>\n<p>在 VS Code 界面左上角选择 <strong>「文件 - 打开文件夹…」</strong>，可以设置左侧资源管理器的根目录。</p>\n<p>按下快捷键 <strong> <code>Ctrl</code>  +  <code>,</code> </strong> 或在左上角选择 <strong>「文件 - 首选项 - 设置」</strong> 进入<strong>设置界面</strong>。</p>\n<blockquote>\n<p><strong>值得介绍的 VS Code 设置项</strong></p>\n<p>在设置页面搜索左侧的 index 即可转到相应设置。也可以从设置界面右上角打开 Json 文件修改设置。</p>\n<p><strong> <code>terminal.integrated.cwd</code> </strong> Terminal 的默认<strong>启动路径</strong>。</p>\n<p><strong> <code>editor.fontSize</code> </strong> 编辑器<strong>字体大小</strong>。</p>\n<p><strong> <code>editor.fontFamily</code> </strong> 编辑器<strong>字体</strong>。我使用的配置是  <code>Monaco, Consolas, Menlo, 'Courier New', monospace</code> ，在 Windows 和 MacOS 下都有不错的效果。</p>\n<p><strong> <code>editor.wordWrap</code> </strong> 启用<strong>长行自动换行</strong>（仅影响显示效果）。</p>\n</blockquote>\n<p>VS Code 的界面我认为还是非常清晰的，相信大家简单摸索之后就能很快了解。</p>\n<h2 id=\"c-相关组件安装及配置\"><a class=\"anchor\" href=\"#c-相关组件安装及配置\">#</a> C++ 相关组件安装及配置</h2>\n<h3 id=\"编译器-llvm-clang\"><a class=\"anchor\" href=\"#编译器-llvm-clang\">#</a> 编译器 (LLVM / Clang)</h3>\n<p>这里以 LLVM / Clang 的安装举例。GCC 等编译器的安装过程大致相似。</p>\n<details class=\"info\"><summary>「Clang」是什么？</summary><div>\n<p>与大家熟悉的 GCC (G++) 类似，Clang (Clang++) 是 C (C++) 的编译器之一。相比于 GCC，Clang 有着更快的编译速度、更友好的错误提示等优点。同时，与 Clang 配套的调试器 LLDB（对应 GCC 的 GDB）对 MacOS 更加友好。</p>\n</div></details>\n<p>Linux 下有极其方便的软件包管理工具：<strong>apt</strong>。</p>\n<p>只需要在终端中输入四行指令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">apt</span> update</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> llvm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> clang</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> lldb</pre></td></tr></table></figure><p>一切完成。</p>\n<p><s>比屑百度出来的大一堆下载源码手动编译的方法方便百倍。</s></p>\n<p>Cloud Studio 默认配置了清华镜像源，按理来说下载速度应该很快。</p>\n<p><span class=\"label info\">提示</span> 如果下载进度卡了，按下  <code>Ctrl</code>  +  <code>C</code>  终止并重新执行命令。</p>\n<h3 id=\"插件-extensions\"><a class=\"anchor\" href=\"#插件-extensions\">#</a> 插件 (Extensions)</h3>\n<p>在 VS Code 左侧工具栏选择最后一项 <strong>「Extensions」图标</strong>进入插件列表。在上方搜索框输入插件名称关键字即可在插件商店中搜索。点击 <strong>「Install」</strong> 即可一键安装。极其方便！</p>\n<h4 id=\"c-c\"><a class=\"anchor\" href=\"#c-c\">#</a> C / C++</h4>\n<p>微软出品的 C / C++ 配套插件，包括代码高亮、自动补全、调试等功能。</p>\n<p>在 Panel 中使用命令  <code>C/C++: 编辑配置 (UI)</code>  打开编辑器，或使用命令   <code>C/C++: 编辑配置 (JSON)</code>  切换到  <code>c_cpp_properties.json</code>  文件进行配置。</p>\n<p>可以根据需要修改<strong>编译器参数</strong>、<strong>C / C++ 标准</strong>等设置。</p>\n<h4 id=\"code-runner\"><a class=\"anchor\" href=\"#code-runner\">#</a> Code Runner</h4>\n<p>代码快捷运行工具，适用多种代码语言。</p>\n<p>进入设置界面或  <code>settings.json</code> ，修改  <code>code-runner.executorMap</code>  项，将编译程序从 gcc /g++ 改为 clang /clang++。</p>\n<figure class=\"highlight diff\"><figcaption data-lang=\"diff\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\"> \"c\": \"cd $dir &amp;&amp; gcc $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\"> \"c\": \"cd $dir &amp;&amp; clang $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\"> \"cpp\": \"cd $dir &amp;&amp; g++ $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\"> \"cpp\": \"cd $dir &amp;&amp; clang++ $fileName -o $fileNameWithoutExt &amp;&amp; $dir$fileNameWithoutExt\",</span></span></pre></td></tr></table></figure><p><span class=\"label info\">注意</span> 默认通过 Code Runner 运行的代码无法直接从 VS Code 接收键盘输入，所以需要使用<strong>文件读入</strong>。如果需要从键盘输入，可在设置中启用  <code>code-runner.runInTerminal</code> ，代码将在 Terminal 中运行。（感谢 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3VzZXIvMTc1NTg2\">@Zxc200611</span> 提醒）</p>\n<blockquote>\n<p>个人建议还是使用文件读写，一是方便 Debug，二是为日后竞赛养成良好习惯。</p>\n</blockquote>\n<h2 id=\"compile-and-run\"><a class=\"anchor\" href=\"#compile-and-run\">#</a> Compile and Run!</h2>\n<p>编写好 C++ 程序后，在编辑器右上角点击 <strong>「运行」图标</strong>或按下快捷键 <strong> <code>Ctrl</code>  +  <code>Alt</code>  +  <code>N</code> </strong> 编译并运行代码。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/jZvyHLpYz6xATKm.jpg\" alt=\"\" /></p>\n<p>按下快捷键 <strong> <code>Ctrl</code>  +  <code>Alt</code>  +  <code>M</code> </strong> 强制停止运行中的代码。</p>\n<h2 id=\"debug\"><a class=\"anchor\" href=\"#debug\">#</a> Debug</h2>\n<p>在 VS Code 左侧工具栏选择第三项 <strong>「Run」图标</strong>进入调试菜单。</p>\n<p>点击 <strong>「运行和调试 (Run and Debug)」</strong>，选择 <strong>「C++ (GDB/LLDB)」</strong>-<strong>「clang++」</strong>，并保存  <code>launch.json</code> 。</p>\n<p>代码打断点，然后点击左上角小三角开始调试。</p>\n<p>左侧菜单的各个部分的含义和作用分别为：</p>\n<ul>\n<li>\n<p><strong>变量</strong>：当前代码中的局部变量。</p>\n</li>\n<li>\n<p><strong>监视</strong>：全局 / 局部变量，需要手动添加。</p>\n</li>\n<li>\n<p><strong>调用堆栈 &amp; 断点</strong>：顾名思义。</p>\n</li>\n</ul>\n<p><span class=\"label info\">提示</span> 可以直接对左侧的变量值进行修改。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/yW6j1kcxa9nYOIP.jpg\" alt=\"\" /></p>\n<h2 id=\"用户代码片段\"><a class=\"anchor\" href=\"#用户代码片段\">#</a> 用户代码片段</h2>\n<p>以配置 C++ 的用户代码片段为例，点击 <strong>「左下角齿轮图标（管理）- 用户代码片段」</strong>，选择 <strong>「cpp」</strong>。</p>\n<p>按照注释中的提示编辑  <code>cpp.json</code> 。</p>\n<p>这里以我的  <code>cpp.json</code>  为例：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"C++ program\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token property\">\"prefix\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cpp\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token property\">\"body\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token string\">\"#include &lt;cstdio>\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token string\">\"inline int read() &#123;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token string\">\"    int x = 0, c = getchar(), f = 0;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token string\">\"    while (c &lt; '0' || c > '9') f |= c == '-', c = getchar();\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>      <span class=\"token string\">\"    while (c >= '0' &amp;&amp; c &lt;= '9') x = x * 10 + c - '0', c = getchar();\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token string\">\"    return f ? -x : x;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token string\">\"&#125;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token string\">\"int main() &#123;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token string\">\"#ifndef ONLINE_JUDGE\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token string\">\"    freopen(\\\"test.in\\\", \\\"r\\\", stdin);\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token string\">\"    freopen(\\\"test.out\\\", \\\"w\\\", stdout);\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token string\">\"#endif\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token string\">\"    $0\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token string\">\"#ifndef ONLINE_JUDGE\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token string\">\"    fclose(stdin);\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token string\">\"    fclose(stdout);\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token string\">\"#endif\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token string\">\"    return 0;\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token string\">\"&#125;\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>在后缀为  <code>.cpp</code>  的代码文件中，输入  <code>cpp</code>  ( <code>prefix</code> ) 并按下  <code>Tab</code> ，将会自动补全为：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">inline</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">&lt;</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">></span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> f <span class=\"token operator\">|=</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> x <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">-</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> f <span class=\"token operator\">?</span> <span class=\"token operator\">-</span>x <span class=\"token operator\">:</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">ONLINE_JUDGE</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">freopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.in\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">freopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.out\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">/* Code */</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">ONLINE_JUDGE</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>同时，编辑光标会移到  <code>/* Code */</code>  ( <code>$0</code> ) 的位置。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/5ESlo98ir1TcZxv.jpg\" alt=\"\" /></p>\n<blockquote>\n<p>利用预编译判断指令  <code>#ifndef ONLINE_JUDGE</code> ，这份模板提交到洛谷时不需要删除文件读写，极其好用。</p>\n</blockquote>\n<h2 id=\"代码格式化-clang-format\"><a class=\"anchor\" href=\"#代码格式化-clang-format\">#</a> 代码格式化 (clang-format)</h2>\n<p><strong>随手对写完的代码  <code>Shift</code>  +  <code>Alt</code>  +  <code>F</code>  格式化是一个好习惯。</strong></p>\n<p>VS Code 的 C / C++ 插件里，使用的格式化程序是 clang-format。</p>\n<p>修改设置中的  <code>C_Cpp.clang_format_fallbackStyle</code>  项配置格式化选项。</p>\n<p>我的配置是： <code>&#123; BasedOnStyle: Google, IndentWidth: 4, UseTab: Never &#125;</code> 。</p>\n<p><code>BasedOnStyle: Google</code>  使得<strong>大括号不独占一行</strong>。可以根据个人喜好修改。</p>\n<h1 id=\"hexo-on-cloud-studio\"><a class=\"anchor\" href=\"#hexo-on-cloud-studio\">#</a> Hexo on Cloud Studio</h1>\n<p>以下内容为 Cloud Studio 的<strong>拓展进阶玩法</strong>，需要你掌握以下前置知识：</p>\n<ul>\n<li>Hexo 博客的搭建</li>\n<li>Git 的使用</li>\n</ul>\n<p><strong>假设，你已经搭建过你的 Hexo 博客，并已经将源代码上传至代码托管平台。</strong></p>\n<p>如果没有，请参阅 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">Hexo 文档</span> 直接搭建博客，或将源代码上传至代码托管平台。</p>\n<h2 id=\"创建工作空间-2\"><a class=\"anchor\" href=\"#创建工作空间-2\">#</a> 创建工作空间</h2>\n<ul>\n<li>\n<p>「运行环境」：选择 「预置环境 - <strong>Node.js</strong>」。</p>\n</li>\n<li>\n<p>「代码来源」：选择 <strong>「空」</strong>。</p>\n<p><span class=\"label info\">注意</span> Cloud Studio 自带的仓库同步不稳定。如果需要同步远程仓库代码，建议进入工作空间后使用 Git 手动配置。</p>\n</li>\n</ul>\n<h2 id=\"源代码迁移\"><a class=\"anchor\" href=\"#源代码迁移\">#</a> 源代码迁移</h2>\n<p>使用  <code>git clone</code>  下载源代码至本地。</p>\n<p>按照惯例，在主目录下运行  <code>hexo</code>  命令。但是这时候你会发现运行不了的：</p>\n<pre><code class=\"language-plain\">zsh: command not found: hexo\n</code></pre>\n<p>输入以下命令，在  <code>/usr/local/bin/hexo</code>  下创建  <code>hexo</code>  程序的软连接到  <code>RemoteWorking/&lt;dirname&gt;/hexo/node_modules/hexo/bin/hexo</code> 。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ln</span> -s ~/RemoteWorking/<span class=\"token operator\">&lt;</span>dirname<span class=\"token operator\">></span>/hexo/node_modules/hexo/bin/hexo /usr/local/bin/hexo</pre></td></tr></table></figure><p>再次运行  <code>hexo</code>  命令，发现可以正常使用了。</p>\n<h2 id=\"运行服务器-网页预览\"><a class=\"anchor\" href=\"#运行服务器-网页预览\">#</a> 运行服务器 &amp; 网页预览</h2>\n<p>输入  <code>hexo s</code>  启动预览。</p>\n<p>得益于 Cloud Studio 的 Browser Preview Lite 插件，你可以非常方便地预览你的 Hexo 博客。</p>\n<p><code>Ctrl</code>  +  <code>Shift</code>  +  <code>P</code>  打开 Panel，输入  <code>preview</code> ，在命令列表中点击 <strong> <code>Preview: Open Preview Tab</code> </strong>，输入<strong>端口号  <code>4000</code> </strong>，即可打开预览。</p>\n<p>或者你也可以通过配置  <code>preview.yml</code> ，一键启动服务器并打开预览。</p>\n<p>打开 Panel，输入  <code>preview</code> ，在命令列表中点击 <strong> <code>Preview: Generate Preview Config File</code> </strong>，编辑配置文件。</p>\n<p>这是我的配置：</p>\n<figure class=\"highlight yml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># .vscode/preview.yml</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">autoOpen</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 打开工作空间时是否自动开启所有应用的预览</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">apps</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4000</span> <span class=\"token comment\"># 应用的端口</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> hexo s <span class=\"token punctuation\">-</span>p 4000 <span class=\"token comment\"># 应用的启动命令</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> hexo <span class=\"token comment\"># 应用的启动目录</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo <span class=\"token comment\"># 应用名称</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> hexo s <span class=\"token comment\"># 应用描述</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">autoOpen</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 打开工作空间时是否自动开启预览（优先级高于根级 autoOpen）</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">4001</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> hexo s <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>drafts <span class=\"token punctuation\">-</span>p 4001</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">root</span><span class=\"token punctuation\">:</span> hexo</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Hexo (Show Drafts)</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">description</span><span class=\"token punctuation\">:</span> hexo s <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>drafts</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">autoOpen</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></pre></td></tr></table></figure><p><span class=\"label info\">注意</span> 由于 Browser Preview Lite 以  <code>port</code>  作为索引关键字，<strong> <code>port</code>  必须是唯一的</strong>。可以使用参数  <code>-p</code>  指定端口号。</p>\n<p>配置完毕后，打开 Panel，输入  <code>preview</code> ，在命令列表中点击 <strong> <code>Preview: Open Preview Tab</code> </strong>，即可快速选择预览选项。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/GjmLsgXa17TYUFz.jpg\" alt=\"\" /></p>\n<h2 id=\"vs-code-配置\"><a class=\"anchor\" href=\"#vs-code-配置\">#</a> VS Code 配置</h2>\n<p><strong>Terminal 的初始路径</strong>可以通过  <code>terminal.integrated.cwd</code>  修改。</p>\n<h2 id=\"额外组件安装及配置\"><a class=\"anchor\" href=\"#额外组件安装及配置\">#</a> 额外组件安装及配置</h2>\n<h3 id=\"markdown-preview-enhanced\"><a class=\"anchor\" href=\"#markdown-preview-enhanced\">#</a> Markdown Preview Enhanced</h3>\n<p>强大的 Markdown 预览插件。</p>\n<h3 id=\"markdownlint\"><a class=\"anchor\" href=\"#markdownlint\">#</a> markdownlint</h3>\n<p>强大的 Markdown 格式检查工具，<s>强迫症福音</s>。</p>\n<p>我的配置 ( <code>.markdownlint.json</code> )：</p>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token property\">\"single-title\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token property\">\"ol-prefix\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token property\">\"line-length\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token property\">\"no-alt-text\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token property\">\"no-emphasis-as-heading\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token property\">\"no-blanks-blockquote\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token property\">\"no-trailing-punctuation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token property\">\"punctuation\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".,;:。，；：\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token property\">\"no-inline-html\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token property\">\"no-duplicate-header\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>对着 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0RhdmlkQW5zb24vbWFya2Rvd25saW50L2Jsb2IvbWFpbi9kb2MvUnVsZXMubWQ=\">markdownlint's Rules.md file</span> 自行研究吧。</p>\n<h3 id=\"pangu-markdown\"><a class=\"anchor\" href=\"#pangu-markdown\">#</a> Pangu-Markdown</h3>\n<p><strong>在中文与英文、数字与符号之间加入空格是个好习惯。</strong></p>\n<p>在 Panel 中输入  <code>Pangu Format</code> ，可以自动添加空格。</p>\n<blockquote>\n<p>汉学家称这个空白字元为「盘古之白」，因为它劈开了全角符和半角符之间的混沌。另有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。</p>\n<p>摘自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3ZpbnRhL3Bhbmd1Lmpz\">https://github.com/vinta/pangu.js</span></p>\n</blockquote>\n<h3 id=\"markdown-table-format\"><a class=\"anchor\" href=\"#markdown-table-format\">#</a> MarkDown Table Format</h3>\n<p><code>Shift</code>  +  <code>Alt</code>  +  <code>F</code>  对<strong>表格</strong>进行格式化。</p>\n<hr />\n<blockquote>\n<p>至于不少人推荐的 Markdown All in One：我觉得不好用。真的一点也不好用。试着输入一下<strong>多行引用块</strong>就知道了。</p>\n</blockquote>\n<h1 id=\"coding-on-ipad\"><a class=\"anchor\" href=\"#coding-on-ipad\">#</a> Coding on iPad?</h1>\n<p>抱着「你的下一台电脑何必是电脑」的想法，我尝试着在 iPad 上使用 Cloud Studio 写代码。毕竟，只要带一台 iPad 而不用背着<s>重如砖块的</s>电脑到处跑可太香了。</p>\n<p>测试平台：iPad 8 (iPadOS 14.5)，Microsoft Edge 浏览器。</p>\n<p>Cloud Studio（或者说网页版的 VS Code）对于触控的优化还是不错的。滑动、点击、长按调出右键菜单等操作都可以顺利完成。</p>\n<p>然而输入的体验就不那么好了。写代码就别<s>手戳玻璃</s>敲虚拟键盘了，老老实实用蓝牙键盘吧。</p>\n<p>受限于设备性能和网络，输入时略有延迟，不太跟手。</p>\n<p>最大的问题，来源于 <strong>Cloud Studio 自行实现了一套与 iPadOS 系统级别不同的输入逻辑</strong>。</p>\n<p>由于 Cloud Studio 自行实现了输入光标，在切换窗口后，内部的输入光标有时不能聚焦到正确的位置，反映为 iPadOS 系统级别的输入光标聚焦在编辑器上，而 Cloud Studio 内部的输入光标还在别的位置，无法通过键盘输入，需要点击其他位置再聚焦到编辑器才能正常输入。</p>\n<p>Cloud Studio 的剪切板与 iPadOS 系统剪切板是独立的，且由于适配问题不能互通，<strong>只能在 Cloud Studio 内部复制粘贴</strong>。这使我差点因为代码复制不出去而交不了作业，最终通过  <code>cat</code>  指令将文件在 Terminal 中 print 出来，才能复制出去。</p>\n<p>总体来说，Cloud Studio 在 iPad 上的使用体验还<strong>远远达不到能顺畅使用的级别</strong>。<s>你的下一台电脑还得是电脑。</s></p>\n<h1 id=\"彩蛋\"><a class=\"anchor\" href=\"#彩蛋\">#</a> 彩蛋</h1>\n<p>在 Terminal 中，输入  <code>lscpu</code>  可查看 CPU 信息。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/imtWhM4ECYgXBDo.jpg\" alt=\"\" /></p>\n<p><strong>Intel(R) Xeon(R) Gold 6148 CPU @ 2.40GHz!</strong></p>\n<p>输入  <code>free -m</code>  查看内存信息（单位 MiB）。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/b5769AYFfMXPIsB.jpg\" alt=\"\" /></p>\n<p><strong>2 GiB 内存！</strong></p>\n<p>输入  <code>df -h</code>  查看硬盘分区信息。</p>\n<p><img data-src=\"https://i.loli.net/2021/05/22/Wmb21nsUux6vFDk.jpg\" alt=\"\" /></p>\n<p>唔……</p>\n<h1 id=\"references\"><a class=\"anchor\" href=\"#references\">#</a> References</h1>\n<ol>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZHN0dWRpby5uZXQvZG9jcw==\">Cloud Studio 文档</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9saW51eC9saW51eC1jb21tYW5kLW1hbnVhbC5odG1s\">Linux 命令大全</span></p>\n</li>\n</ol>\n",
            "tags": [
                "杂记",
                "技术"
            ]
        },
        {
            "id": "https://fidel.js.org/2021/03/13/send-your-name-to-mars/",
            "url": "https://fidel.js.org/2021/03/13/send-your-name-to-mars/",
            "title": "Send Your Name to Mars",
            "date_published": "2021-03-12T16:00:00.000Z",
            "content_html": "<blockquote>\n<p>「当你一抬头，就能看到你的名字在另一个星球」</p>\n</blockquote>\n<span id=\"more\"></span>\n<p><img data-src=\"https://i.loli.net/2021/03/13/yHQsP5hMAKtU69f.jpg\" alt=\"Mars 2020 Rover\" /></p>\n<blockquote>\n<p>NASA's &quot;Send Your Name to Mars&quot; campaign invited people around the globe to submit their names to ride along on the rover. And people did – with a grand total of 10,932,295 names submitted. Those names now sit on the surface of Mars, written on three fingernail-sized chips on board the Perseverance rover.</p>\n<p>摘自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJzLm5hc2EuZ292L25ld3MvODg3Mi9uZWFybHktMTEtbWlsbGlvbi1uYW1lcy1vZi1lYXJ0aGxpbmdzLWFyZS1vbi1tYXJzLXBlcnNldmVyYW5jZS8=\">Nearly 11 Million Names of Earthlings are on Mars Perseverance (mars.nasa.gov)</span></p>\n</blockquote>\n<p><img data-src=\"https://i.loli.net/2021/03/13/XpzNH7WRm4xcdBD.jpg\" alt=\"图片摘自：'Send Your Name' Placard Attached to Perseverance (mars.nasa.gov)\" /></p>\n<p>这是 NASA「Send Your Name to Mars」计划的网页：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJzLm5hc2EuZ292L3BhcnRpY2lwYXRlL3NlbmQteW91ci1uYW1l\">https://mars.nasa.gov/participate/send-your-name</span></p>\n<hr />\n<p>现在，NASA 启动了「Future Mars Mission」项目，参与者的名字将在 2026 年登陆火星。</p>\n<p>参与链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXJzLm5hc2EuZ292L3BhcnRpY2lwYXRlL3NlbmQteW91ci1uYW1lL2Z1dHVyZQ==\">https://mars.nasa.gov/participate/send-your-name/future</span></p>\n<p><img data-src=\"https://i.loli.net/2021/03/13/JH3kZ5VMNSAP9RY.jpg\" alt=\"Future Mars Mission\" /></p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "https://fidel.js.org/2021/02/15/talk-about-something/",
            "url": "https://fidel.js.org/2021/02/15/talk-about-something/",
            "title": "随便聊聊",
            "date_published": "2021-02-14T16:00:00.000Z",
            "content_html": "<p>分享之前在 B 站看到的一条评论。</p>\n<span id=\"more\"></span>\n<p><img data-src=\"https://i.loli.net/2021/02/15/U6cACmVuFsLd7Xp.jpg\" alt=\"\" /></p>\n<blockquote>\n<p>如果你本性是善，从善良的角度看，up 表达了惋惜和沉痛。</p>\n<p>而你如果本性是恶，以恶意的角度揣测，你就会以为 up 在蹭热度，在玩梗，在嘲讽。</p>\n</blockquote>\n<p>很喜欢这句话。</p>\n<p>当你看这个世界时，也在发现自己。</p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "https://fidel.js.org/2021/02/14/cpp-optimization/",
            "url": "https://fidel.js.org/2021/02/14/cpp-optimization/",
            "title": "【转载】还能这样玩——关于一些 OI 的黑 (sao) 科 (cao) 技 (zuo) 优化",
            "date_published": "2021-02-13T16:00:00.000Z",
            "content_html": "<blockquote>\n<p>编者注：虽然标题中提到了 OI，但个人认为本文对追求极限的代码调优的价值远大于对 OI 的价值。</p>\n</blockquote>\n<div class=\"note info\">\n<p>转载修改内容：</p>\n<ol>\n<li>修复了原文滥用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89883em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.904999em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46782999999999997em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> 问题。</li>\n<li>对代码进行了格式化。</li>\n<li>修改了原文汇编代码的错误注释。（汇编的注释符号是  <code>;</code>  而不是  <code>//</code> ！）</li>\n<li>修改原文符号的不规范使用。</li>\n<li>删除或修改了存在争议或错误的内容。</li>\n</ol>\n</div>\n <span id=\"more\"></span>\n<hr />\n<h1 id=\"免责声明\"><a class=\"anchor\" href=\"#免责声明\">#</a> 免责声明</h1>\n<blockquote>\n<p>本文仅供参考，由读者引发的一切后果，任何责任由读者自行承担。后果包括但不限于：</p>\n<ol>\n<li>优化后程序变慢。</li>\n<li>某些 OJ/OI 上导致的编译错误。</li>\n<li>文章中的某些错误引起的争论。</li>\n</ol>\n</blockquote>\n<h1 id=\"gcc-系列\"><a class=\"anchor\" href=\"#gcc-系列\">#</a> GCC 系列</h1>\n<p>关于 GCC 的黑科技想必大家也就知道这几句吧：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">GCC <span class=\"token function\">optimize</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">GCC <span class=\"token function\">optimize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">pragma</span> <span class=\"token expression\">GCC <span class=\"token function\">optimize</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></span></span></pre></td></tr></table></figure><p>俗称 “吸氧”。</p>\n<p>在这里小编就简单地讲一下  <code>-O1</code> ,  <code>-O2</code> ,  <code>-O3</code> ,  <code>-Os</code> （怎么还有个  <code>-Os</code> ）。</p>\n<h2 id=\"o-系列\"><a class=\"anchor\" href=\"#o-系列\">#</a> O 系列</h2>\n<h3 id=\"-o1\"><a class=\"anchor\" href=\"#-o1\">#</a>  <code>-O1</code></h3>\n<p>包含下列选项：</p>\n<pre><code class=\"language-plain\">-fauto-inc-dec\n-fcprop-registers\n-fdce\n-fdefer-pop\n-fdelayed-branch\n-fdse\n-fguess-branch-probability\n-fif-conversion2\n-fif-conversion\n-finline-small-functions\n-fipa-pure-const\n-fipa-reference\n-fmerge-constants -fsplit-wide-types\n-ftree-builtin-call-dce\n-ftree-ccp\n-ftree-ch\n-ftree-copyrename\n-ftree-dce\n-ftree-dominator-opts\n-ftree-dse\n-ftree-fre\n-ftree-sra\n-ftree-ter\n-funit-at-a-time\n-fomit-frame-pointer\n</code></pre>\n<h3 id=\"-o2\"><a class=\"anchor\" href=\"#-o2\">#</a>  <code>-O2</code></h3>\n<p>除了加载  <code>-O1</code>  的选项外，还加载：</p>\n<pre><code class=\"language-plain\">-fthread-jumps\n-falign-functions -falign-jumps\n-falign-loops -falign-labels\n-fcaller-saves\n-fcr-Ossjumping\n-fcse-follow-jumps -fcse-skip-blocks\n-fdelete-null-pointer-checks\n-fexpensive-optimizations\n-fgcse -fgcse-lm\n-findirect-inlining\n-foptimize-sibling-calls\n-fpeephole2\n-fregmove\n-freorder-blocks -freorder-functions\n-frerun-cse-after-loop\n-fsched-interblock -fsched-spec\n-fschedule-insns -fschedule-insns2\n-fstrict-aliasing -fstrict-overflow\n-ftree-switch-conversion\n-ftree-pre\n-ftree-vrp\n</code></pre>\n<h3 id=\"-o3\"><a class=\"anchor\" href=\"#-o3\">#</a>  <code>-O3</code></h3>\n<p>除了加载  <code>-O2</code>  外，还加载：</p>\n<pre><code class=\"language-plain\">-finline-functions\n-funswitch-loops\n-fpredictive-commoning\n-fgcse-after-reload\n-ftree-vectorize\n</code></pre>\n<h3 id=\"-os\"><a class=\"anchor\" href=\"#-os\">#</a>  <code>-Os</code></h3>\n<p>在研究编译驱动的 makefile 的时候，发现 GCC 的命令行里面有一个  <code>-Os</code>  的优化选项。</p>\n<p>遍查 GCC 文档，发现了  <code>-O0</code> ,  <code>-O1</code> ,  <code>-O2</code> ,  <code>-O3</code> ，就是没有发现  <code>-Os</code> 。</p>\n<p>祭出 GOOGLE，搜了一下，终于发现这篇文章说明了  <code>-Os</code>  的作用：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5saW51eGpvdXJuYWwuY29tL2FydGljbGUvNzI2OQ==\">http://www.linuxjournal.com/article/7269</span></p>\n<p>原来  <code>-Os</code>  相当于 &quot;-O2.5&quot;。是使用了所有  <code>-O2</code>  的优化选项，但又不缩减代码尺寸的方法。<br />\n除了包含  <code>-O2</code>  的开关外， <code>-Os</code>  还会使得下列开关禁用。</p>\n<pre><code class=\"language-plain\">-falign-functions \n-falign-jumps \n-falign-loops\n-falign-labels \n-freorder-blocks \n-freorder-blocks-and-partition\n-fprefetch-loop-arrays \n-ftree-vect-loop-version\n</code></pre>\n<p>另外，对于多个 -O 选项的情形，最后一个加载的为有效。比如  <code>gcc -O1 -Os -O3 –o test test.c</code> ，有效的优化开关为  <code>-O3</code> 。</p>\n<p>一般来说，用的最多的是  <code>-O3</code>  和  <code>-Os</code> ，如果遇到程序运行不正常的问题，请降低优化级别，如把  <code>-O3</code>  改为  <code>-O2</code> （情况很少见）。</p>\n<h2 id=\"针对目标机器\"><a class=\"anchor\" href=\"#针对目标机器\">#</a> 针对目标机器</h2>\n<h3 id=\"-marchcpu-type\"><a class=\"anchor\" href=\"#-marchcpu-type\">#</a>  <code>-march=cpu-type</code></h3>\n<p>为 cpu-type 所针对的机器开启需要的指令集。</p>\n<p>cpu-type 可以为 pentium4、core2、athlon-4 等（具体参见文档），比如  <code>-march=core2</code>  时，则会开启 core2 所支持的  <code>MMX、SSE、SSE2、SSE3、SSSE3</code>  指令集。</p>\n<p>另外还支持  <code>native</code>  类型，为编译器所在目前的 CPU 类型优化指令集，指定  <code>-march=native</code> 。</p>\n<h3 id=\"-mfpmathunit\"><a class=\"anchor\" href=\"#-mfpmathunit\">#</a>  <code>-mfpmath=unit</code></h3>\n<p>选择浮点运算单元。</p>\n<p><code>unit</code>  可以为  <code>387</code>  和  <code>sse</code> 。</p>\n<p><code>387</code>  为 x86 系列的默认值，使用标准的 387 浮点协处理器。</p>\n<p><code>sse</code>  为 x64 的默认值，使用  <code>sse</code>  指令集。</p>\n<p>一般你的程序如果有大量的浮点运算的话，在 P4 和 K8 以上级别的处理器上推荐开启  <code>-mfpmath=sse</code> 。</p>\n<h3 id=\"加载指定指令集\"><a class=\"anchor\" href=\"#加载指定指令集\">#</a> 加载指定指令集</h3>\n<p>可以使用  <code>-msse2</code>  或  <code>-msse4.1</code>  加载指定的指令集。</p>\n<h2 id=\"其他比较有效的选项\"><a class=\"anchor\" href=\"#其他比较有效的选项\">#</a> 其他比较有效的选项</h2>\n<h3 id=\"-ftracer\"><a class=\"anchor\" href=\"#-ftracer\">#</a>  <code>-ftracer</code></h3>\n<p>执行尾部复制以扩大超级块的尺寸，它简化了函数控制流，从而允许其它的优化措施做的更好。单独使用没啥意义，和其他优化选项一起使用很有效。</p>\n<h3 id=\"-ffast-math\"><a class=\"anchor\" href=\"#-ffast-math\">#</a>  <code>-ffast-math</code></h3>\n<p>违反 IEEE/ANSI 标准以提高浮点数计算速度，是个危险的选项，仅在编译不需要严格遵守 IEEE 规范且浮点计算密集的程序考虑采用。不考虑精度时使用这个选项速度会加快。</p>\n<h3 id=\"-fivopts\"><a class=\"anchor\" href=\"#-fivopts\">#</a>  <code>-fivopts</code></h3>\n<p>在 trees 上执行归纳变量优化。</p>\n<h3 id=\"-ftree-parallelize-loopsn\"><a class=\"anchor\" href=\"#-ftree-parallelize-loopsn\">#</a>  <code>-ftree-parallelize-loops=n</code></h3>\n<p>使循环并行化。只当循环无数据依赖时使用，在多核 CPU 上时使用才会有利。</p>\n<h3 id=\"-ftree-loop-linear\"><a class=\"anchor\" href=\"#-ftree-loop-linear\">#</a>  <code>-ftree-loop-linear</code></h3>\n<p>在 trees 上进行线型循环转换。它能够改进缓冲性能并且允许进行更进一步的循环优化。</p>\n<h3 id=\"-fforce-addr\"><a class=\"anchor\" href=\"#-fforce-addr\">#</a>  <code>-fforce-addr</code></h3>\n<p>必须将地址复制到寄存器中才能对他们进行运算。由于所需地址通常在前面已经加载到寄存器中了，所以这个选项可以改进代码。</p>\n<h3 id=\"-floop-interchange\"><a class=\"anchor\" href=\"#-floop-interchange\">#</a>  <code>-floop-interchange</code></h3>\n<p>交换循环变量。</p>\n<p>例如：</p>\n<pre><code class=\"language-plain\">DO J = 1, M\n  DO I = 1, N\n    A(J, I) = A(J, I) * C\n  ENDDO\nENDDO\n</code></pre>\n<p>会改变为：</p>\n<pre><code class=\"language-plain\">DO I = 1, N\n  DO J = 1, M\n    A(J, I) = A(J, I) * C\n  ENDDO\nENDDO\n</code></pre>\n<p>改变后，如果 N 比缓冲区大的话，会更有效率。这是因为 Fortran 里数组是以列主元为排列方式的。当然这个选项并不仅仅用于 Fortran，gcc 家族的编译器都有效。</p>\n<h3 id=\"-fvisibilityhidden\"><a class=\"anchor\" href=\"#-fvisibilityhidden\">#</a>  <code>-fvisibility=hidden</code></h3>\n<p>设置默认的 ELF 镜像中符号的可见性为隐藏。使用这个特性可以非常充分的提高连接和加载共享库的性能，生成更加优化的代码，提供近乎完美的 API 输出和防止符号碰撞。我们强烈建议你在编译任何共享库（Dll）的时候使用该选项。</p>\n<pre><code class=\"language-plain\">-fvisibility-inlines-hidden\n</code></pre>\n<p>默认隐藏所有内联函数，从而减小导出符号表的大小，既能缩减文件的大小，还能提高运行性能，强烈建议你在编译任何共享库的时候使用该选项。</p>\n<h3 id=\"-minline-all-stringops\"><a class=\"anchor\" href=\"#-minline-all-stringops\">#</a>  <code>-minline-all-stringops</code></h3>\n<p>默认时 GCC 只将确定目的地会被对齐在至少 4 字节边界的字符串操作内联进程序代码。该选项启用更多的内联并且增加二进制文件的体积，但是可以提升依赖于高速  <code>memcpy</code> ,  <code>strlen</code> ,  <code>memset</code>  操作的程序的性能。</p>\n<h3 id=\"-m64\"><a class=\"anchor\" href=\"#-m64\">#</a>  <code>-m64</code></h3>\n<p>生成专门运行于 64 位环境的代码，不能运行于 32 位环境，仅用于 x86_64 [含 EMT64] 环境。</p>\n<h3 id=\"-fprefetch-loop-arrays\"><a class=\"anchor\" href=\"#-fprefetch-loop-arrays\">#</a>  <code>-fprefetch-loop-arrays</code></h3>\n<p>生成数组预读取指令，对于使用巨大数组的程序可以加快代码执行速度，适合数据库相关的大型软件等。具体效果如何取决于代码。不能和  <code>-Os</code>  一起使用。</p>\n<h3 id=\"-pipe\"><a class=\"anchor\" href=\"#-pipe\">#</a>  <code>-pipe</code></h3>\n<p>在编译过程的不同阶段之间使用管道而非临时文件进行通信，可以加快编译速度。建议使用。</p>\n<h2 id=\"推荐选项开关\"><a class=\"anchor\" href=\"#推荐选项开关\">#</a> 推荐选项开关</h2>\n<p>综上，比较<strong>安全</strong>的<strong>开关</strong>为</p>\n<pre><code class=\"language-plain\">-pipe\n-O3 (-Os)\n-march=native\n-mfpmath=sse\n-msse2\n-ftracer\n-fivopts\n-ftree-loop-linear\n-fforce-addr\n</code></pre>\n<p>如果不需要多高的精度，比如 GUI 框架之类，加入：</p>\n<pre><code class=\"language-plain\">-ffast-math\n</code></pre>\n<p>如果是编译的是共享库（ <code>.dll</code> ,  <code>.a</code> ）加入</p>\n<pre><code class=\"language-plain\">-fvisibility=hidden\n-fvisibility-inlines-hidden\n</code></pre>\n<p><strong>注意某些比赛不能使用  <code>-O1</code> ,  <code>-O2</code> ,  <code>-O3</code> ,  <code>-Os</code> .</strong></p>\n<h1 id=\"底层优化坑\"><a class=\"anchor\" href=\"#底层优化坑\">#</a> 底层优化（坑）</h1>\n<h2 id=\"io-优化\"><a class=\"anchor\" href=\"#io-优化\">#</a> I/O 优化</h2>\n<p>I/O 优化是卡常中最常用的技巧，当数据较大的时候，读入输出占用了很多时间。</p>\n<h3 id=\"读入优化\"><a class=\"anchor\" href=\"#读入优化\">#</a> 读入优化</h3>\n<p>流输入方式很方便，不需要记忆占位符，但每次读入时，它都要检测是否和  <code>stdin</code>  的同步（是否被  <code>freopen</code>  改变 / 是否被  <code>scanf</code>  读取），因此它是可以和  <code>scanf</code>  混用的。但也导致了它每次都要从数据开始位置跳转到当前读入的位置，浪费了大量时间，可以用  <code>std::ios::sync_with_stdio(false);</code>  关闭两者的同步以加快速度，这样做之后会比  <code>scanf</code>  还快！但必须注意，调用后不能再用  <code>freopen</code> ，但是还可以用  <code>fstream</code> 。</p>\n<p>当然，更好的方法是用  <code>getchar</code>  自己写读入函数。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>sum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> tf <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">&lt;</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">||</span> ch <span class=\"token operator\">></span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">!=</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    tf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">>=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> ch <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">-</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><div class=\"note primary\">\n<p>编者注：</p>\n<p>补充一份我自己使用的快读：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">inline</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">&lt;</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">||</span> c <span class=\"token operator\">></span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> f <span class=\"token operator\">|=</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">>=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> c <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> x <span class=\"token operator\">=</span> x <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> c <span class=\"token operator\">-</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token keyword\">return</span> f <span class=\"token operator\">?</span> <span class=\"token operator\">-</span>x <span class=\"token operator\">:</span> x<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>优势：更短，且不会因为代码格式化而展开。</p>\n</div>\n<p>这样效率有了很大的提升，而且可以和  <code>scanf</code>  混用（字符串等），第 7 行和第 10 行的代码后面会说。</p>\n<p>我们知道， <code>getchar</code>  是逐字符读取的，在  <code>stdio.h</code>  中，有一个  <code>fread</code>  函数，能整段读取，比  <code>getchar</code>  还快，并且支持  <code>freopen</code> （完美兼容）和  <code>fopen</code> （需要把下面的所有  <code>stdin</code>  改成你的文件指针）。</p>\n<p>函数原型： <code>size_t fread(void *buffer, size_t size, size_t count, FILE *stream);</code></p>\n<p>作用：从  <code>stream</code>  中读取  <code>count</code>  个大小为  <code>size</code>  个字节的数据，放到数组  <code>buffer</code>  中，返回成功了多少个大小为 size 个字节的数据。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">inline</span> <span class=\"token keyword\">char</span> <span class=\"token function\">nc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">1000000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p1 <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>p2 <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">return</span> p1 <span class=\"token operator\">==</span> p2 <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>p2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p1 <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">fread</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p1 <span class=\"token operator\">==</span> p2<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token constant\">EOF</span> <span class=\"token operator\">:</span> <span class=\"token operator\">*</span>p1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">//#define nc getchar</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>sum<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">nc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">int</span> tf <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">&lt;</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">||</span> ch <span class=\"token operator\">></span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">!=</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">nc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    tf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">=</span> <span class=\"token function\">nc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">>=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> ch <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span> sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">-</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">nc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>sum <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但要注意，由于这种方法是整段读取的，这也造就了它两个巨大的缺陷：</p>\n<ol>\n<li><strong>不能用键盘输入。数据还没输入，程序怎么整段读取。如果你需要在电脑上用键盘输入调试，请把第 6 行的注释取消。</strong></li>\n<li><strong>不能和  <code>scanf</code> ， <code>getchar</code>  等其他读入方法混合使用。因为 fread 是整段读取的，也就是说所有数据都被读取了，其他函数根本读取不到任何东西（只能从你的读取大小后面开始读），因此，所有类型的变量读入都必须自己写，上面的  <code>read</code>  函数只支持  <code>int</code>  类型。</strong></li>\n</ol>\n<p>下面是测试，摘自 LibreOJ，单位为毫秒（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>3</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding=\"application/x-tex\">n=3 \\times 10^6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span>）。</p>\n<table>\n<thead>\n<tr>\n<th>读入方法</th>\n<th>编译器</th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>1</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[0,2^1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[0,2^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>15</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[0,2^{15})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>31</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[0,2^{31})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>0</mn><mo separator=\"true\">,</mo><msup><mn>2</mn><mn>63</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">[0,2^{63})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">6</span><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>fread</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>13</td>\n<td>13</td>\n<td>39</td>\n<td>70</td>\n<td>111</td>\n</tr>\n<tr>\n<td><code>getchar</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>58</td>\n<td>73</td>\n<td>137</td>\n<td>243</td>\n<td>423</td>\n</tr>\n<tr>\n<td><code>cin</code>  （关闭同步）</td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>161</td>\n<td>147</td>\n<td>205</td>\n<td>270</td>\n<td>394</td>\n</tr>\n<tr>\n<td><code>scanf</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>182</td>\n<td>175</td>\n<td>256</td>\n<td>368</td>\n<td>574</td>\n</tr>\n<tr>\n<td><code>cin</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>442</td>\n<td>429</td>\n<td>706</td>\n<td>1039</td>\n<td>1683</td>\n</tr>\n</tbody>\n</table>\n<p>没错，你没有看错， <code>fread</code>  以压倒性的优势碾压了其他所有方法，而关闭同步的  <code>cin</code>  比  <code>scanf</code>  快，并且读  <code>long long</code>  的时候比  <code>getchar</code>  还要快。</p>\n<hr />\n<p><strong>下面的内容某些 OI 比赛不支持。慎用！</strong></p>\n<p>其实还可以更快， <code>Linux</code>  下  <code>sys/mman.h</code>  中存在函数  <code>mmap</code> ， <code>scanf</code>  底层实现时调用的就是  <code>mmap</code>  函数，其作用是把文件映射进内存，这里仅仅给出代码，有兴趣的同学可以自行查阅有关资料。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/mman.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> Inputs <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">io</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">mmap</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span> PROT_READ<span class=\"token punctuation\">,</span> MAP_PRIVATE<span class=\"token punctuation\">,</span> <span class=\"token function\">fileno</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">void</span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> u<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>s <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">++</span>s<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>s <span class=\"token operator\">></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>u<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>s<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token operator\">*</span>u <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">int</span> <span class=\"token function\">scan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">int</span> Hibiki <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> v <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>s <span class=\"token operator\">&lt;</span> <span class=\"token number\">48</span><span class=\"token punctuation\">)</span> v <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>s<span class=\"token operator\">++</span> <span class=\"token operator\">^</span> <span class=\"token number\">45</span> <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>s <span class=\"token operator\">></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> Hibiki <span class=\"token operator\">=</span> Hibiki <span class=\"token operator\">*</span> <span class=\"token number\">10</span> <span class=\"token operator\">+</span> <span class=\"token operator\">*</span>s<span class=\"token operator\">++</span> <span class=\"token operator\">-</span> <span class=\"token number\">48</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> Hibiki <span class=\"token operator\">*</span> v<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><hr />\n<p>有人喜欢用  <code>isdigit</code>  宏，但这个宏在本机测试上的确更慢了，这个宏的效率还有待研究。</p>\n<h3 id=\"输出优化\"><a class=\"anchor\" href=\"#输出优化\">#</a> 输出优化</h3>\n<p>输出优化并不是十分常用，因为很少有题目要求大量输出，这里仍然给出代码。（第 4 行以后再说）</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">26</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> tp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        a<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>tp<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x <span class=\"token operator\">%</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        x <span class=\"token operator\">/=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> tp<span class=\"token punctuation\">;</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token function\">putchar</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>如果你按照上面的代码打，那只能说明你的想象力不够， <code>fwrite</code>  扑进  <code>fread</code>  的怀里失声痛哭。 <code>fwrite</code>  的优势被你完美地抛弃了，取而代之的是逐字符输出的  <code>putchar</code> 。</p>\n<p>函数原形：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>size_t <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>buffer<span class=\"token punctuation\">,</span> size_t size<span class=\"token punctuation\">,</span> size_t count<span class=\"token punctuation\">,</span> FILE <span class=\"token operator\">*</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>作用：把  <code>buffer</code>  中的数据拆成大小为  <code>size</code>  个字节的数据，输出前  <code>count</code>  个到  <code>stream</code>  中，实际成功写入的大小为  <code>size</code>  的数据块数目。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">namespace</span> Ostream <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> BUF <span class=\"token operator\">=</span> <span class=\"token number\">50000000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span>BUF<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>h <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> ch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    h <span class=\"token operator\">==</span> buf <span class=\"token operator\">+</span> BUF <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> BUF<span class=\"token punctuation\">,</span> <span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">*</span>h<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> ch<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">putint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">static</span> <span class=\"token keyword\">char</span> _buf<span class=\"token punctuation\">[</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span>_buf<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//(*)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>s <span class=\"token operator\">=</span> _buf<span class=\"token punctuation\">;</span> <span class=\"token operator\">*</span>s<span class=\"token punctuation\">;</span> s<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> h <span class=\"token operator\">-</span> buf<span class=\"token punctuation\">,</span> <span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>有人也许会说，上面的代码的 (*) 处还可以优化，但这个优化的意义并不大，当然，也可以优化。</p>\n<p>下面是测试：</p>\n<p>(<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding=\"application/x-tex\">n = 5 \\times 10^6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span> , rand)</p>\n<p>Clock Rate: 3.70 GHz</p>\n<p>RAM: 4 GB</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>编译器</th>\n<th>时间 (ms)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>printf</code></td>\n<td>G++ 5.4.0</td>\n<td>21278</td>\n</tr>\n<tr>\n<td><code>sprintf</code> + <code>puts</code></td>\n<td>G++ 5.4.0</td>\n<td>21426</td>\n</tr>\n<tr>\n<td>纯  <code>sprintf</code>  不输出</td>\n<td>G++ 5.4.0</td>\n<td>540</td>\n</tr>\n<tr>\n<td><code>fprintf(stdin)</code></td>\n<td>G++ 5.4.0</td>\n<td>26037</td>\n</tr>\n<tr>\n<td><code>putchar</code></td>\n<td>G++ 5.4.0</td>\n<td>98556</td>\n</tr>\n<tr>\n<td><code>sprintf</code> + <code>fwrite</code></td>\n<td>G++ 5.4.0</td>\n<td>607</td>\n</tr>\n</tbody>\n</table>\n<p>由上表得， <code>sprintf</code>  的复杂度并不高， <code>fwrite</code>  也没有给  <code>fread</code>  丢脸。而  <code>fprintf</code>  的表现却让人大跌眼镜。 <code>getchar</code>  的结果很可能具有偶然性，反正上面的数据是在小编的机器上用同一组随机数测的。</p>\n<h2 id=\"位运算\"><a class=\"anchor\" href=\"#位运算\">#</a> 位运算</h2>\n<p>在很多时候，我们会听到很多有关位运算的追捧，像 “位运算的常数很小，比加减法还要快”。这是真的吗？</p>\n<h3 id=\"左移和右移的天上地下\"><a class=\"anchor\" href=\"#左移和右移的天上地下\">#</a> 左移和右移的天上地下</h3>\n<p>下面有两段代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    x <span class=\"token operator\">&lt;&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    x <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>它们理论上是等价的，但 g++ 翻译成汇编后呢？</p>\n<p>两段代码的汇编代码是一样的！下面是  <code>x&lt;&lt;=1</code>  和  <code>x*=2</code>  被翻译后的代码。</p>\n<pre><code class=\"language-assembly\">addl    %eax, %eax\n</code></pre>\n<p>它等价于  <code>a=a+a</code> 。是不是被打脸了，响不响，痛不痛，红不红，痒不痒…… 好吧，从上面的例子可以看出，某些时候自作聪明的优化并没有任何用。</p>\n<p>那乘以 4 呢？翻译后的代码还是一样的：</p>\n<pre><code class=\"language-assembly\">sall    $2, %eax\n</code></pre>\n<p>上面的代码等价于  <code>x&lt;&lt;=2</code> 。现在死心了吧。</p>\n<p>或许你还执着于  <code>x*=10</code> 。这次翻译后的汇编代码终于不一样了，下面是  <code>x*=10</code>  的汇编代码（ <code>-O2</code>  优化）：</p>\n<pre><code class=\"language-assembly\">leal    (%eax,%eax,4), %eax\naddl    %eax, %eax\n</code></pre>\n<p>只有两条指令：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x<span class=\"token operator\">=</span>x<span class=\"token operator\">+</span>x<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token comment\">// 别看是加法和乘法，却是一条指令完成</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>x<span class=\"token operator\">=</span>x<span class=\"token operator\">+</span>x   <span class=\"token comment\">// 加法还不容易吗</span></pre></td></tr></table></figure><p>那些喜欢用  <code>x=(x&lt;&lt;3)+(x&lt;&lt;1)</code>  的人请自重。</p>\n<p>那是不是说位运算一无所用呢？并不是，在除法方面有不少用处。</p>\n<p>右移的汇编代码：</p>\n<pre><code class=\"language-assembly\">  movl    _x, %eax\n  sarl    %eax\n  movl    %eax, _x\n  movl    _x, %eax\n</code></pre>\n<p>除以 2 的代码：</p>\n<pre><code class=\"language-assembly\">  movl    _x, %eax\n  movl    %eax, %edx  ;(del)\n  shrl    $31, %edx   ;(del)\n  addl    %edx, %eax  ;(del)\n  sarl    %eax\n  movl    %eax, _x\n  movl    _x, %eax\n</code></pre>\n<p>整整多了三行。</p>\n<p>但这种情况仅限于有符号的整数，因为有符号的整数的右移和除法不是同一个东西，编译器还需要修正一下。<br />\n如果用的是  <code>unsigned</code>  类型，那汇编代码又一样了。</p>\n<h3 id=\"mod-和-and-的战争\"><a class=\"anchor\" href=\"#mod-和-and-的战争\">#</a> Mod 和 And 的战争</h3>\n<p>下面是  <code>x%2</code>  的代码（ <code>-O2</code> ）：</p>\n<pre><code class=\"language-assembly\">  movl    _x, %eax\n  movl    $LC0, (%esp)\n  movl    %eax, %edx   ;(del)\n  shrl    $31, %edx    ;(del)\n  addl    %edx, %eax   ;(del)\n  andl    $1, %eax\n  subl    %edx, %eax   ;(del)\n  movl    %eax, 4(%esp)\n  movl    %eax, _x\n</code></pre>\n<p>那  <code>x&amp;1</code>  呢？少了 4 条语句（ <code>-O2</code> ）：</p>\n<pre><code class=\"language-assembly\">  movl    _x, %eax\n  movl    $LC0, (%esp)\n  andl    $1, %eax\n  movl    %eax, 4(%esp)\n  movl    %eax, _x\n</code></pre>\n<h3 id=\"xor-和-temp-的故事\"><a class=\"anchor\" href=\"#xor-和-temp-的故事\">#</a> Xor 和 temp 的故事</h3>\n<p>相信大家在学交换两个变量的值的时候一定会先学习所谓的 “三变量交换法”，然后就被异或取代了。</p>\n<p>下面是异或（ <code>a^=b^=a^=b</code> ）的汇编：</p>\n<pre><code class=\"language-assembly\">  movl    _b, %edx\n  movl    _a, %eax\n  xorl    %edx, %eax\n  xorl    %eax, %edx\n  xorl    %edx, %eax\n  movl    %eax, _a\n  xorl    %eax, %eax\n  movl    %edx, _b\n</code></pre>\n<p>有  <code>movl</code>  指令和  <code>xorl</code>  指令各 4 条。<br />\n那三变量交换法（ <code>int t=a; a=b, b=t;</code> ）呢？</p>\n<pre><code class=\"language-assembly\">  movl    _a, %eax\n  movl    _b, %edx\n  movl    %eax, _b\n  xorl    %eax, %eax\n  movl    %edx, _a\n</code></pre>\n<p>从此，有 temp 再没有异或。</p>\n<h3 id=\"神奇的位运算技巧\"><a class=\"anchor\" href=\"#神奇的位运算技巧\">#</a> 神奇的 “位运算技巧”</h3>\n<p>网上有很多奇奇怪怪的方法，例如取绝对值  <code>(n^(n&gt;&gt;31))-(n&gt;&gt;31)</code> ，取两个数的最大值  <code>b&amp;((a-b)&gt;&gt;31)|a&amp;(~(a-b)&gt;&gt;31)</code> ，取两个数的最小值  <code>a&amp;((a-b)&gt;&gt;31)|b&amp;(~(a-b)&gt;&gt;31)</code> 。</p>\n<p>喜欢用上面代码的人难道没有自己亲自数一数上面有多少条位运算的指令吗？</p>\n<p>但凡事没有绝对，还是有一些优秀的例子的：</p>\n<p>取<strong>二进制下</strong>最后一个  <code>1</code>  和后面的  <code>0</code> ：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">lowbit</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>判断一个数是不是 2 的幂：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token operator\">:</span><span class=\"token boolean\">false</span></pre></td></tr></table></figure><h3 id=\"xor-和网络流的故事\"><a class=\"anchor\" href=\"#xor-和网络流的故事\">#</a> Xor 和网络流的故事</h3>\n<p>还记得网络流的反向弧？通常某些人喜欢在结构体中新建一个变量来表示这条边的反向弧编号。但这样不免有些浪费，因为在插入新边的时候，我们一般会把两条互为反向弧的边相邻插入，有一个有趣的性质可以完美地解决这个问题：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>x</pre></td></tr></table></figure><p>也就是说，我们可以用异或节省下一个空间。</p>\n<p>那在汇编中呢？异或本来就是逻辑运算，一条指令  <code>xorl $1, _x</code>  搞定，但如果用另一个变量呢？编译器需要对变量进行初始化，还多了一条指令。</p>\n<h2 id=\"条件语句\"><a class=\"anchor\" href=\"#条件语句\">#</a> 条件语句</h2>\n<p>相信条件语句会在程序中经常出现，而且也是不可避免的，谁知道，这么死板的事情还可以再优化。</p>\n<h3 id=\"if-和-的故事\"><a class=\"anchor\" href=\"#if-和-的故事\">#</a>  <code>if</code>  和  <code>?:</code>  的故事</h3>\n<div class=\"note warning\">\n<p>编者注：<strong>原文内容存在错误，已删除。</strong></p>\n</div>\n<blockquote>\n<p><strong>if-else 与  <code>?:</code>  运算符本质上相同，大多数情况下所产生的汇编代码完全相同。</strong></p>\n<blockquote>\n<p>对于下面的两段代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"1\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>网上有人说，三目运算符比  <code>if</code>  语句快，所以第二段代码就比第一段代码快。</p>\n<p>实际上汇编代码是一模一样的，所以运行时间也是一样的。</p>\n<p><strong>摘自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvemhhb2ppbnhpL29wdGltaXpl\">浅谈底层常数优化及编译器优化 - zhaojinxi 的博客 - 洛谷博客</span></strong></p>\n</blockquote>\n<p><strong> <code>?:</code>  运算符并不会消除分支预测。</strong></p>\n<p>分支预测的原理，是在 if 括号内部的判断语句未执行完成时，<strong>在另一线程中</strong>预测一条分支执行接下来的语句。当判断语句执行完毕时，若执行结果与预测相同，则继续执行该分支语句；若执行结果与预测不同，则重新执行另一分支语句。<strong>分支预测可以充分发挥 CPU 的多线程性能</strong>，避免多余的等待。</p>\n<p>分支预测的效率取决于 CPU 的设计。<strong>在大部分情况下，分支预测能加快运算速度</strong>，除非分支预测的准确度极低。毕竟 CPU 的设计者也不是傻子。</p>\n<p>分享一篇不错的关于分支预测的文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzMwMDk3NTg2NC9hbnN3ZXIvMTgwNTU1ODAyMA==\">为什么很多程序员不用 switch，而是大量的 if...else if ...？ - 是 Yes 呀的回答 - 知乎</span></p>\n</blockquote>\n<hr />\n<p>下面的内容某些 OI 比赛不支持。<strong>慎用</strong>！</p>\n<p>gcc 存在内置函数： <code>__builtin_expect(!!(x), tf)</code></p>\n<p>当  <code>tf</code>  为  <code>true</code>  时表示  <code>x</code>  非常可能为  <code>true</code> ，反之同理。</p>\n<p>用法： <code>if(__builtin_expect(!!(x), tf))</code></p>\n<blockquote>\n<p>编者附：</p>\n<p>而  <code>GCC</code>  提供了一个内建函数  <code>__builtin_expect</code> ，通过分支预测提高效率，将接下来运行的可能性较大的代码放在靠前的位置，减少指令跳转，这样保证了空间局部性，可以减少 cache miss。但经过测试后发现， <code>__builtin_expect</code>  仅在开启  <code>-O2</code>  优化下有效。</p>\n<p>例如下面的代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdlib></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>       <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">2333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>       <span class=\"token keyword\">int</span> cnt1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cnt2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>               <span class=\"token operator\">++</span>cnt1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>           <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>               <span class=\"token operator\">++</span>cnt2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\\n\"</span><span class=\"token punctuation\">,</span> cnt1<span class=\"token punctuation\">,</span> cnt2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdlib></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token number\">2333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">int</span> cnt1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> cnt2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">1000000000</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           <span class=\"token keyword\">int</span> t <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>           <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">__builtin_expect</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>               <span class=\"token operator\">++</span>cnt1<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>           <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>               <span class=\"token operator\">++</span>cnt2<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>       <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\\n\"</span><span class=\"token punctuation\">,</span> cnt1<span class=\"token punctuation\">,</span> cnt2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>使用  <code>__builtin_expect (t &lt; 10, false)</code>  后，编译器把  <code>else</code>  后的语句放到了紧跟着前面的语句的位置，而当  <code>t &lt; 10</code>  为  <code>true</code>  时才进行跳转。</p>\n<p><strong>摘自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvemhhb2ppbnhpL29wdGltaXpl\">浅谈底层常数优化及编译器优化 - zhaojinxi 的博客 - 洛谷博客</span></strong></p>\n</blockquote>\n<hr />\n<h3 id=\"switch-和-if-else-的故事\"><a class=\"anchor\" href=\"#switch-和-if-else-的故事\">#</a>  <code>switch</code>  和  <code>if-else</code>  的故事</h3>\n<p>下面有两段代码，你觉得那段更快呢？</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    x<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    x <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    x <span class=\"token operator\">/=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    x <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        x<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        x <span class=\"token operator\">*=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        x <span class=\"token operator\">/=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        x <span class=\"token operator\">>>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>显然地，下面的代码更快，因为上面的代码需要逐条判断，而下面的代码直接跳转。</p>\n<p>那是不是所有  <code>switch</code>  都比  <code>if</code>  快呢？凡事没有绝对，当  <code>switch</code>  遇到  <code>default</code>  的时候，整个程序的效率就会大打折扣，因为它又回到了  <code>if</code>  的无脑判断模式。再比如，当  <code>if</code>  用来判断区间的时候就比  <code>switch</code>  快， <code>if</code>  只需要做三次逻辑运算（两条判断，一条逻辑与），而  <code>switch</code>  呢？我就呵呵一笑。</p>\n<h3 id=\"短路的故事\"><a class=\"anchor\" href=\"#短路的故事\">#</a> 短路的故事</h3>\n<p>此短路非彼短路，它指的是一种运算符的特性。</p>\n<p>我们常用的逻辑运算符，例如  <code>&amp;&amp;</code>  和  <code>||</code>  都是短路运算符。什么意思呢？比如在运算  <code>A &amp;&amp; B</code>  时，如果发现 A 已经为  <code>false</code> ，就不会再计算 B。</p>\n<p>现在你能解释第一章中留下的问题了吗？</p>\n<p><code>(tf)&amp;&amp;(sum=-sum);</code>  当  <code>tf</code>  为  <code>true</code>  的时候，会执行后面的  <code>sum=-sum</code> ，如果  <code>tf</code>  为  <code>false</code> ，则不会执行后面的  <code>sum=-sum</code> 。</p>\n<p>等价于如下语句：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">)</span> sum <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>sum<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><hr />\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>当  <code>ch='-'</code>  时，会执行后面的  <code>ch=getchar()</code> ，因为  <code>getchar</code>  一般不会等于  <code>0</code> （如果不放心可以写成  <code>tf=((ch=='-')&amp;&amp;((ch=getchar()),true))</code> ），因此  <code>tf</code>  的结果等于  <code>true</code> 。</p>\n<p>当  <code>ch!='-'</code>  时，不会执行后面的  <code>ch=getchar()</code> ， <code>tf</code>  的值为  <code>false</code> 。</p>\n<p>等价于如下语句：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    tf <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>总结一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> B<span class=\"token punctuation\">;</span> ⇔ <span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> B<span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> C<span class=\"token punctuation\">;</span> ⇔ A<span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span>C</pre></td></tr></table></figure><p>为什么？详情参见下一小节。</p>\n<p>如果短路运算符只能改写  <code>if</code>  语句，那这里就不会浪费这么多篇幅来介绍这个东西。事实上，这个东西比我们想象得有用得多。看下面两段代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> t <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">/</span> RAND_MAX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.2</span> <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> t <span class=\"token operator\">=</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> t <span class=\"token operator\">/</span> RAND_MAX <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>你认为哪一份代码会更快？</p>\n<p>好像没什么区别对吧。但对于 CPU 来说很有区别。第一段代码中的  <code>t / RAND_MAX &lt; 0.2</code>  为  <code>true</code>  的概率约为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>20</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">20\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span>，但  <code>t!=0</code>  为 <code>true</code>  的概率约为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mrow><mi>R</mi><mi>A</mi><mi>N</mi><mi>D</mi><mi mathvariant=\"normal\">_</mi><mi>M</mi><mi>A</mi><mi>X</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{RAND\\_MAX}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.407108em;vertical-align:-0.5619999999999999em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.845108em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mtight\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5619999999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，明显小于 20%。<br />\n因此，如果把计算一个不含逻辑运算符布尔表达式的计算次数设为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 次，设计算了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 次，则对于第一段代码，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的数学期望为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>65</mn></mrow><annotation encoding=\"application/x-tex\">65</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mord\">5</span></span></span></span>，但对于第二段代码，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi></mrow><annotation encoding=\"application/x-tex\">X</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span></span></span></span> 的数学期望为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mn>2</mn><mo>×</mo><mo stretchy=\"false\">(</mo><mi>R</mi><mi>A</mi><mi>N</mi><mi>D</mi><mi mathvariant=\"normal\">_</mi><mi>M</mi><mi>A</mi><mi>X</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mrow><mi>R</mi><mi>A</mi><mi>N</mi><mi>D</mi><mi mathvariant=\"normal\">_</mi><mi>M</mi><mi>A</mi><mi>X</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{2\\times (RAND\\_MAX-1)}{RAND\\_MAX}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.6139999999999999em;vertical-align:-0.5619999999999999em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0519999999999998em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mtight\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.527em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mbin mtight\">×</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mtight\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">A</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07847em;\">X</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5619999999999999em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，远远大于第一段代码。</p>\n<p>总结一下，</p>\n<ul>\n<li>遇到  <code>A&amp;&amp;B</code>  时，优先把可能为  <code>false</code>  的表达式放在前面。</li>\n<li>遇到  <code>A||B</code>  时，优先把可能为  <code>true</code>  的表达式放在前面。</li>\n</ul>\n<h3 id=\"布尔表达式和逗号运算符的故事\"><a class=\"anchor\" href=\"#布尔表达式和逗号运算符的故事\">#</a> 布尔表达式和逗号运算符的故事</h3>\n<p>为什么要专门设置这么一小节呢？<br />\n因为很多人喜欢用  <code>if(x==true)</code> ，直接用  <code>if(x)</code>  就好了。还有  <code>x==false</code>  和  <code>!x</code> ，它们也是等价的。</p>\n<p>现在，请另一位大佬隆重登场：逗号运算符。</p>\n<p>若干条语句可以通过逗号运算符合并成一条语句。<br />\n例如  <code>t=a;a=b;b=t;</code>  可以写成  <code>t=a,a=b,b=t;</code>  有什么用吗？它的返回值。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>猜一猜，上面的语句执行完后  <code>x​</code>  的值是多少？</p>\n<p>答案是 9。没错，逗号运算符的返回值就是最后一个的值。</p>\n<p>现在可以解释上一小节留下总结了吧。</p>\n<p><code>A&amp;&amp;(B,1)||C</code> ：当  <code>A</code>  为  <code>true</code>  时会执行  <code>(B,1)</code> ，返回值为  <code>true</code> ，因此  <code>A&amp;&amp;(B,1)</code>  的返回值为  <code>true</code> ，因此不会执行  <code>C</code> ，当  <code>A</code>  为  <code>false</code>  时，不会执行  <code>(B,1)</code> ，且  <code>A&amp;&amp;(B,1)</code>  的值为  <code>false</code> ，因此会执行  <code>C</code> 。</p>\n<h2 id=\"standard-template-library\"><a class=\"anchor\" href=\"#standard-template-library\">#</a> Standard Template Library</h2>\n<p>如果能熟练使用 STL，则可以大大减小代码复杂度，提高对于部分人的可读性（前提是那个人也会 STL）。但在很多 OI 比赛中，STL 会成为性能瓶颈（不仅仅是常数瓶颈），而且要明白：对于 STL 来说， <code>-O2</code>  的开与否带来的不仅仅是几毫秒的差，而是一种蜕变！</p>\n<h3 id=\"容器\"><a class=\"anchor\" href=\"#容器\">#</a> 容器</h3>\n<h4 id=\"完全连续容器\"><a class=\"anchor\" href=\"#完全连续容器\">#</a> 完全连续容器</h4>\n<p>在 STL 中，唯一的真正意义上的完全连续容器应该只有  <code>vector</code>  和  <code>bitset</code>  了，其中， <code>vector</code>  中的所有元素都是连续的，但它是怎么做到的？在某些编译器中，它实现内存分配的方法是当前的容量不足时，申请一块当前容量 2 倍的新内存空间，然后将所有的老元素全部拷贝到新内存中，添加大量元素的时候的花费的惊人的大。和  <code>allocator</code>  的时间复杂度一样。</p>\n<p>函数原型： <code>extern void *realloc(void *memory, unsigned int newsize);</code></p>\n<p>作用：把  <code>memory</code>  开头的指针所占用的空间修改成  <code>newsize</code>  个字节大小。</p>\n<p>内部是怎么实现的？在内存中寻找一片足够大的连续空间，然后把原来地方的数据拷到新空间中。</p>\n<p>听着就觉慢，因此在  <code>vector</code>  需要存储大量数据的时候，尽量不要用  <code>push_back</code> ，直接用  <code>resize(size_type size)</code>  函数改变大小，或者先用  <code>reserve(size_type size)</code>  函数预留空间，然后再用  <code>push_back</code>  方法，这样能尽可能地降低其弊端。</p>\n<p>但由于其是完全连续容器，因此在查找的时候效率和普通数组没有太大区别。</p>\n<p>邻接表有两种实用的方法，一种是前向星（有人也叫向前星，这里以百度百科为准），另一种就是用  <code>vector</code> 。</p>\n<p>尽管  <code>vector</code>  修改大小的时候会很浪费时间，但要知道， <code>vector</code>  可是一个完全连续容器，相比前向星好了不知道多少（从一个数组里跳来跳去）。</p>\n<p>在某些需要频繁访问边（例如网络流和最短路），遇到很稠密的图的时候， <code>vector</code>  完全连续的作用就被发挥到了最大，而动态开辟空间的消耗也已被降到了最低最低，尤其是在开了  <code>-O2</code>  优化的时候。</p>\n<p>下面分别是  <code>vector</code>  和前向星跑网络流（ISap）的用时。（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>=</mo><mn>50</mn><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">m=50n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">n</span></span></span></span>）</p>\n<table>\n<thead>\n<tr>\n<th>存图方法</th>\n<th>编译器</th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>4</mn></msup></mrow><annotation encoding=\"application/x-tex\">n=10^4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span></span></span></span></th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">n=10^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span></th>\n<th><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>=</mo><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">n=5 \\times 10^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>vector</code></td>\n<td>G++ 5.4.0</td>\n<td>501ms</td>\n<td>1108ms</td>\n<td>5103ms</td>\n</tr>\n<tr>\n<td><code>vector</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>365ms</td>\n<td>794ms</td>\n<td>3855ms</td>\n</tr>\n<tr>\n<td>前向星</td>\n<td>G++ 5.4.0</td>\n<td>478ms</td>\n<td>1025ms</td>\n<td>5111ms</td>\n</tr>\n<tr>\n<td>前向星</td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>477ms</td>\n<td>1017ms</td>\n<td>5109ms</td>\n</tr>\n</tbody>\n</table>\n<p>十分明显地，开了  <code>-O2</code>  优化的  <code>vector</code>  跑得飞快，而随着数据大小的上升，vector 的速度也越来越快。</p>\n<p><code>bitset</code>  的大小是在编译时就被固定了，因此不会出现和  <code>vector</code>  一样浪费时间的情况。它的最大作用是节约空间。那里节约空间了？要知道，C++ 的任何类型都至少占用一个字节，包括  <code>bool</code> 。因此， <code>bool</code>  会浪费七个字节的空间。但其实  <code>bitset</code>  也是可以自己实现的。</p>\n<div class=\"note warning\">\n<p>编者注：<strong>原文内容存在争议，已删除。<strong>通常情况下，</strong> <code>int</code>  运算速度比  <code>long long</code>  快不少</strong>。</p>\n</div>\n<h4 id=\"部分连续容器\"><a class=\"anchor\" href=\"#部分连续容器\">#</a> 部分连续容器</h4>\n<p>如果你认为  <code>queue</code> （一种容器适配器）和  <code>deque</code>  应该在上一章出现，那你就错了。事实上，它们并不是完全连续容器。它们内部的实现有点诡谲。为什么这样说呢？因为它们在内存中是部分连续的，也就是说，当内存不够的时候，它们就会再申请一段，然后再连接过去，因此在内存中，它们是不完全连续的，是多个内存块组成的，每个块中存放的元素连续内存，而内存块又像链表一样连接起来。</p>\n<p>因为有了这种方法，它们不需要每次申请空间时，都像  <code>vector</code>  一样复制原来的元素。而是可以在常数时间内完成这个操作。因为它们在内存中是不完全连续的，因此速度不会太低。也可以很好地避免循环队列大小估计错误的可能。</p>\n<p>但要注意是否会出现对空队列取队首或出队的操作，而且由于每次都会申请一大段的连续空间，因此需要注意空间的开销。</p>\n<p>当我做完测试后却大吃一惊。</p>\n<table>\n<thead>\n<tr>\n<th>实现方法</th>\n<th>编译器</th>\n<th>时间</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>arr:  <code>queue</code></td>\n<td>G++ 5.4.0</td>\n<td>25 ms</td>\n</tr>\n<tr>\n<td>arr:  <code>queue</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>15 ms</td>\n</tr>\n<tr>\n<td>stl:  <code>queue</code></td>\n<td>G++ 5.4.0</td>\n<td>433 ms</td>\n</tr>\n<tr>\n<td>stl:  <code>queue</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>31ms</td>\n</tr>\n<tr>\n<td>arr:  <code>deque</code></td>\n<td>G++ 5.4.0</td>\n<td>16 ms</td>\n</tr>\n<tr>\n<td>arr:  <code>deque</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>4 ms</td>\n</tr>\n<tr>\n<td>stl:  <code>deque</code></td>\n<td>G++ 5.4.0</td>\n<td>850 ms</td>\n</tr>\n<tr>\n<td>stl:  <code>deque</code></td>\n<td>G++ 5.4.0 ( <code>-O2</code> )</td>\n<td>58 ms</td>\n</tr>\n</tbody>\n</table>\n<p>为什么会出现这种情况？</p>\n<p>其实  <code>queue</code>  默认实现方法是封装  <code>deque</code> ，通过更改模板参数可以使用  <code>vector</code>  和  <code>list</code>  实现。而  <code>deque</code>  呢？由于其内存不完全连续，因此导致了过多的内存跳转，浪费了大量时间，由此可得，部分连续容器和完全连续容器的效率差极大。</p>\n<p>因此，在能使用连续空间的情况下，尽可能地使用完全连续容器。</p>\n<h4 id=\"节点容器\"><a class=\"anchor\" href=\"#节点容器\">#</a> 节点容器</h4>\n<p>节点容器就比较多了。常见的  <code>map</code> ， <code>set</code>  和  <code>list</code>  都属于它的范畴。</p>\n<p>其中， <code>list</code>  有点像  <code>deque</code> ，和其原理差不多，只是内存块的大小恒为 1，插入和删除都可以在常数时间内完成。唯一的缺点是不支持二分查找和随机访问。而且由于  <code>list</code>  是不连续容器，因此它的查询会导致内存频繁地跳转，因此只有在经常需要增加或删除的时候才会考虑使用  <code>list</code> 。</p>\n<p><code>set</code>  和  <code>map</code>  属于关联容器，关联容器支持高效的关键字查找和访问，内部是以一种叫做红黑树的 BST 实现的，但它太复杂了，它的插入有 5 种情况，删除有 6 种情况，是 “当今信息界中平均速度最快的 BST”，比我们在 OI 比赛中有能力在时间内手动实现的 BST 快得多。</p>\n<p>因此，  <code>set</code>  和  <code>map</code>  的查询时间和红黑树的时间复杂度一致，基本上所有操作都是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>log</mi><mo>⁡</mo><mi>s</mi><mi>i</mi><mi>z</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">\\log size</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">e</span></span></span></span> 级别的，包括迭代器的  <code>++</code>  和  <code>—</code>  操作，它们在 BST 中相当于求前驱和后继。而且由于它们是节点容器，因此在内存中是断续的，反复地跳转可能导致更多的开销。</p>\n<p>但当需要自己实现部分（不包括一些特别的功能，例如求排名）平衡树的功能时，用  <code>set</code>  和  <code>map</code>  一般会比手写更优。</p>\n<p>如果遇到了不能用  <code>set</code>  和  <code>map</code>  的情况，并不推荐用 Splay，因为它的常数太大了，这里推荐一种极好的 BST: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTU1MDk3L2FydGljbGUvZGV0YWlscy84MzM3ODE2Ng==\">替罪羊树 (Scapegoat Tree)</span>，它的思想非常简单：当且仅当某棵子树的不平衡度超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span> 时，暴力重构整棵子树，从而避免了旋转的操作。</p>\n<hr />\n<div class=\"note info\">\n<p>本文转载自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTU1MDk3L2FydGljbGUvZGV0YWlscy84MzA4MzA1MQ==\">https://blog.csdn.net/qq_40155097/article/details/83083051</span></p>\n<p>原作者：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTU1MDk3\">Victor Miller</span></p>\n<p>版权声明：本文为 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwMTU1MDk3\">Victor Miller</span> 原创文章，遵循 <span class=\"exturl\" data-url=\"aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvNC4wLw==\">CC 4.0 BY-SA</span> 版权协议，转载请附上原文出处链接和本声明。</p>\n</div>\n<p>推荐阅读：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvZW5jb3JlL2lvLXlvdS1odWEtbmVpLXN1by1zaGk=\">浅谈 C++ IO 优化 —— 读优输优方法集锦 - encore 的博客 - 洛谷博客</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvemhhb2ppbnhpL29wdGltaXpl\">浅谈底层常数优化及编译器优化 - zhaojinxi 的博客 - 洛谷博客</span></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://fidel.js.org/2020/11/15/2020-CSPS-NOIP/",
            "url": "https://fidel.js.org/2020/11/15/2020-CSPS-NOIP/",
            "title": "CSP-S 2020 游记 & NOIP 2020 爆零记",
            "date_published": "2020-11-14T16:00:00.000Z",
            "content_html": "<blockquote>\n<p><s>不会真有人现在才写游记吧（</s></p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"csp-s1\"><a class=\"anchor\" href=\"#csp-s1\">#</a> CSP-S1</h1>\n<p><s>没啥好说的，莫名其妙就 72.5 分了。</s></p>\n<p>居然用高考答题卡考 CSP，<s>不愧是 €€£</s>。</p>\n<p>阅读程序出现了史无前例的 99 行程序，<s>就差破个百了</s>。</p>\n<p>C++：终于想起我是门面向对象语言了？</p>\n<p>考后打了张 Excel 算了下分，居然发现最后 5 分钟蒙对了两道 4 分题，总计 8 分！<s>（虽然说就算没蒙对也能过分数线）</s></p>\n<h1 id=\"csp-s2\"><a class=\"anchor\" href=\"#csp-s2\">#</a> CSP-S2</h1>\n<p>考场：广东大学附属中学（大学城校区）</p>\n<h2 id=\"开局出师不利\"><a class=\"anchor\" href=\"#开局出师不利\">#</a> 开局：出师不利</h2>\n<p><s>某位同学高兴地一路狂奔…… 然后扑街了。（开幕雷击）</s></p>\n<p>我也没好哪去，跟着人群走，走到 4 楼才发现走错楼了……</p>\n<p>开考前 15 分钟，才发现没打印疫情须知，还好监考老师有，<s>差点当场退役</s>。</p>\n<p>匆匆忙忙填完须知，监考老师在名单上看了又看，我才意识到走到隔壁考场去了……</p>\n<p>这次考场不能带水进去，可能是怕由于打翻水壶而引发的 “机房惨案”。</p>\n<p>考试机器居然装的是 Windows 10（神州网信版）！AMD 6-Core CPU! 8 GiB Memory!</p>\n<p>先习惯性在机子里到处翻翻，在 C 盘发现一个神秘文件夹，文件夹里有一压缩包，压缩包里又有一压缩包（迷惑），里面居然有 Sublime Text 3 的安装包！<s>可把我激动坏了。</s></p>\n<p>考试机默认装了 Dev C++ 5.9，然而在刚刚的压缩包里找找就会找到一个 Dev C++ 5.11 的安装包（迷惑 x2）。（即便如此也不能阻止我 NOIP 上由于 <strong>Dev C++ 过于智能而导致函数没写返回类型也不会报错</strong>的 CE 爆零惨案。）</p>\n<p>以及，与以往不同的是，<s>难得良心的</s> CCF 居然给了一个检查选手目录正确性的 EXE 程序，<s>再也不用担心因建错目录而爆零了（事实证明，该爆的零总是逃不掉的）</s>。</p>\n<p>桌面名为的 NOI 文件夹里还真有 NOI Linux 的虚拟机，然而并没有时间玩。</p>\n<p>居然没有扫雷，CSP 上玩扫雷的愿望破灭了（（（</p>\n<h2 id=\"开赛逐渐暴躁\"><a class=\"anchor\" href=\"#开赛逐渐暴躁\">#</a> 开赛：逐渐暴躁</h2>\n<p>T1 儒略日转公制日。上来一道大模拟，跳了。</p>\n<p>T3 看起来比较简单，打个大暴力。</p>\n<p>回头想了想 T1，没啥思路。</p>\n<p>（上厕所以获取灵感）</p>\n<p>上完厕所回来还是没思路，开始打 T2。T2 二进制状态压缩，看起来似乎挺简单的，<strong>结果遇到玄学 bug，调半天调不出来，傻了。</strong></p>\n<p>然后回头搞 T1，打了个一直  <code>NextDay</code>  的暴力，最后一个小时分段打表，然而表的大小没打对，大样例也没过。</p>\n<p>最后 15 分钟给 T2 和 T4 输出个样例和随机数。好像 4 个小时也没干啥就结束了。</p>\n<h2 id=\"赛后直呼凉凉\"><a class=\"anchor\" href=\"#赛后直呼凉凉\">#</a> 赛后：直呼凉凉</h2>\n<p>考完试出来居然天已经黑了。</p>\n<p>路上听到有人只做出 T1，T2 输出了个 0（</p>\n<p>听到旁边座位的初中大佬居然做出 300 分！（我太蒻了）</p>\n<p><strong>由于 T2 玄学 bug 没调出来，考完直呼凉凉。</strong></p>\n<p><s>好像学了一个多月的提高组内容，除了快读和分段打表，其余正经的一个没用上（（（</s></p>\n<p>（广州停车位是真的难找）</p>\n<h2 id=\"后续我又活炸了\"><a class=\"anchor\" href=\"#后续我又活炸了\">#</a> 后续：我又活（炸）了</h2>\n<p>第二天洛谷出民间数据，靠着记忆把考场上 T1 的代码打完才想起有 &quot;公开选手代码&quot; 这回事（去年我好像都没见过 &quot;选手代码&quot; 这玩意）。</p>\n<p>拿选手代码在洛谷的民间数据上一测：</p>\n<table>\n<thead>\n<tr>\n<th>T1</th>\n<th>T2</th>\n<th>T3</th>\n<th>T4</th>\n<th>Total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>30 pts</td>\n<td><strong>85 pts (WTF?!)</strong></td>\n<td>10 pts</td>\n<td>0 pts</td>\n<td>125 pts</td>\n</tr>\n</tbody>\n</table>\n<p><s>我可真是谢谢您老 Dev C++ 嘞。</s></p>\n<p>T3 暴力以为用不着  <code>long long</code> （考前看别人博客说  <code>int</code>  比  <code>long long</code>  快不少），于是就没开  <code>long long</code> ，结果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>35</mn><mi>p</mi><mi>t</mi><mi>s</mi><mo>→</mo><mn>10</mn><mi>p</mi><mi>t</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">35 pts \\to 10 pts</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">3</span><span class=\"mord\">5</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">s</span></span></span></span> ……</p>\n<p>最终成绩：</p>\n<table>\n<thead>\n<tr>\n<th>T1</th>\n<th>T2</th>\n<th>T3</th>\n<th>T4</th>\n<th>Total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>30 pts</td>\n<td>95 pts（针不戳）</td>\n<td>10 pts</td>\n<td>0 pts</td>\n<td><strong>135 pts</strong></td>\n</tr>\n</tbody>\n</table>\n<p><strong>GD 一等分数线 150 pts</strong>，我的一等啊…… 我的蓝勾……</p>\n<p><strong>总结：不开  <code>long long</code>  见祖宗。</strong></p>\n<h1 id=\"noip\"><a class=\"anchor\" href=\"#noip\">#</a> NOIP</h1>\n<h2 id=\"before-赛前\"><a class=\"anchor\" href=\"#before-赛前\">#</a> Before 赛前</h2>\n<p>开考前一天跟 HY 的大佬们打了一场<s>被巨佬称为 “便秘比赛” 的</s>模拟水题赛，极其欢乐。</p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/LgvsD6GhC4MVlB5.png\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/OhWycjZG4dzxteJ.png\" alt=\"\" /></p>\n<p>根据约定，我们这些 <s>AKIOI 的</s>高中学长们不能抢首 A，于是……</p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/evyiWEMnVCYahFq.png\" alt=\"\" /></p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/WsMfmUHBi5JGrx9.png\" alt=\"\" /></p>\n<h2 id=\"赛前\"><a class=\"anchor\" href=\"#赛前\">#</a> 赛前</h2>\n<p>加一条命！</p>\n<p>来得挺早，见到了 HY <s>比我小然而比我强</s>的大佬们，还有以前的 OI 老师。</p>\n<p>同一个考场，同一个考室，<s>同样的倒霉运气</s>。</p>\n<p>有了上次的经验，一顿基本操作，解压，装 Sublime Text 3、Dev C++ 5.11，看题。</p>\n<p>T1 图论，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">m \\leq 10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span>，好像暴力能过？吸取教训，开  <code>long long</code> ，大样例全文比对，手造极限数据（我太蒻了不会对拍），<s>然而还是逃脱不了爆零的命运</s>。</p>\n<p>T2 字符串，考前一星期刚好看到 KMP（我太蒻了），想着估计不会考就没往下看……</p>\n<p>T3 SPJ! NOIP 历史上第一次 <strong>Special Judge</strong>!（插播新闻：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Rpc2N1c3Mvc2hvdy8yODQ4ODU=\">SPJ 惨遭 Hack</span>）</p>\n<p>T4 看起来很可做，上暴力。</p>\n<p>最后 1h 纠结做 T2 还是 T3，决定打 T2 部分分，结果暴力没调出来……</p>\n<p>最后 2 分钟开了 NOI Linux 虚拟机玩玩，结果不知道密码（不会有人现在还不知道 <strong>NOI Linux 的密码是  <code>123456</code> </strong> 吧），溜了。</p>\n<h2 id=\"赛后\"><a class=\"anchor\" href=\"#赛后\">#</a> 赛后</h2>\n<p>针不戳！我觉得我 T1 能 AC！</p>\n<p>啥？T1 入度为 0 的点不一定是接收口？</p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/1mS5lxzq2cGsO9P.png\" alt=\"\" /></p>\n<p>CCF 说没坑，那没事了。</p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/2yFtOMqYzixIoHh.png\" alt=\"\" /></p>\n<p>啥？T1 要打高精？</p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/wf4DHhImV2oBeLK.png\" alt=\"\" /></p>\n<p>哦，就 10 分，那没事了。</p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/I4afmrOxN3SiBRh.png\" alt=\"\" /></p>\n<p>啥？我 T1 <strong>函数没写返回值</strong>？</p>\n<p>哦，<strong>CE</strong> 了，那没事了。</p>\n<p><img data-src=\"https://i.loli.net/2020/12/26/RzxL3efmYhKyuqa.png\" alt=\"\" /></p>\n<p>结局：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Rpc2N1c3Mvc2hvdy8yODQ2ODk=\">T1 惨遭爆零</span>。</p>\n<p>最终成绩：</p>\n<table>\n<thead>\n<tr>\n<th>T1</th>\n<th>T2</th>\n<th>T3</th>\n<th>T4</th>\n<th>Total</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0 pts</td>\n<td>0 pts</td>\n<td>0 pts</td>\n<td>35 pts</td>\n<td>35 pts</td>\n</tr>\n</tbody>\n</table>\n<p><strong>总结：没事别用  <code>inline</code> ，多用用 NOI Linux。</strong></p>\n<hr />\n<p>2020 CSP-S 游记 &amp; NOIP 2020 爆零记，完。</p>\n",
            "tags": [
                "杂记",
                "技术"
            ]
        },
        {
            "id": "https://fidel.js.org/2020/10/07/the-new-guide-of-cheating-in-oi/",
            "url": "https://fidel.js.org/2020/10/07/the-new-guide-of-cheating-in-oi/",
            "title": "【转载】蒟蒻的宝书 - 新版骗分导论",
            "date_published": "2020-10-06T16:00:00.000Z",
            "content_html": "<blockquote>\n<p>一年前打 CSP-J 时，学校的信息学老师给了我这篇《蒟蒻的宝书》。正是因为如此，最后我通过骗来的 15 分过了一等线。</p>\n<p>由于原帖及目前网络上的转载贴排版普遍都很难看，因此在此转载并重新排版。</p>\n<p>夹带私货：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5kb2Npbi5jb20vcC01MDA4MTExMDAuaHRtbA==\">宝 藏</span></p>\n</blockquote>\n<span id=\"more\"></span>\n<div class=\"note primary\">\n<p>2020-12-30 更新：所有数学公式已使用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding=\"application/x-tex\">\\LaTeX</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.89883em;vertical-align:-0.2155em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">L</span><span class=\"mspace\" style=\"margin-right:-0.36em;\"></span><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.68333em;\"><span style=\"top:-2.904999em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"mord\"><span class=\"mord textrm mtight sizing reset-size6 size3\">A</span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.15em;\"></span><span class=\"mord text\"><span class=\"mord textrm\">T</span><span class=\"mspace\" style=\"margin-right:-0.1667em;\"></span><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.46782999999999997em;\"><span style=\"top:-2.7845em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord textrm\">E</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2155em;\"><span></span></span></span></span><span class=\"mspace\" style=\"margin-right:-0.125em;\"></span><span class=\"mord textrm\">X</span></span></span></span></span></span> 重写，全文已根据排版标准进行优化。</p>\n</div>\n<p><strong>新 版 骗 分 导 论</strong></p>\n<p><strong>THE NEW GUIDE OF CHEATING IN INFORMATICS OLYMPIAD</strong></p>\n<p><strong>蒟 蒻 的 宝 书</strong></p>\n<hr />\n<p><strong>全网排版最优的《骗分导论》</strong></p>\n<p><strong>转载 &amp; 排版 By Fidel</strong></p>\n<hr />\n<h1 id=\"目录\"><a class=\"anchor\" href=\"#目录\">#</a> 目录</h1>\n<ul>\n<li><a href=\"#%E7%9B%AE%E5%BD%95\">目录</a></li>\n<li>[第 1 章 绪论](# 第 1 章 - 绪论)</li>\n<li>[第 2 章 从无解出发](# 第 2 章 - 从无解出发)\n<ul>\n<li><a href=\"#21-%E6%97%A0%E8%A7%A3%E6%83%85%E5%86%B5\">2.1 无解情况</a></li>\n<li><a href=\"#22-%E6%A0%B7%E4%BE%8B%E7%99%BD%E9%80%81%E7%9A%84%E5%88%86%E6%95%B0\">2.2 样例 —— 白送的分数</a></li>\n</ul>\n</li>\n<li>[第 3 章 “艰苦朴素永不忘”](# 第 3 章 - 艰苦朴素永不忘)\n<ul>\n<li><a href=\"#31-%E6%A8%A1%E6%8B%9F\">3.1 模拟</a></li>\n<li>[3.2 万能钥匙 ——DFS](#32 - 万能钥匙 dfs)</li>\n</ul>\n</li>\n<li>[第 4 章 骗分的关键 —— 猜想](# 第 4 章 - 骗分的关键猜想)\n<ul>\n<li><a href=\"#41-%E5%90%AC%E5%A4%A9%E7%94%B1%E5%91%BD\">4.1 听天由命</a></li>\n<li><a href=\"#42-%E7%8C%9C%E6%B5%8B%E7%AD%94%E6%A1%88\">4.2 猜测答案</a></li>\n<li><a href=\"#43-%E5%AF%BB%E6%89%BE%E8%A7%84%E5%BE%8B\">4.3 寻找规律</a></li>\n<li><a href=\"#44-%E5%B0%8F%E6%95%B0%E6%8D%AE%E6%9D%80%E6%89%8B%E6%89%93%E8%A1%A8\">4.4 小数据杀手 —— 打表</a></li>\n</ul>\n</li>\n<li>[第 5 章 做贪心的人](# 第 5 章 - 做贪心的人)\n<ul>\n<li><a href=\"#51-%E8%B4%AA%E5%BF%83%E7%9A%84%E7%AE%97%E6%B3%95\">5.1 贪心的算法</a></li>\n<li><a href=\"#52-%E8%B4%AA%E5%BF%83%E5%9C%B0%E5%BE%97%E5%88%86\">5.2 贪心地得分</a></li>\n</ul>\n</li>\n<li>[第 6 章 C++ 的福利](# 第 6 章 - c 的福利)\n<ul>\n<li><a href=\"#61-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F\">6.1 快速排序</a></li>\n<li><a href=\"#62-%E5%A6%82%E6%84%8F%E9%87%91%E7%AE%8D%E6%A3%92\">6.2 “如意金箍棒”</a></li>\n</ul>\n</li>\n<li>[第 7 章 “宁为玉碎，不为瓦全”](# 第 7 章 - 宁为玉碎不为瓦全)</li>\n<li>[第 8 章 实战演练](# 第 8 章 - 实战演练)</li>\n<li>[第 9 章 结语](# 第 9 章 - 结语)</li>\n</ul>\n<h1 id=\"第-1-章-绪论\"><a class=\"anchor\" href=\"#第-1-章-绪论\">#</a> 第 1 章 绪论</h1>\n<p>在 OIer 中，有一句话广为流传：</p>\n<p>任何蒟蒻必须经过大量的刷题练习才能成为大牛乃至于神牛。</p>\n<p>这就是著名的 lzn 定理。然而，我们这些蒟蒻们，没有经过那么多历练，却要和大牛们同场竞技，我们该怎么以弱胜强呢？</p>\n<p>答案就是：</p>\n<p><strong>骗分</strong></p>\n<p>那么，骗分是什么呢？骗分就是用简单的程序（比标准算法简单很多，保证蒟蒻能轻松搞定的程序），尽可能多得骗取分数。</p>\n<p>让我们走进这本《新版骗分导论》，来学习骗分的技巧，来挑战神牛吧！</p>\n<h1 id=\"第-2-章-从无解出发\"><a class=\"anchor\" href=\"#第-2-章-从无解出发\">#</a> 第 2 章 从无解出发</h1>\n<h2 id=\"21-无解情况\"><a class=\"anchor\" href=\"#21-无解情况\">#</a> 2.1 无解情况</h2>\n<p>在很多题目中都有这句话：“若无解，请输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>.”</p>\n<p>看到这句话时，骗分的蒟蒻们就欣喜若狂，因为 —— 数据中必定会有无解的情况！那么，只要打出下面这个程序：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>就能得到 10 分，甚至 20 分，30 分！</p>\n<p>举个例子：</p>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDEwNzg=\">文化之旅</span>（NOIP 2012 普及组 第 4 题）</strong></p>\n<p><strong>题目描述</strong></p>\n<p>有一位使者要游历各国，他每到一个国家，都能学到一种文化，但他不愿意学习任何一种文化超过一次（即如果他学习了某种文化，则他就不能到达其他有这种文化的国家）。不同的国家可能有相同的文化。不同文化的国家对其他文化的看法不同，有些文化会排斥外来文化（即如果他学习了某种文化，则他不能到达排斥这种文化的其他国家）。</p>\n<p>现给定各个国家间的地理关系，各个国家的文化，每种文化对其他文化的看法，以及这位使者游历的起点和终点（在起点和终点也会学习当地的文化），国家间的道路距离，试求从起点到终点最少需走多少路。</p>\n<p><strong>输入格式</strong></p>\n<p>第一行为五个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo separator=\"true\">,</mo><mi>K</mi><mo separator=\"true\">,</mo><mi>M</mi><mo separator=\"true\">,</mo><mi>S</mi><mo separator=\"true\">,</mo><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">N,K,M,S,T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>，每两个整数之间用一个空格隔开，依次代表国家个数（国家编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>），文化种数（文化编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>），道路的条数，以及起点和终点的编号（保证 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 不等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>）；</p>\n<p>第二行为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 个整数，每两个整数之间用一个空格隔开，其中第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，表示国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的文化为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>接下来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 行，每行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 个整数，每两个整数之间用一个空格隔开，记第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行的第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">a_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">a_{ij}=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 表示文化 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 排斥外来文化 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 时表示排斥相同文化的外来人），<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">a_{ij}= 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 表示不排斥（注意 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 排斥 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 并不保证 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 一定也排斥 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>）。</p>\n<p>接下来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 行，每行三个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo separator=\"true\">,</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">u,v,d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span>，每两个整数之间用一个空格隔开，表示国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> 与国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 有一条距离为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> 的可双向通行的道路（保证 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> 不等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>，两个国家之间可能有多条道路）。</p>\n<p><strong>输出格式</strong></p>\n<p>一个整数，表示使者从起点国家到达终点国家最少需要走的距离数（如果无解则输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>）。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">2 2 1 1 2\n1 2\n0 1\n1 0\n1 2 10\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">-1\n</code></pre>\n<p>输入 #2</p>\n<pre><code class=\"language-plain\">2 2 1 1 2\n1 2\n0 1\n0 0\n1 2 10\n</code></pre>\n<p>输出 #2</p>\n<pre><code class=\"language-plain\">10\n</code></pre>\n<p><strong>数据范围及提示</strong></p>\n<p>【输入输出样例 1 说明】</p>\n<p>由于到国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 必须要经过国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，而国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 的文明却排斥国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的文明，所以不可能到达国家 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>。</p>\n<p>【输入输出样例 2 说明】</p>\n<p>路线为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>→</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">1 \\to 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>。</p>\n<p>【数据范围】</p>\n<p>对于 20% 的数据，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">2≤N≤8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>≤</mo><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">K≤5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span></span></span></span>；</p>\n<p>对于 30% 的数据，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">2≤N≤10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>≤</mo><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">K≤5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span></span></span></span>；</p>\n<p>对于 50% 的数据，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">2≤N≤20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>≤</mo><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">K≤8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span></span></span></span>；</p>\n<p>对于 70% 的数据，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">2≤N≤100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">K≤10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span>；</p>\n<p>对于 100% 的数据，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">2≤N≤100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>K</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">1≤K≤100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>M</mi><mo>≤</mo><msup><mi>N</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">1≤M≤N^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>k</mi><mi>i</mi></msub><mo>≤</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">1≤k_i≤K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">1≤u,v≤N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>d</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1≤d≤1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83041em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mo mathvariant=\"normal\">≠</mo><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">S≠T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>S</mi><mo separator=\"true\">,</mo><mi>T</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">1≤S, T≤N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>。</p>\n</blockquote>\n<p>这道题看起来很复杂，但其中有振奋人心的一句话 “输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>”，我考试时就高兴坏了（当时我才初一，水平太烂），随手打了个  <code>printf(&quot;-1&quot;);</code> ，得 10 分。</p>\n<h2 id=\"22-样例白送的分数\"><a class=\"anchor\" href=\"#22-样例白送的分数\">#</a> 2.2 样例 —— 白送的分数</h2>\n<p>每道题目的后面，都有一组 “样例输入” 和 “样例输出”。它们的价值极大，不仅能初步帮你检验程序的对错 **（特别坑的样例除外）**，而且，如果你不会做这道题（这种情况蒟蒻们已经司空见惯了），你就可以直接输出样例！</p>\n<div class=\"note info\">\n<p>编者注：现在 NOIP 的样例大部分都很坑。<s>（用心造数据，用脚造样例）</s></p>\n</div>\n<p>例如美国的 USACO，它的题目有一个规则，就是第一组数据必须是样例。那么，只要你输出所有的样例，你就能得到 100 分（满分 1000）！这是相当可观的分数了。</p>\n<p>现在，你已经掌握了最基础的骗分技巧。只要你会基本的输入输出语句，你就能实现这些骗分方法。那么，如果你有一定的基础，请看下一章 —— 我将教你怎样用简单方法骗取部分分数。</p>\n<h1 id=\"第-3-章-艰苦朴素永不忘\"><a class=\"anchor\" href=\"#第-3-章-艰苦朴素永不忘\">#</a> 第 3 章 “艰苦朴素永不忘”</h1>\n<p>本章的标题来源于《学习雷锋好榜样》的一句歌词，但我不是想教导你们学习雷锋精神，而是学习骗分！</p>\n<p>看到 “朴素” 两个字了吗？它们代表了一类算法，主要有模拟和 DFS 。下面我就来介绍它们在骗分中的应用。</p>\n<h2 id=\"31-模拟\"><a class=\"anchor\" href=\"#31-模拟\">#</a> 3.1 模拟</h2>\n<p>所谓模拟，就是用计算机程序来模拟实际的事件。例如 NOIP 2012 的 “寻宝”，就是写一个程序来模拟小明上藏宝塔的动作。</p>\n<p>较繁的模拟就不叫骗分了，我这里也不讨论这个问题。</p>\n<p>模拟主要可以应用在骗高级数据结构题上的分，例如线段树。下面举一个例子来说明一下。</p>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDI4ODA=\">排队</span> (USACO 2007 January Silver)</strong></p>\n<p><strong>题目描述</strong></p>\n<p>每天，农夫约翰的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>N</mi><mo>≤</mo><mn>50000</mn></mrow><annotation encoding=\"application/x-tex\">1≤N≤50000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>）头奶牛总是按同一顺序排好队，有一天，约翰决定让一些牛玩一场飞盘游戏（Ultimate Frisbee），他决定在队列里选择一群位置连续的奶牛进行比赛，为了避免比赛结果过于悬殊，要求挑出的奶牛身高不要相差太大。</p>\n<p>约翰准备了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>Q</mi><mo>≤</mo><mn>180000</mn></mrow><annotation encoding=\"application/x-tex\">1≤Q≤180000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">8</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>）组奶牛选择，并告诉你所有奶牛的身高 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">H_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>H</mi><mi>i</mi></msub><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>6</mn></msup></mrow><annotation encoding=\"application/x-tex\">1≤ H_i ≤10^6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">6</span></span></span></span></span></span></span></span></span></span></span>）。他想知道每组里最高的奶牛和最矮的奶牛身高差是多少。</p>\n<div class=\"note info\">\n<p>编者注：修正了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 的数据范围，原文为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>Q</mi><mo>≤</mo><mn>200000</mn></mrow><annotation encoding=\"application/x-tex\">1≤Q≤200000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。</p>\n</div>\n<p>注意：在最大的数据上，输入输出将占据大部分时间。</p>\n<p><strong>输入格式</strong></p>\n<p>第一行，两个用空格隔开的整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>。</p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">N+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行，每行一个整数，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行表示第 i 头奶牛的身高 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">H_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">N+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>+</mo><mi>Q</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">N+Q+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行，每行两个用空格隔开的整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>，表示选择从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span> 的所有牛（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>A</mi><mo>≤</mo><mi>B</mi><mo>≤</mo><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">1 ≤ A ≤ B ≤ N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>）</p>\n<p><strong>输出格式</strong></p>\n<p>共 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 行，每行一个整数，代表每个询问的答案。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">6 3\n1\n7\n3\n4\n2\n5\n1 5\n4 6\n2 2\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">6\n3\n0\n</code></pre>\n</blockquote>\n<p>对于这个例子，大牛们可以写个线段树，而我们蒟蒻，就模拟吧。</p>\n<p>附模拟程序：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> q<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">int</span> min <span class=\"token operator\">=</span> INT_MAX<span class=\"token punctuation\">,</span> max <span class=\"token operator\">=</span> INT_MIN<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> b<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> min<span class=\"token punctuation\">)</span> min <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span> max <span class=\"token operator\">=</span> h<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>程序简洁明了，并且能高效骗分。本程序得 50 分。</p>\n<h2 id=\"32-万能钥匙dfs\"><a class=\"anchor\" href=\"#32-万能钥匙dfs\">#</a> 3.2 万能钥匙 ——DFS</h2>\n<p>DFS 是图论中的重要算法，但我们看来，图论神马的都是浮云，关键就是如何骗分。下面引出本书的第 2 条定理：</p>\n<p><strong>DFS 是万能的。</strong></p>\n<p>这对于你的骗分是至关重要的。比如说，一些动态规划题，可以 DFS；数学题，可以 DFS；剪枝的题，更能 DFS。下面以一道省选题为例，解释一下 DFS 骗分。</p>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDEwNDg=\">采药</span> (NOIP 2005 普及组 第 3 题）</strong></p>\n<div class=\"note info\">\n<p>编者注：修正了题目来源，原文为 “NOIP2003”</p>\n</div>\n<p><strong>题目描述</strong></p>\n<p>辰辰是个天资聪颖的孩子，他的梦想是成为世界上最伟大的医师。为此，他想拜附近最有威望的医师为师。医师为了判断他的资质，给他出了一个难题。医师把他带到一个到处都是草药的山洞里对他说：“孩子，这个山洞里有一些不同的草药，采每一株都需要一些时间，每一株也有它自身的价值。我会给你一段时间，在这段时间里，你可以采到一些草药。如果你是一个聪明的孩子，你应该可以让采到的草药的总价值最大。”</p>\n<p>如果你是辰辰，你能完成这个任务吗？</p>\n<p><strong>输入格式</strong></p>\n<p>输入第一行有两个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>T</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1 \\leq T \\leq 1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>）和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>M</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">1 \\leq M \\leq 100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>），用一个空格隔开，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">T</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> 代表总共能够用来采药的时间，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 代表山洞里的草药的数目。接下来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 行每行包括两个在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span> 之间（包括 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>）的整数，分别表示采摘某株草药的时间和这株草药的价值。</p>\n<p><strong>输出格式</strong></p>\n<p>输出包括一行，这一行只包含一个整数，表示在规定的时间内，可以采到的草药的最大总价值。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">70 3\n71 100\n69 1\n1 2\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">3\n</code></pre>\n<p><strong>数据范围及提示</strong></p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>30</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">30\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">M \\leq 10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span>；<br />\n对于全部的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">M \\leq 100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。</p>\n</blockquote>\n<p>这题的方法很简单。我们瞄准 20% 的数据来做，可以用 DFS 枚举方案，然后模拟计算出最优解。附一个大致的代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">DFS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> d<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>c <span class=\"token operator\">></span> ans<span class=\"token punctuation\">)</span> ans <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">DFS</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">+</span> w<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">DFS</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"第-4-章-骗分的关键猜想\"><a class=\"anchor\" href=\"#第-4-章-骗分的关键猜想\">#</a> 第 4 章 骗分的关键 —— 猜想</h1>\n<h2 id=\"41-听天由命\"><a class=\"anchor\" href=\"#41-听天由命\">#</a> 4.1 听天由命</h2>\n<p>如果你觉得你的人品很好，可以试试这一招 —— 输出随机数。</p>\n<p>先看一下代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;time.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// 以上两个头文件必须加</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">// 输出随机数前执行此语句</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">// 输出一个 0~X-1 的随机整数。</span></pre></td></tr></table></figure><p>这种方法适用于输出一个整数（或判断是否）的题目中，答案的范围越小越好。让老天决定你的得分吧。</p>\n<p>据说，在 NOIP 2013 中，有人最后一题不会，愤然打了个随机数，结果得了 70 分啊！！</p>\n<h2 id=\"42-猜测答案\"><a class=\"anchor\" href=\"#42-猜测答案\">#</a> 4.2 猜测答案</h2>\n<p>有些时候，问题的答案可能很有特点：对于大多数情况，答案是一样的。这时，骗分就该出手了。你需要做的，就是发掘出这个答案，然后直接输出。</p>\n<p>有时，你需要运用第 3 章中学到的知识，先写出朴素算法，然后造一些数据，可能就会发现规律。</p>\n<p>例如，本班月赛中有一道题：</p>\n<blockquote>\n<p><strong>炸毁计划</strong></p>\n<p><strong>问题描述</strong></p>\n<p>皇军侵占了通往招远的黄金要道。为了保护渤海通道的安全，使得黄金能够顺利地运送到敌后战略总指挥地延安，从而购买战需武器，所以我们要通过你的程序确定这条战略走廊是否安全。</p>\n<p>已知我们有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 座小岛，只有使得每一个小岛都能与其他任意一个小岛联通才能保证走廊的安全。每个小岛之间只能通过若干双向联通的桥保持联系，已知有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 座桥，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>A</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(A_i,B_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 座桥连接了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">B_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 这两座城市。</p>\n<p>现在，敌人的炸药只能炸毁其中一座桥，请问在仅仅炸毁这一座桥的情况下，能否保证所有岛屿安全，都能联通起来。</p>\n<p>现在给出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 个询问 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示桥梁编号，桥梁的编号按照输入顺序编号。每个询问表示在仅仅炸毁第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 座桥的情况下能否保证所有岛屿安全。如果可以，在输出文件当中，对应输入顺序输出  <code>yes</code> ，否则输出  <code>no</code> （输出为半角英文单词，区分大小写，默认为小写，不含任何小写符号，每行输出一个空格，忽略文末空格）。</p>\n<p><strong>输入格式</strong></p>\n<p>第一行 三个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo separator=\"true\">,</mo><mi>M</mi><mo separator=\"true\">,</mo><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">N,M,Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span>，分别表示岛屿的个数，桥梁的个数和询问的个数。</p>\n<p>第二行到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">M+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行 每行两个整数。第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行有两个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>B</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">A_i,B_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05017em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示这个桥梁的属性。</p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">M+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 行 有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 表示查询。</p>\n<p><strong>输出格式</strong></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">Q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">Q</span></span></span></span> 行，表示查询结果。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">2 1 1\n1 2\n1\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">no\n</code></pre>\n<p><strong>数据范围</strong></p>\n<p>对于 80% 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">N≤100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。<br />\n对于 100% 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">N≤1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo separator=\"true\">,</mo><mi>Q</mi><mo>≤</mo><mi>M</mi><mo>≤</mo><mn>2000</mn></mrow><annotation encoding=\"application/x-tex\">N,Q≤M≤2000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">Q</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。</p>\n</blockquote>\n<p>你发现问题了吗？那么多座桥，炸一座就破坏岛屿的联系，可能性微乎其微（除非特别设计数据）。那么，我们的骗分策略就出来了：对于所有询问，输出  <code>yes</code> . 果然，此算法效果不错，得 80 分。</p>\n<p>现在知道猜测答案的厉害了吧？</p>\n<h2 id=\"43-寻找规律\"><a class=\"anchor\" href=\"#43-寻找规律\">#</a> 4.3 寻找规律</h2>\n<p>首先声明：本节讲的规律不是正当的算法规律，而是数据的特点。</p>\n<p>某些题目会给你很多样例，你就可以观察他们的特点了。有时，数据中的某一个（或几个）数，能通过简单的关系直接算出答案。</p>\n<p>只要你找到了规律，在很多情况下你都能得到可观的分数。</p>\n<p>这样的题目大多出现在 NOI 或更高等级的比赛中，本人蒟蒻一个，就不举例了。传说某人去省选时专门琢磨数据的规律，结果有一题得了 30 分。</p>\n<h2 id=\"44-小数据杀手打表\"><a class=\"anchor\" href=\"#44-小数据杀手打表\">#</a> 4.4 小数据杀手 —— 打表</h2>\n<p>我认识一个人，他在某老师家上 C 语言家教，老师每讲一题，他都喊一句：“打表行吗？”</p>\n<p>他真的是打表的忠实粉丝。表虽然不能乱打，但还是很有用的。</p>\n<p>先看一个例子：</p>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDEwNDQ=\">栈</span> （NOIP 2003 普及组 第 3 题）</strong></p>\n<p><strong>题目背景</strong></p>\n<p>栈是计算机中经典的数据结构，简单的说，栈就是限制在一端进行插入删除操作的线性表。</p>\n<p>栈有两种最重要的操作，即 pop（从栈顶弹出一个元素）和 push（将一个元素进栈）。</p>\n<p>栈的重要性不言自明，任何一门数据结构的课程都会介绍栈。宁宁同学在复习栈的基本概念时，想到了一个书上没有讲过的问题，而他自己无法给出答案，所以需要你的帮忙。</p>\n<p><strong>题目描述</strong></p>\n<p><img data-src=\"https://i.loli.net/2021/01/17/LoVJ3mANdsjkqzM.gif\" alt=\"\" /></p>\n<p>宁宁考虑的是这样一个问题：一个操作数序列，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1, 2, \\dots, n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>（图示为 1 到 3 的情况），栈 A 的深度大于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>。</p>\n<p>现在可以进行两种操作，</p>\n<ol>\n<li>将一个数，从操作数序列的头端移到栈的头端（对应数据结构栈的 push 操作）</li>\n<li>将一个数，从栈的头端移到输出序列的尾端（对应数据结构栈的 pop 操作）</li>\n</ol>\n<p>使用这两种操作，由一个操作数序列就可以得到一系列的输出序列，下图所示为由  <code>1 2 3</code>  生成序列  <code>2 3 1</code>  的过程。</p>\n<p><img data-src=\"https://i.loli.net/2021/01/17/D7wx2SuIL34Zbel.gif\" alt=\"\" /></p>\n<p>（原始状态如上图所示）</p>\n<p>你的程序将对给定的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>，计算并输出由操作数序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1, 2, \\dots, n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 经过操作可能得到的输出序列的总数。</p>\n<p><strong>输入格式</strong></p>\n<p>输入文件只含一个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>18</mn></mrow><annotation encoding=\"application/x-tex\">1≤n≤18</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">8</span></span></span></span>）。</p>\n<p><strong>输出格式</strong></p>\n<p>输出文件只有一行，即可能输出序列的总数目。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">3\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">5\n</code></pre>\n</blockquote>\n<p>这题看似复杂，但数据范围太小，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>18</mn></mrow><annotation encoding=\"application/x-tex\">n \\leq 18</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">8</span></span></span></span>。所以，骗分程序就好写了：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span><span class=\"token number\">42</span><span class=\"token punctuation\">,</span><span class=\"token number\">132</span><span class=\"token punctuation\">,</span><span class=\"token number\">429</span><span class=\"token punctuation\">,</span><span class=\"token number\">1430</span><span class=\"token punctuation\">,</span><span class=\"token number\">4862</span><span class=\"token punctuation\">,</span><span class=\"token number\">16796</span><span class=\"token punctuation\">,</span><span class=\"token number\">58786</span><span class=\"token punctuation\">,</span><span class=\"token number\">208012</span><span class=\"token punctuation\">,</span><span class=\"token number\">742900</span><span class=\"token punctuation\">,</span><span class=\"token number\">2674440</span><span class=\"token punctuation\">,</span><span class=\"token number\">9694845</span><span class=\"token punctuation\">,</span><span class=\"token number\">35357670</span><span class=\"token punctuation\">,</span><span class=\"token number\">129644790</span><span class=\"token punctuation\">,</span><span class=\"token number\">477638700</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> ans<span class=\"token punctuation\">[</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>测试结果不言而喻，AC 了。</p>\n<p>学完这一章，你已基本掌握了骗分技巧。下面的内容涉及一点算法知识，难度有所增加。蒟蒻中的蒟蒻可以止步于此了。</p>\n<div class=\"note info\">\n<p>编者注：在某些 OI 中，提交的代码长度会有限制。当打的表过大时，可以试试 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9vaS13aWtpLm9yZy9tYXRoL2RpY3Rpb25hcnkv\">分段打表</span> 和状压打表。</p>\n</div>\n<h1 id=\"第-5-章-做贪心的人\"><a class=\"anchor\" href=\"#第-5-章-做贪心的人\">#</a> 第 5 章 做贪心的人</h1>\n<h2 id=\"51-贪心的算法\"><a class=\"anchor\" href=\"#51-贪心的算法\">#</a> 5.1 贪心的算法</h2>\n<p>给你一堆纸币，让你挑一张，相信你一定会挑面值最大的。其实，这就是贪心算法。</p>\n<p>贪心算法是个复杂的问题，但你不用管那么多。我们只关心骗分。给你一个问题，让你从一些东西中选出一些，你就可以使用贪心的方法，尽量挑好的。</p>\n<p>举个例子：这是我们的市队选拔的一道题。</p>\n<blockquote>\n<p><strong>有趣的问题</strong></p>\n<p><strong>问题描述</strong></p>\n<p>2013 年的 NOIP 结束后， Smart 发现自己又被题目碾压了，心里非常地不爽，于是暗下决心疯狂地刷数学题目，做到天昏地暗、废寝忘食，准备在今年的中考中大展身手。</p>\n<p>有一天，他在做题时发现了一个有趣的问题：</p>\n<p>给定 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个二元组 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(a_i, b_i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，记函数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>y</mi><mo>=</mo><mn>100</mn><mfrac><mrow><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>a</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow><mrow><mi>σ</mi><mo stretchy=\"false\">(</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy=\"false\">)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">y=100 \\frac{\\sigma(a_i)}{\\sigma(b_i)} \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>将函数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的值四舍五入取整。</p>\n<p>现将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个二元组去掉其中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个计算一个新的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 值（也四舍五入取整），均能满足：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>≤</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">y \\leq z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> ，求出最小的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 值。</p>\n<p>Smart 想让你帮他一起找出最小的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 值。</p>\n<p><strong>输入格式</strong></p>\n<p>输入包含多组测试数据。</p>\n<p>每组测试数据第一行两个整数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>；</p>\n<p>第二行为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_1, a_2, \\dots, a_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>；</p>\n<p>第三行为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>b</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">b_1, b_2, \\dots, b_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>输入数据当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">n,k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 均为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 时结束。</p>\n<p><strong>输出格式</strong></p>\n<p>对于每组测试数据输出一行，即找出的最小的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 值。</p>\n<p>注意：为避免精度四舍五入出现误差，测试点保证每个函数值与最终结果的差值至少为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.001</mn></mrow><annotation encoding=\"application/x-tex\">0.001</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">1</span></span></span></span>。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">3 1\n5 0 1\n5 1 6\n4 2\n1 2 7 9\n5 6 7 9\n0 0\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">83\n100\n</code></pre>\n<p><strong>数据范围</strong></p>\n<p>对于 40% 的数据：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>20</mn></mrow><annotation encoding=\"application/x-tex\">n≤20</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span></span></span></span>；</p>\n<p>对于 70% 的数据：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">n≤1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>；</p>\n<p>对于 100% 的数据：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>10000</mn></mrow><annotation encoding=\"application/x-tex\">n≤10000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><msub><mi>b</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i,b_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 都在  <code>int</code>  范围内。</p>\n</blockquote>\n<p>这题让人望而生畏，但我们有贪心的手段。每个二元组的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 值是乘到答案中的，所以 a 越大越好，那么只要选择出最小的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个去掉即可。代码就不写了，因为这个涉及到下一章的内容：排序。</p>\n<p>此代码得 20 分。</p>\n<h2 id=\"52-贪心地得分\"><a class=\"anchor\" href=\"#52-贪心地得分\">#</a> 5.2 贪心地得分</h2>\n<p>我们已经学了很多骗分方法，但他们中的大多效率并不高，一般能骗 10~20 分。这不能满足我们的贪心。</p>\n<p>然而，我们可以合成骗分的程序。举个最简单的例子，有些含有无解情况的题目，它们同样有样例。我们可以写这个程序</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>是样例<span class=\"token punctuation\">)</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>样例<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">else</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这样也许能变 10 分为 20 分，甚至更多。</p>\n<p>当然，合并骗分方法时要注意，不要重复骗同一种情况，或漏考虑一些情况。</p>\n<p>大量能骗分的问题都能用此法，大家可以试试用新方法骗 2.1 中的例子 “文化之旅”。</p>\n<h1 id=\"第-6-章-c的福利\"><a class=\"anchor\" href=\"#第-6-章-c的福利\">#</a> 第 6 章 C++ 的福利</h1>\n<p><strong>（请 P 党们跳过本章，这不是你们的福利）</strong></p>\n<p>在 C++ 中，有一个好东西，名唤 STL，被万千 OIer 们所崇拜，所喜爱。下面让我们走进 STL。</p>\n<h2 id=\"61-快速排序\"><a class=\"anchor\" href=\"#61-快速排序\">#</a> 6.1 快速排序</h2>\n<p>快速排序是一个经典算法，也是 C++ 党的经典福利。他们有这样的代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;algorithm></span> <span class=\"token comment\">// 这是必须的</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>std<span class=\"token operator\">::</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span>A<span class=\"token operator\">+</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 对一个下标从 0 开始存储，长度为 n 的数组升序排序</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>编者注：需要声明  <code>std</code>  命名空间。 <code>std::sort(int , int )</code>  函数传入的第二个参数为<ins>待排序数组的最后一个元素的<strong>后一个元素</strong>的地址</ins>。</p>\n</div>\n<p>就这么简单，完成了 P 党一大堆代码干的事情。</p>\n<h2 id=\"62-如意金箍棒\"><a class=\"anchor\" href=\"#62-如意金箍棒\">#</a> 6.2 “如意金箍棒”</h2>\n<p>C++ 里有一种东西，叫  <code>vector</code>  容器。它好比如意金箍棒，可以随着元素的数量而改变大小。它其实就是数组，却比数组强得多。</p>\n<p>下面看看它的几种操作：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> V<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 定义</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>V<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 末尾增加一个元素 x</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>V<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 末尾删除一个元素</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>V<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 返回容器中的元素个数</span></pre></td></tr></table></figure><div class=\"note info\">\n<p>编者注：需要使用  <code>vector</code>  头文件和  <code>std</code>  命名空间，上述代码中添加了相应内容。</p>\n</div>\n<p>它同样可以使用下标访问。（从 0 开始）</p>\n<div class=\"note info\">\n<p>编者注：添加了以下示例代码。</p>\n</div>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>V<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> V<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"第-7-章-宁为玉碎不为瓦全\"><a class=\"anchor\" href=\"#第-7-章-宁为玉碎不为瓦全\">#</a> 第 7 章 “宁为玉碎，不为瓦全”</h1>\n<p>至此，我已介绍完了我所知的骗分方法。如果上面的方法都不奏效，我也无能为力。但是，我还有最后一招 ——</p>\n<p>有句古话说：“宁为玉碎，不为瓦全”。我们蒟蒻也应有这样的精神。骗不到分，就报复一下，卡评测以泄愤吧！</p>\n<p>卡评测主要有两种方法：一是死循环，故意超时；二是进入终端，卡住编译器。</p>\n<p>先介绍下第一种。代码很简单，请看：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>就是这短短一句话，就能卡住评测机长达 10s，20s，甚至更多！对于测试点多、时限长的题目，这是个不错的方法。</p>\n<p>第二种方法也很简单，但危害性较大，建议不要在重要比赛中使用，否则可能让你追悔莫及。它就是：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;con></span> <span class=\"token comment\">//（windows 系统中使用）</span></span></pre></td></tr></table></figure><p>或</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;/dev/console></span> <span class=\"token comment\">//（Linux 系统中使用）</span></span></pre></td></tr></table></figure><p>它非常强大，可以卡住评测系统，使其永远停止不了编译你的程序。唯一的解除方法是，工作人员强行关机，重启，重测。<strong>当然，我不保证他们不会气愤地把你的成绩变成 0 分。请慎用此方法。</strong></p>\n<h1 id=\"第-8-章-实战演练\"><a class=\"anchor\" href=\"#第-8-章-实战演练\">#</a> 第 8 章 实战演练</h1>\n<p>下面我们来做一些习题，练习骗分技巧。</p>\n<p>我们来一起分析一下 NOIP 2013 普及组的试题吧。</p>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE5ODA=\">记数问题</span>（NOIP 普及组 2013 第 1 题）</strong></p>\n<div class=\"note info\">\n<p>编者注：洛谷题目名称似乎错了。</p>\n</div>\n<p><strong>题目描述</strong></p>\n<p>试计算在区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的所有整数中。数字 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>9</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">x(0 ≤ x ≤ 9)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">9</span><span class=\"mclose\">)</span></span></span></span> 共出现了多少次？例如，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>11</mn></mrow><annotation encoding=\"application/x-tex\">11</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span></span></span></span> 中，即在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>4</mn><mo separator=\"true\">,</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>7</mn><mo separator=\"true\">,</mo><mn>8</mn><mo separator=\"true\">,</mo><mn>9</mn><mo separator=\"true\">,</mo><mn>10</mn><mo separator=\"true\">,</mo><mn>11</mn></mrow><annotation encoding=\"application/x-tex\">1,2,3,4,5,6,7,8,9,10,11</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">4</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">7</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">8</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">9</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span></span></span></span> 中。数字 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 出现了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> 次。</p>\n<p><strong>输入格式</strong></p>\n<p>输入共 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行，包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">n,x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，之间用一个空格隔开。</p>\n<p><strong>输出格式</strong></p>\n<p>输出共 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行，包含一个整数，表示 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 出现的次数。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">11 1\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">4\n</code></pre>\n<p><strong>数据范围</strong></p>\n<p>对于 100% 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>000</mn><mo separator=\"true\">,</mo><mn>000</mn></mrow><annotation encoding=\"application/x-tex\">1≤ n ≤ 1,000,000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>x</mi><mo>≤</mo><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">0 ≤ x ≤ 9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span></span></span></span>。</p>\n</blockquote>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE5ODE=\">表达式求值</span>（NOIP 2013 普及组 第 2 题）</strong></p>\n<p><strong>题目描述</strong></p>\n<p>给定一个只包含加法和乘法的算术表达式，请你编程计算表达式的值。</p>\n<p><strong>输入格式</strong></p>\n<p>输入仅有一行，为需要你计算的表达式，表达式中只包含数字、加法运算符 “<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span></span></span></span>” 和乘法运算符 “<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">\\times</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">×</span></span></span></span>” ，且没有括号，所有参与运算的数字均为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mn>31</mn></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">2^{31} - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">3</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 之间的整数。</p>\n<p>输入数据保证这一行只有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>∼</mo><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">0 \\sim 9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∼</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>×</mo></mrow><annotation encoding=\"application/x-tex\">×</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">×</span></span></span></span> 这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>12</mn></mrow><annotation encoding=\"application/x-tex\">12</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span></span></span></span> 种字符。</p>\n<p><strong>输出格式</strong></p>\n<p>输出只有一行，包含一个整数，表示这个表达式的值。</p>\n<p>注意：当答案长度多于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> 位时，请只输出最后 4 位，前导 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 不输出。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">1+1*3+4\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">8\n</code></pre>\n<p>输入 #2</p>\n<pre><code class=\"language-plain\">1+1234567890*1\n</code></pre>\n<p>输出 #2</p>\n<pre><code class=\"language-plain\">7891\n</code></pre>\n<p>输入 #3</p>\n<pre><code class=\"language-plain\">1+1000000003*1\n</code></pre>\n<p>输出 #3</p>\n<pre><code class=\"language-plain\">4\n</code></pre>\n<p>【输入输出样例说明】</p>\n<p>样例 1 计算的结果为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span></span></span></span>，直接输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>8</mn></mrow><annotation encoding=\"application/x-tex\">8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">8</span></span></span></span>。</p>\n<p>样例 2 计算的结果为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1234567891</mn></mrow><annotation encoding=\"application/x-tex\">1234567891</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mord\">4</span><span class=\"mord\">5</span><span class=\"mord\">6</span><span class=\"mord\">7</span><span class=\"mord\">8</span><span class=\"mord\">9</span><span class=\"mord\">1</span></span></span></span>，输出后 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> 位，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>7891</mn></mrow><annotation encoding=\"application/x-tex\">7891</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">7</span><span class=\"mord\">8</span><span class=\"mord\">9</span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>样例 3 计算的结果为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1000000004</mn></mrow><annotation encoding=\"application/x-tex\">1000000004</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">4</span></span></span></span>，输出后 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span> 位，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span></span></span></span>。</p>\n<p><strong>数据范围</strong></p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>30</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">30\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mtext>表达式中加法运算符和乘法运算符的总数</mtext><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">0≤ \\text{表达式中加法运算符和乘法运算符的总数} ≤100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">表达式中加法运算符和乘法运算符的总数</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>；</p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>80</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">80\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">8</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mtext>表达式中加法运算符和乘法运算符的总数</mtext><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">0≤ \\text{表达式中加法运算符和乘法运算符的总数} ≤1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">表达式中加法运算符和乘法运算符的总数</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>；</p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">100\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><mtext>表达式中加法运算符和乘法运算符的总数</mtext><mo>≤</mo><mn>100000</mn></mrow><annotation encoding=\"application/x-tex\">0≤ \\text{表达式中加法运算符和乘法运算符的总数} ≤100000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord text\"><span class=\"mord cjk_fallback\">表达式中加法运算符和乘法运算符的总数</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。</p>\n</blockquote>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE5ODI=\">小朋友的数字</span>（NOIP 2013 普及组 第 3 题）</strong></p>\n<p><strong>题目描述</strong></p>\n<p>有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个小朋友排成一列。每个小朋友手上都有一个数字，这个数字可正可负。规定每个小朋友的特征值等于排在他前面（包括他本人）的小朋友中连续若干个（最少有一个）小朋友手上的数字之和的最大值。</p>\n<p>作为这些小朋友的老师，你需要给每个小朋友一个分数，分数是这样规定的：第一个小朋友的分数是他的特征值，其它小朋友的分数为排在他前面的所有小朋友中（不包括他本人），小朋友分数加上其特征值的最大值。</p>\n<p>请计算所有小朋友分数的最大值，输出时保持最大值的符号，将其绝对值对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 取模后输出。</p>\n<p><strong>输入格式</strong></p>\n<p>第一行包含两个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">n,p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>，之间用一个空格隔开。</p>\n<p>第二行包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个数，每两个整数之间用一个空格隔开，表示每个小朋友手上的数字。</p>\n<p><strong>输出格式</strong></p>\n<p>输出只有一行，包含一个整数，表示最大分数对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 取模的结果。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">5 997\n1 2 3 4 5\n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">21\n</code></pre>\n<p>【输入输出样例 1 说明】</p>\n<p>小朋友的特征值分别为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>3</mn><mo separator=\"true\">,</mo><mn>6</mn><mo separator=\"true\">,</mo><mn>10</mn><mo separator=\"true\">,</mo><mn>15</mn></mrow><annotation encoding=\"application/x-tex\">1,3,6,10,15</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">6</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">5</span></span></span></span>，分数分别为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mn>5</mn><mo separator=\"true\">,</mo><mn>11</mn><mo separator=\"true\">,</mo><mn>21</mn></mrow><annotation encoding=\"application/x-tex\">1,2,5,11,21</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">1</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mord\">1</span></span></span></span>，最大值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>21</mn></mrow><annotation encoding=\"application/x-tex\">21</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">1</span></span></span></span> 对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>997</mn></mrow><annotation encoding=\"application/x-tex\">997</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span><span class=\"mord\">9</span><span class=\"mord\">7</span></span></span></span> 的模是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>21</mn></mrow><annotation encoding=\"application/x-tex\">21</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>输入 #2</p>\n<pre><code class=\"language-plain\">5 7\n-1 -1 -1 -1 -1\n</code></pre>\n<p>输出 #2</p>\n<pre><code class=\"language-plain\">-1\n</code></pre>\n<p>【输入输出样例 2 说明】</p>\n<p>小朋友的特征值分别为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1,-1,-1,-1,-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>，分数分别为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>−</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">-1,-2,-2,-2,-2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\">2</span></span></span></span>，最大值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span> 对 7 的模为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>，输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>。</p>\n<p><strong>数据范围</strong></p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>50</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">50\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>000</mn></mrow><annotation encoding=\"application/x-tex\">1 ≤ n ≤ 1,000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>p</mi><mo>≤</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>000</mn></mrow><annotation encoding=\"application/x-tex\">1 ≤ p ≤ 1,000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span> 所有数字的绝对值不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>；<br />\n对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">100\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>000</mn><mo separator=\"true\">,</mo><mn>000</mn></mrow><annotation encoding=\"application/x-tex\">1 ≤ n ≤ 1,000,000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>p</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>9</mn></msup></mrow><annotation encoding=\"application/x-tex\">1≤ p ≤ 10^9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">9</span></span></span></span></span></span></span></span></span></span></span>，其他数字的绝对值均不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span>。</p>\n</blockquote>\n<blockquote>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE5ODM=\">车站分级</span>（NOIP 2013 普及组 第 4 题）</strong></p>\n<p><strong>题目描述</strong></p>\n<p>一条单向的铁路线上，依次有编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mo>…</mo><mo separator=\"true\">,</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1, 2, \\dots, n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8388800000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">…</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个火车站。每个火车站都有一个级别，最低为 1 级。现有若干趟车次在这条线路上行驶，每一趟都满足如下要求：如果这趟车次停靠了火车站 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，则始发站、终点站之间所有级别大于等于火车站 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的都必须停靠。</p>\n<p>（注意：起始站和终点站自然也算作事先已知需要停靠的站点）</p>\n<p>例如，下表是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span></span></span></span> 趟车次的运行情况。其中，前 4 趟车次均满足要求，而第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>5</mn></mrow><annotation encoding=\"application/x-tex\">5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span></span></span></span> 趟车次由于停靠了 3 号火车站（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 级）却未停靠途经的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span></span></span></span> 号火车站（亦为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 级）而不满足要求。</p>\n<p><img data-src=\"https://i.loli.net/2021/01/17/c5IZgPnbsujR3mX.jpg\" alt=\"\" /></p>\n<p>现有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 趟车次的运行情况（全部满足要求） ，试推算这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个火车站至少分为几个不同的级别。</p>\n<p><strong>输入格式</strong></p>\n<p>第一行包含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">n, m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>，用一个空格隔开。</p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">1 ≤ i ≤ m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.79549em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>）中，首先是一个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mo>≤</mo><msub><mi>s</mi><mi>i</mi></msub><mo>≤</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">2 ≤ s_i ≤ n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7859700000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>），表示第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 趟车次有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 个停靠站；接下来有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 个正整数，表示所有停靠站的编号，从小到大排列。每两个数之间用一个空格隔开。输入保证所有的车次都满足要求。</p>\n<p><strong>输出格式</strong></p>\n<p>输出只有一行，包含一个正整数，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个火车站最少划分的级别数。</p>\n<p><strong>输入输出样例</strong></p>\n<p>输入 #1</p>\n<pre><code class=\"language-plain\">9 2 \n4 1 3 5 6 \n3 3 5 6 \n</code></pre>\n<p>输出 #1</p>\n<pre><code class=\"language-plain\">2\n</code></pre>\n<p>输入 #2</p>\n<pre><code class=\"language-plain\">9 3 \n4 1 3 5 6 \n3 3 5 6 \n3 1 5 9 \n</code></pre>\n<p>输出 #2</p>\n<pre><code class=\"language-plain\">3\n</code></pre>\n<p><strong>数据范围</strong></p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>20</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">20\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo>≤</mo><mn>10</mn></mrow><annotation encoding=\"application/x-tex\">1 ≤ n, m ≤ 10</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span></span></span></span>；</p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>50</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">50\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">1 ≤ n, m ≤ 100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>；</p>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">100\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1 ≤ n, m ≤ 1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。</p>\n</blockquote>\n<p>第 1 题，太弱了，不用骗，得 100 分。</p>\n<p>第 2 题，数据很大，但是可以直接输入一个数，输出它 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext> </mtext><mo lspace=\"0.22em\" rspace=\"0.22em\"><mrow><mi mathvariant=\"normal\">m</mi><mi mathvariant=\"normal\">o</mi><mi mathvariant=\"normal\">d</mi></mrow></mo><mtext> </mtext><mn>10000</mn></mrow><annotation encoding=\"application/x-tex\">\\bmod 10000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathrm\">m</span><span class=\"mord mathrm\">o</span><span class=\"mord mathrm\">d</span></span></span><span class=\"mspace\" style=\"margin-right:0.05555555555555555em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span> 的值。得 10 分。</p>\n<p>第 3 题，是一道非常基础的 DP，但对于不知 DP 为何物的蒟蒻来说，就使用暴力算法（即 DFS）。得 20 分。</p>\n<p>第 4 题，我们可以寻找一下数据的规律，你会发现，在所有样例中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 值即为答案。所以直接输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span>，得 10 分。</p>\n<p>这样下来，一共得 140 分，比一等分数线还高 20 分！你的信心一定会得到鼓舞的。这就是骗分的神奇。</p>\n<div class=\"note info\">\n<p>编者注：应该是弱省的分数线。</p>\n</div>\n<h1 id=\"第-9-章-结语\"><a class=\"anchor\" href=\"#第-9-章-结语\">#</a> 第 9 章 结语</h1>\n<p>骗分是蒟蒻的有力武器，可以在比赛中骗得大量分数。相信大家在这本书中收获了很多，希望本书能帮助你多得一些分。</p>\n<p>但是，最后我还是要说一句：</p>\n<p><strong>不骗分，是骗分的最高境界。</strong></p>\n<hr />\n<p>本文转载自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly92aWpvcy5vcmcvZGlzY3Vzcy81MzQzZWI2YzQ4YzVmYzg2NDY4YjQ1N2Q=\">https://vijos.org/discuss/5343eb6c48c5fc86468b457d</span></p>\n<p>为了更好的排版效果，部分题目参考了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNu\">洛谷</span> 进行了修改。</p>\n<p>以下为原作者信息：</p>\n<div class=\"note info\">\n<p>作者：大神 cyd</p>\n<p>QQ：724612372</p>\n</div>\n<hr />\n<p>考前推荐阅读：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvdXNlcjMyOTYvb2ktemhvbmctamlhbi1kYW4tZGktY2hhbmctc2h1by15b3UtaHVh\">OI 中简单的常数优化的介绍</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvenlmMjAwNC9mdS1zYWktc2hpLXlhby1qaS16aHUtZGktMzAtZ291LWh1YQ==\">复赛时要记住的 30 句话</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Rpc2N1c3Mvc2hvdy83MDc4Ng==\">怎么在 NOIP 用下划线开头的 STL</span></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://fidel.js.org/2020/04/11/why-we-need-long-content/",
            "url": "https://fidel.js.org/2020/04/11/why-we-need-long-content/",
            "title": "短视频流行的时代，我们为什么仍需推动长内容的发展？",
            "date_published": "2020-04-10T16:00:00.000Z",
            "content_html": "<p>今天是周六，我想起观察者网上王骁 Albert 要更新视频了，于是我打开 B 站进入观察者网的频道，映入眼帘的却是十几条几十秒不到的短视频；我下载人民日报的 App，只是为了关注报社的专题报道，然而一眼望去尽是各路花里胡哨的「自媒体」文章。</p>\n<span id=\"more\"></span>\n<p>以上现象不仅局限于网络新闻媒体，而在网络内容平台普遍存在。用专业的话概括，这称为内容「垂直化」缺失。其根本原因，是网络信息的碎片性与传统资料的结构性之间的矛盾。</p>\n<p>我们先来了解一下网络媒介的信息推广机制：每个内容拥有对应的推荐权重，数值越大，平台会向越多用户推广该内容。推荐权重主要由两个指标决定：「浏览量」与「浏览完成度」。娱乐化内容在浏览量上有较大优势，碎片化内容在播放完成度上有较大优势。碎片化与娱乐化的优势结合，便有了如今短视频的爆火。而严谨、深入的传统长内容则与之恰好相反，导致了我们所说的「硬核内容没人看」的现象。由此持续下去，真正有深刻意义的长内容媒体将难以存活。因此，网络媒体需要通过短内容为长内容吸引流量，维持正常营收。</p>\n<p>而制作短内容的门槛相对于长内容更低，「人人皆可发声」的同时必然导致内容整体质量下降，长内容则被大量的短内容所淹没。在传统的纸媒上发布一篇报道需要经过报社层层审核取证，甚至编辑亲自执笔修改，而任何人只需要注册一个账号并实名认证，就可以成为「自媒体」在网媒上发表文章；传统纸媒上的一篇报道需要严格遵循新闻报道规范，结构完整、分析深入，而以娱乐化短视频为主要内容的网络频道便可称为「新闻媒体」。</p>\n<p>我认为，网媒需要多样化，但「人人皆可发声」的媒体平台必然会导致内容整体低质化；网媒需要时效性，但不代表文章发表前不需要严格审核。作为「知名」新闻媒体，媒体平台发挥着传播信息、影响社会舆论的作用，必须对内容的真实性和质量负责。</p>\n<p>现在我终于明白，美剧《新闻编辑室》中为什么新闻主持人 Will 不愿意在节目中播报娱乐信息，不愿意参加娱乐节目，甚至不愿意在节目中向观众露出一丝笑容。无论是纸媒还是网媒，「新闻媒体」就应该有「新闻媒体」的严谨与严肃。同样，我不否认短内容的价值，但如果娱乐化短内容取代长内容成为网络信息的主流，甚至是社会舆论的主流，将会影响公众及时了解真实而重要的消息并进行深度思考。</p>\n<p>除了新闻媒体，网络社交平台也应加大对长内容的推广力度。平台可以引入 AI 技术来分析内容的质量与原创度，而非仅以「浏览量」和「浏览完成度」来衡量内容的推广价值。网络媒体作为当今社会舆论的重要引导者，更应该主动承担起推动网络舆论氛围良性发展的责任。</p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "https://fidel.js.org/2020/04/10/vdrias-world/",
            "url": "https://fidel.js.org/2020/04/10/vdrias-world/",
            "title": "水一张渲染图",
            "date_published": "2020-04-09T16:00:00.000Z",
            "content_html": "<p>用 Mine-imator 水了一张渲染图。</p>\n<span id=\"more\"></span>\n<p><img data-src=\"https://s1.ax1x.com/2020/04/10/GTx6yQ.jpg\" alt=\"\" /></p>\n<p>顺便介绍一下 Vdrias World! 服务器：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWFzaGlybC5jbi8yMDIwLzAyLzI3L3Zkcmlhcy13b3JsZC1taW5lY3JhZnQtc2VydmVyLw==\">Vdrias World! 一个 Minecraft 服务器</span></p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "https://fidel.js.org/2020/04/05/new-about/",
            "url": "https://fidel.js.org/2020/04/05/new-about/",
            "title": "About Fidel's Lab",
            "date_published": "2020-04-04T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>此 About 页面及 Fidel's Lab 为目前的第三个版本。你可以 <a href=\"https://fidel.js.org/update-log\">在这里查看详细的更新日志</a>。</p>\n</div>\n<p>Hi，我是 Fidel。</p>\n<p>这里是我的博客，Fidel's Lab。</p>\n<p>和这个博客的名字一样，这里是我分享一些实验性内容的地方。</p>\n<span id=\"more\"></span>\n<p>熟悉我的人应该知道，我是一名<s>业余</s>视频制作者。不同于视频制作的标准化流程，这里的文字内容不需要长时间的构思、准备和创作，不会像我的视频一样精雕细琢且严谨认真。这里会记录我可能还未完成的小项目、突然冒出的好点子、对某些事件不成熟的看法，甚至是生活中遇到的一些有趣的事情。</p>\n<p>这些内容里可能会夹带私货、带有倾向性、未经严谨求证的信息和观点。我不会以非常严谨客观的态度创作、维护这个博客。所以，如果您的观点与我不同，开心就好，切勿当真。</p>\n<p>正因为以上的这些性质，这个博客不会被太多人知道。你可能从我的个人简介、其他大佬们的友链或者是百度、Google 搜索来到了这里，既然你来了，欢迎你在这里四处逛逛。</p>\n<h1 id=\"自我介绍一下\"><a class=\"anchor\" href=\"#自我介绍一下\">#</a> 自我介绍一下</h1>\n<p>可能啥都会一点，<s>然而也就会一（亿？）点</s>。</p>\n<p>现役 OIer。业余摄影师、剪辑师。</p>\n<p>半个 Minecraft 生电玩家，会用 Mine-imator 画渲染图。（上面的 Banner 好看不？我画的～）</p>\n<h1 id=\"rss-订阅\"><a class=\"anchor\" href=\"#rss-订阅\">#</a> RSS 订阅</h1>\n<p>RSS 是个好东西。它将每个人的不同系统、不同主题、不同排版的 Blog 集合成一种统一的信息格式，将浏览独立博客这种行为从「被动浏览」变为「伪主动推送」。</p>\n<p>在我看来，RSS 不仅是一种技术上的革命，更是一种信息获取方式的革命。</p>\n<p>您可以在 <a href=\"https://fidel.js.org/feed\">这里</a> 获取 Fidel's Lab 的详细 RSS 订阅链接。</p>\n<p><s>（虽然我知道这么写似乎不太优雅，但一下子想不到更好的措辞了 QwQ）</s></p>\n<h1 id=\"哪里可以找到我\"><a class=\"anchor\" href=\"#哪里可以找到我\">#</a> 哪里可以找到我</h1>\n<ul>\n<li>Bilibili 频道：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zcGFjZS5iaWxpYmlsaS5jb20vMzY2NjQ0ODIw\">@玄云 Fidel</span></li>\n<li>YouTube 频道：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueW91dHViZS5jb20vY2hhbm5lbC9VQ2hRYnYxTGxhcFlIMGJBX21GS1dVdkE=\">@玄云 Fidel</span></li>\n<li><s>GayHub</s> GitHub：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ZpZGVseHl6Lw==\">@Fidelxyz</span></li>\n<li>洛谷 Luogu: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3VzZXIvMTkwODMz\">@Fidel</span></li>\n</ul>\n<h1 id=\"给我打钱\"><a class=\"anchor\" href=\"#给我打钱\">#</a> 给我打钱</h1>\n<p>虽然说维护这个 Blog 不会有任何的资金支出，但是这的确不是一件容易的事情。</p>\n<p>所以，大佬们请我喝杯咖啡呗。</p>\n<p>您可以在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9hZmRpYW4ubmV0L0BmaWRlbA==\">爱发电</span> 捐助我。</p>\n<h1 id=\"一些技术性信息\"><a class=\"anchor\" href=\"#一些技术性信息\">#</a> 一些技术性信息</h1>\n<p>Fidel's Lab 现采用的主题是 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FtZWhpbWUvaGV4by10aGVtZS1zaG9rYQ==\">hexo-theme-shoka</span>。</p>\n<p>Doc: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9zcGVjaWFsLw==\">https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/special/</span></p>\n<div class=\"note primary\">\n<p>Fidel's Lab 曾经采用的 Hexo 主题为基于 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLXRoZW1lLWxhbmRzY2FwZQ==\">landspace</span> 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0b25lMDA5MC9sYW5kc2NhcGUtcGx1cw==\">landscape-plus</span> 的魔改版。</p>\n</div>\n",
            "tags": [
                "杂记",
                "公告"
            ]
        },
        {
            "id": "https://fidel.js.org/2020/01/16/unusual-code/",
            "url": "https://fidel.js.org/2020/01/16/unusual-code/",
            "title": "非 正 常 代 码",
            "date_published": "2020-01-15T16:00:00.000Z",
            "content_html": "<p><strong>注：此非正常方法仅供娱乐，请勿用于比赛或需要他人 Review 的场合。</strong></p>\n<p>考完试了，是时候来放 (gao) 松 (dian) 一 (shi) 下 (qing) 了</p>\n<p>进入学校的洛谷奥赛团，发现布置了一道新题目：<a href=\"https://www.luogu.com.cn/problemnew/show/P1996\"><strong>P1996</strong> 约瑟夫问题</a></p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个人（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">n \\leq 100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>）围成一圈，从第一个人开始报数，数到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 的人出列，再由下一个人重新从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 开始报数，数到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 的人再出圈…… 以此类推，直到所有的人都出圈，请输出依次出圈人的编号。</p>\n</blockquote>\n<p>要求用链表做，但我也可以搞点事情嘛～</p>\n<span id=\"more\"></span>\n<p>十分钟后敲出一份 AC 代码：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstring></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> jump<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">bool</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    jump <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            jump<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jump <span class=\"token operator\">==</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            jump <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p><strong>不断地循环，用一个 <code>bool</code>  数组标记出列。</strong></p>\n<p>AC 是 AC 了，但是…… 中规中矩，<s>不符合我们搞事情的风格呀</s></p>\n<p>我们来<strong>稍微简化一下</strong> &lt;_&lt;</p>\n<blockquote>\n<p><s>简化亿下</s></p>\n</blockquote>\n<p>首先，最关键的就是中间这段 <strong>while 循环</strong>了，所以我们先从这里入手。</p>\n<h1 id=\"step-1\"><a class=\"anchor\" href=\"#step-1\">#</a> Step 1</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>开始先是指针 <code>i</code> <strong> 累加</strong>，然后用一个<strong>求余</strong>处理溢出。</p>\n<p>合并一下，变成：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">++</span>i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"step-2\"><a class=\"anchor\" href=\"#step-2\">#</a> Step 2</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    jump<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>这里需要动点脑筋，我们知道 <code>a[i]</code>  是 <code>bool</code>  型数组，所以就有 <code>True</code>  和 <code>False</code>  两种情况，<strong>作加法运算时转成 <code>int</code>  就是 <code>1</code>  和 <code>0</code> </strong>。我们只需要让 <code>jump</code>  累加上 <code>a[i]</code>  的<strong>取反值</strong>就好了。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>jump <span class=\"token operator\">+=</span> <span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"step-3\"><a class=\"anchor\" href=\"#step-3\">#</a> Step 3</h1>\n<p>现在 Step 1 和 Step 2 的 4 行代码已经<strong>缩成了 2 行</strong>。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">++</span>i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>jump <span class=\"token operator\">+=</span> <span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>但是这还不够，我们可以再合并一下：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>jump <span class=\"token operator\">+=</span> <span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"step-4\"><a class=\"anchor\" href=\"#step-4\">#</a> Step 4</h1>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>jump <span class=\"token operator\">==</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    jump <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>接下来是一段 <strong>if 逻辑</strong>，我们这里需要用<strong>三元操作符</strong>来代替。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>条件 <span class=\"token operator\">?</span> 条件为 True 时执行的代码 <span class=\"token operator\">:</span> 条件为 False 时执行的代码</pre></td></tr></table></figure><p>我们把三元操作符塞进 <strong> <code>printf</code>  函数</strong>里面：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>jump <span class=\"token operator\">==</span> m <span class=\"token operator\">?</span> <span class=\"token string\">\"%d\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>但是剩下的三行赋值怎么办？</p>\n<p>这里我们就需要用到一个很巧妙的工具了：<strong>与运算符 <code>&amp;&amp;</code> </strong></p>\n<p>我们都知道，与运算符正常的打开方式是这样子的：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>条件 <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> 条件 <span class=\"token number\">2</span></pre></td></tr></table></figure><p>只有两个条件全为  <code>True</code> ，整个表达式才为  <code>True</code> 。<strong>如果条件 1 为  <code>True</code> ，则不会判断条件 2。</strong></p>\n<p>我们稍微思考一下，** 如果条件 2 恒为  <code>True</code> ，那么整个表达式的值完全取决于条件 1。** 而 <strong> <code>&amp;&amp;</code>  运算符两边是可以塞下一个赋值表达式的！</strong></p>\n<p>这样，<strong>我们就可以把剩下的三条赋值表达式全部用连续的  <code>&amp;&amp;</code>  运算符塞进一个括号里面去！</strong></p>\n<p>赋值表达式本身的值等于最终被赋值的值，我们只需要<strong>通过取反运算符  <code>!</code>  或者直接  <code>+1</code>  让表达式的值恒为  <code>True</code> </strong> 就好了。</p>\n<p>所以就变成了这样：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>jump <span class=\"token operator\">+=</span> <span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> m <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>jump <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>与上面的 <code>printf</code>  函数合并一下，变成：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>jump <span class=\"token operator\">+=</span> <span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> m <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>jump <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"%d \"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>Perfect!</p>\n<h1 id=\"step-5\"><a class=\"anchor\" href=\"#step-5\">#</a> Step 5</h1>\n<p>最后我们只需要将代码整理一下即可。</p>\n<p>貌似改动的时候出了点小 bug， <code>i</code>  不能初始化为 <code>-1</code> ，要初始化为 <code>0</code> 。我也不知道是什么原因。但也好，这就更简单了。</p>\n<p><strong>所有的变量和数组都定义为全局变量，直接默认初始化为 <code>0</code> ，这样把初始化的赋值和 <code>memset</code>  都省了。</strong></p>\n<p>整理一下，大功告成：</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> count<span class=\"token punctuation\">,</span> jump<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">bool</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span> <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>jump <span class=\"token operator\">+=</span> <span class=\"token operator\">!</span>a<span class=\"token punctuation\">[</span><span class=\"token operator\">++</span>i <span class=\"token operator\">%=</span> n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> m <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>jump <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"%d \"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"尾声\"><a class=\"anchor\" href=\"#尾声\">#</a> 尾声</h1>\n<p>还是没有大佬们厉害。</p>\n<p><img data-src=\"https://s2.ax1x.com/2020/01/17/1Sin4H.jpg\" alt=\"\" /></p>\n<blockquote>\n<p><strong>题目背景</strong></p>\n<p>约瑟夫是一个无聊的人！！</p>\n</blockquote>\n<p>我也像是个无聊的人 &lt;_&lt;</p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "https://fidel.js.org/2019/12/27/CSPJ-tour/",
            "url": "https://fidel.js.org/2019/12/27/CSPJ-tour/",
            "title": "CSP-J 2019 游记 & 指引",
            "date_published": "2019-12-26T16:00:00.000Z",
            "content_html": "<p>下面那篇 NOIP 比赛笔记其实是给我自己看的……</p>\n<p>所以大家请看这篇 😃</p>\n<blockquote>\n<p>彻底失去对 Luogu Blog 排版的信心。果然还是自己亲手搭的 Hexo 好用。</p>\n<p>啧啧啧，我的 Hexo 排版真的好看。&lt;_&lt;</p>\n</blockquote>\n<span id=\"more\"></span>\n<h1 id=\"比赛前干啥\"><a class=\"anchor\" href=\"#比赛前干啥\">#</a> 比赛前干啥</h1>\n<p>睡觉。</p>\n<p>CSP-J 在下午，如果有时间，你还可以睡个中午觉。</p>\n<p><s>不然你就只能在考场上睡了。</s></p>\n<p>😃</p>\n<p>临走前记得带上这些：</p>\n<ul>\n<li>身份证</li>\n<li>准考证</li>\n<li>通讯工具</li>\n<li>2 支或以上好写的笔（可以带几支不同颜色的）</li>\n<li>纸巾</li>\n<li>一个背包</li>\n</ul>\n<p>水其实可以不用带。上车后会发一瓶，到了考场还有一瓶。当时我包里带了 3 瓶水回来，考场发的鼎湖山泉现在还放在我桌面上。</p>\n<h1 id=\"开考前干啥\"><a class=\"anchor\" href=\"#开考前干啥\">#</a> 开考前干啥</h1>\n<p>进入考场之前，手机关机放背包里，不要带进去。</p>\n<p>对了，你可以带吃的进去，<strong>神奇的 NOIP 允许你在考试时吃东西。</strong></p>\n<p><s>当然你也可以试试带榴莲或者榴莲糖、榴莲蛋糕之类的进去吃，规则上没说不给，不过不保证你能活着出来。😃</s></p>\n<p>进入考场，先进入设置把屏幕分辨率从老人机模式调到<strong>原生分辨率</strong>，显示器亮度调到合适，鼠标键盘调到一个舒适的位置。检查机箱 USB 封条是否稳固。</p>\n<p>桌面上有<strong>一个加密的压缩包，所有规则须知的文件，和一个编程程序文件夹</strong>。通读须知，<strong>C 盘下建好文件夹</strong>。设置编辑器环境。</p>\n<blockquote>\n<h2 id=\"dev-c\"><a class=\"anchor\" href=\"#dev-c\">#</a> Dev C++</h2>\n<h3 id=\"自动保存\"><a class=\"anchor\" href=\"#自动保存\">#</a> 自动保存</h3>\n<ul>\n<li><strong>「工具 -&gt; 编辑器选项 - &gt; 自动保存 -&gt; 启动编辑器自动保存」<strong>打勾，文件名 选择</strong>「附加格式化时间戳」</strong></li>\n</ul>\n<h3 id=\"编译选项\"><a class=\"anchor\" href=\"#编译选项\">#</a> 编译选项</h3>\n<ul>\n<li>\n<p><strong>「工具 -&gt; 编译选项 -&gt; 代码生成 / 优化 -&gt; 连接器 -&gt; 产生调试信息」</strong> 选择 YES</p>\n<p>快捷键：启动调试 <code>F5</code>   下一步 <code>F7</code></p>\n</li>\n<li>\n<p><strong>打开  <code>-Wall</code> </strong></p>\n</li>\n<li>\n<p><strong>选择 C++ 编译器标准：ISO C++98</strong></p>\n</li>\n</ul>\n</blockquote>\n<p>为了减少踢到<strong>电源线 / 考场停电 / 电脑死机</strong>时的损失，请打开<strong>自动保存</strong>。<strong>每做完一道题可以备份一份到 D/E/F 盘。</strong></p>\n<p>然后差不多开始做题了。</p>\n<h1 id=\"考试开始\"><a class=\"anchor\" href=\"#考试开始\">#</a> 考试开始</h1>\n<p>输密码是一个会让人抓狂的环节，因为老师读给你的密码会是这样的：</p>\n<blockquote>\n<p>=zhu1YI1JIAN1cha6（大小写拼音 + 数字）</p>\n</blockquote>\n<p>实在难以想象一位有方言口音的老师读密码时的情景。</p>\n<p><strong>请先把密码打在记事本上，再复制密码解压。</strong></p>\n<p>解开压缩包之后，你就可以愉快地做题了。</p>\n<p>一些小技巧和注意事项：</p>\n<ul>\n<li><strong>分屏大法，左边敲代码，右边看题目。</strong></li>\n<li>善用草稿纸。T3 T4 写代码前<strong>列需求点，画图</strong>。</li>\n<li><strong>记得加文件读写！</strong></li>\n<li>接上一条，测试时用文件测。</li>\n</ul>\n<p>话说我当时的机子 Win 键貌似坏了……  <code>Win</code>  +  <code>D</code>  和  <code>Win</code>  +  <code>Tab</code>  用不了，难受。</p>\n<blockquote>\n<p>比赛结束前 10 分钟就放弃治疗吧，别希望能绝杀。再三检查有没有去掉调试语句、是否能通过编译，文件输入输出是否正确，文件名和建立文件夹是否正确。</p>\n</blockquote>\n<blockquote>\n<p>考场上如果没思路，建议多往厕所跑跑，厕所是一个很奇怪的地方，时常能在厕所获得灵感（雾）</p>\n</blockquote>\n<h2 id=\"大数据读写\"><a class=\"anchor\" href=\"#大数据读写\">#</a> 大数据读写</h2>\n<p>电脑上装了 GVim，<strong>务必使用 GVim 打开大数据文件</strong>。（Notepad 打开会卡死）</p>\n<blockquote>\n<p>使用 Vim 打开了文件，我们发现此时我们无法对文件进行操作</p>\n<p>不要慌，Vim 默认开启时是 “命令” 模式，是需要输入指令来操作的</p>\n<p><strong>我们按下  <code>i</code>  ，切换到插入模式</strong>，就可以愉快的写代码了</p>\n<p>写完代码了，我们需要保存一下</p>\n<p>那么问题来了，怎么保存呢</p>\n<p>首先，<strong>我们按下  <code>Esc</code>  键</strong> <s>（敲 ESC 三个字母的可以关掉 blog 直接退役了）</s>，返回命令模式</p>\n<p>然后，我们在命令模式下<strong>输入  <code>:wq</code> </strong> （均为小写英文字符），就可以保存文件并直接回到终端啦</p>\n<p><strong>语句解释：  <code>:</code>  的作用是一次输入多条指令，上文中我们未使用  <code>:</code>  直接按  <code>i</code>  便是立刻执行命令，这里便会等待你一次输入全部命令回车后依次执行；  <code>w</code>  是 Vim 的保存命令 <s>（不是 s 吗）</s> ；  <code>q</code>  是退出指令</strong></p>\n</blockquote>\n<hr />\n<p>写不动了，下星期再接着写。</p>\n<hr />\n<h1 id=\"补充\"><a class=\"anchor\" href=\"#补充\">#</a> 补充</h1>\n<h2 id=\"2020-04-06\"><a class=\"anchor\" href=\"#2020-04-06\">#</a> 2020-04-06</h2>\n<p>也没啥好写的了，差不多就这些。就这样吧。</p>\n<p>祝大家</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>R</mi><mi>P</mi><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><msup><mo>+</mo><mrow><mo>+</mo><mo>+</mo></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow></msup></mrow><annotation encoding=\"application/x-tex\">RP++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++^{++} } } } } } } } } } } } } } } } } }\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.321695em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mbin\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.238365em;\"><span style=\"top:-6.238365em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:5.825365em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.4648071428571425em;\"><span style=\"top:-7.4648071428571425em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:7.0338071428571425em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:7.047329999999999em;\"><span style=\"top:-9.047329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:8.643329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:6.643329999999999em;\"><span style=\"top:-8.643329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:8.239329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:6.239329999999999em;\"><span style=\"top:-8.239329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:7.835329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.835329999999999em;\"><span style=\"top:-7.835329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:7.431329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.431329999999999em;\"><span style=\"top:-7.431329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:7.027329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.027329999999999em;\"><span style=\"top:-7.027329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:6.623329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.623329999999999em;\"><span style=\"top:-6.623329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:6.219329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.219329999999999em;\"><span style=\"top:-6.219329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:5.815329999999999em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8153299999999994em;\"><span style=\"top:-5.815329999999999em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:5.4113299999999995em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.4113299999999995em;\"><span style=\"top:-5.4113299999999995em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:5.00733em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.0073299999999996em;\"><span style=\"top:-5.00733em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:4.60333em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6033299999999997em;\"><span style=\"top:-4.60333em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:4.19933em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.19933em;\"><span style=\"top:-4.19933em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:3.79533em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.7953299999999999em;\"><span style=\"top:-3.79533em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:3.39133em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.39133em;\"><span style=\"top:-3.39133em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.98733em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\"><span class=\"mbin mtight\">+</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.98733em;\"><span style=\"top:-2.98733em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.58333em;\"></span><span class=\"mord mtight\"><span class=\"mord mtight\">+</span><span class=\"mord mtight\">+</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>（从 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvSmFtZXNIZS9jc3Atai15b3Utamk=\">隔壁大佬</span> 那抄来的 RP+++++）</p>\n<h1 id=\"引用的文章\"><a class=\"anchor\" href=\"#引用的文章\">#</a> 引用的文章</h1>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3Uub3JnL2Jsb2cvZXhwZWN0L3lpLW1lbmctd2VpLW1hLWZvdS1mdS1zaGFvLWh1YS1jc3AyMDE5LWthby1xaWFuLXRpLXhpbmc=\">以梦为马，不负韶华 ——CSP2019 考前提醒</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3Uub3JnL2Jsb2cvdHdpL3poaS1jc3AtbWVuZy14aW4tZm91LWt1YWktc2hpLXlvbmctbm9pLWxpbnV4LWRpLXJlbi1xdW4=\">致 CSP 萌新 / 不会使用 NOI LINUX 的人群</span></li>\n</ol>\n",
            "tags": [
                "杂记",
                "技术"
            ]
        },
        {
            "id": "https://fidel.js.org/2019/11/15/noip-note/",
            "url": "https://fidel.js.org/2019/11/15/noip-note/",
            "title": "NOIP 比赛笔记",
            "date_published": "2019-11-14T16:00:00.000Z",
            "content_html": "<p>一点小笔记</p>\n<p>祝大家 RP++</p>\n<span id=\"more\"></span>\n<h1 id=\"0x01-环境配置\"><a class=\"anchor\" href=\"#0x01-环境配置\">#</a> 0x01 环境配置</h1>\n<h2 id=\"dev-c\"><a class=\"anchor\" href=\"#dev-c\">#</a> Dev C++</h2>\n<h3 id=\"自动保存\"><a class=\"anchor\" href=\"#自动保存\">#</a> 自动保存</h3>\n<ul>\n<li><strong>「工具 -&gt; 编辑器选项 - &gt; 自动保存 -&gt; 启动编辑器自动保存」<strong>打勾，文件名 选择</strong>「附加格式化时间戳」</strong></li>\n</ul>\n<h3 id=\"编译选项\"><a class=\"anchor\" href=\"#编译选项\">#</a> 编译选项</h3>\n<ul>\n<li>\n<p><strong>「工具 -&gt; 编译选项 -&gt; 代码生成 / 优化 -&gt; 连接器 -&gt; 产生调试信息」</strong> 选择 YES</p>\n<p>快捷键：启动调试 <code>F5</code>   下一步 <code>F7</code></p>\n</li>\n<li>\n<p><strong>打开  <code>-Wall</code> </strong></p>\n</li>\n<li>\n<p><strong>选择 C++ 编译器标准：ISO C++98</strong></p>\n</li>\n</ul>\n<h2 id=\"vim\"><a class=\"anchor\" href=\"#vim\">#</a> Vim</h2>\n<p><code>:vsp ~/.vimrc</code></p>\n<pre><code class=\"language-sh\">set ts=4\nset sw=4\nset smarttab\nset number\nset expandtab\ncolor desert\nsyntax on\nset cindent\nset guifont=Consolas:h16\nset backspace=2\n\ninoremap ( ()&lt;ESC&gt;i\ninoremap [ []&lt;ESC&gt;i\ninoremap &#123; &#123;&#125;&lt;ESC&gt;i\ninoremap &lt; &lt;&gt;&lt;ESC&gt;i\nvmap &lt;C-C&gt; &quot;+y\nvmap &lt;C-V&gt; &quot;+p\nimap &lt;C-V&gt; &lt;ESC&gt;&quot;+pa\nvmap &lt;BACKSPACE&gt; d\nimap &lt;C-Z&gt; &lt;ESC&gt;ua\nvmap &lt;C-Z&gt; uv\nimap &lt;C-S&gt; &lt;ESC&gt;:w&lt;CR&gt;a\nvmap &lt;C-S&gt; :w&lt;CR&gt;v\nimap &lt;C-A&gt; &lt;ESC&gt;ggVG\nvmap &lt;C-A&gt; ggVG\n</code></pre>\n<h1 id=\"0x02-注意事项\"><a class=\"anchor\" href=\"#0x02-注意事项\">#</a> 0x02 注意事项</h1>\n<p>由于 CSP 的评测是在 Linux 的环境下完成的，因此有一些注意事项需要注意：</p>\n<ol>\n<li>尽量不要使用  <code>gets()</code>   语句读取一行，因为这些函数使用换行符来判断行结束，Windows 下换行是  <code>\\r\\n</code> ，而 Linux 下换行是  <code>\\n</code> ，假设某题的数据是在 Windows 下生成的，那么这道题的换行符就是  <code>\\r\\n</code> ，最终比赛时的代码是在 Linux 下编译的，读取的换行符是  <code>\\n</code> ，这样就会导致读入错误。</li>\n</ol>\n<blockquote>\n<p>kkksc03 评论：其实不使用  <code>gets()</code>  的原因主要还是潜在的溢出风险。</p>\n</blockquote>\n<ol start=\"2\">\n<li>\n<p>评测环境为 Linux 64 位，因此请注意指针变量占用的空间是  <code>8</code>  字节，注意计算内存，避免 MLE。</p>\n</li>\n<li>\n<p>在使用 <code>long long</code>  时请记得使用  <code>%lld</code>  而非 WIndows 下的 <code>%I64d</code> 。</p>\n</li>\n<li>\n<p>忌使用  <code>__</code>  （双下划线）开头的函数。</p>\n</li>\n<li>\n<p><code>int</code>  *  <code>int</code>  乘法强转  <code>long long</code> ！</p>\n</li>\n<li>\n<p>减少不必要的优化，以降低思维难度、减少代码量和出错为目标。</p>\n</li>\n<li>\n<p><code>next</code> ,  <code>x0</code> ,  <code>x1</code> ,  <code>y0</code> ,  <code>y1</code> ,  <code>index</code>  别作变量名！</p>\n</li>\n<li>\n<p>注意  <code>long long</code>  级别的  <code>INF</code>  要开 <code>0x3f3f3f3f3f3f3f3fll</code> 。</p>\n</li>\n<li>\n<p><code>long long</code>  状压左移写  <code>1ll</code> 。</p>\n</li>\n<li>\n<p><strong>尽可能到 Linux 测样例！</strong></p>\n</li>\n<li>\n<p>比赛结束前 10 分钟就放弃治疗吧，别希望能绝杀。再三检查有没有去掉调试语句、是否能通过编译，文件输入输出是否正确，文件名和建立文件夹是否正确。</p>\n</li>\n<li>\n<p><strong>觉得该用  <code>long long</code>  就用！</strong></p>\n</li>\n<li>\n<p><strong>注意检查函数是否写了返回值类型，尤其是  <code>inline</code>  后面！Windows 下不会报错，尽量到 Linux 下测一次！</strong></p>\n</li>\n<li>\n<p>别踢电源线！</p>\n</li>\n</ol>\n<h1 id=\"0x03-小技巧-and-notes\"><a class=\"anchor\" href=\"#0x03-小技巧-and-notes\">#</a> 0x03 小技巧 and Notes</h1>\n<h2 id=\"c-代码模板\"><a class=\"anchor\" href=\"#c-代码模板\">#</a> C++ 代码模板</h2>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">inline</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> x<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> f<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">char</span> ch<span class=\"token operator\">=</span><span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>ch<span class=\"token operator\">&lt;</span><span class=\"token string\">'0'</span><span class=\"token operator\">||</span>ch<span class=\"token operator\">></span><span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ch<span class=\"token operator\">==</span><span class=\"token string\">'-'</span><span class=\"token punctuation\">)</span> f<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> ch<span class=\"token operator\">=</span><span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>ch<span class=\"token operator\">>=</span><span class=\"token string\">'0'</span><span class=\"token operator\">&amp;&amp;</span>ch<span class=\"token operator\">&lt;=</span><span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>x<span class=\"token operator\">=</span>x<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token operator\">+</span>ch<span class=\"token operator\">-</span><span class=\"token number\">48</span><span class=\"token punctuation\">;</span> ch<span class=\"token operator\">=</span><span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">return</span> x<span class=\"token operator\">*</span>f<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token function\">freopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.in\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token function\">freopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.out\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdin</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"安全数组大小\"><a class=\"anchor\" href=\"#安全数组大小\">#</a> 安全数组大小</h2>\n<p><strong>记得开全局数组！!</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">5792</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">5792</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 5792*5792*4/1024/1024≈128 MiB.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">33554432</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// (≈3*10^7) 33554432*4/1024/1024= 128 MiB.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">8192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">8192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 8192*8192*4/1024/1024≈256 MiB.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">67108864</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// (≈6*10^7) 67108864*4/1024/1024= 256 MiB.</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">11585</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">11585</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//11585*11585*4/1024/1024≈512 MiB.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">134217728</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// (≈10^8) 134217728*4/1024/1024= 512 MiB.</span></pre></td></tr></table></figure><h2 id=\"对拍\"><a class=\"anchor\" href=\"#对拍\">#</a> 对拍</h2>\n<p>为了防止挂分，建议对拍，即用暴力和要提交的程序进行互相检测。</p>\n<p>建议不会写数据生成器的同学恶补一下。</p>\n<p>这里提供一种用 C++ 写的 Windows 对拍脚本，可以参考一下。</p>\n<p>其中  <code>data.exe</code>  是数据生成器， <code>std.exe</code>  是暴力， <code>test.exe</code>  是要测的程序。</p>\n<p><code>test.out</code>  是要测的程序的输出文件， <code>test.ans</code>  是暴力的输出文件。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"std.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">syetem</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test.exe\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------Test Case %d----------\\n\"</span><span class=\"token punctuation\">,</span>cas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fc test.out test.ans\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pause\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"奇妙的语法\"><a class=\"anchor\" href=\"#奇妙的语法\">#</a> 奇妙的语法</h2>\n<h3 id=\"inline\"><a class=\"anchor\" href=\"#inline\">#</a>  <code>inline</code></h3>\n<p><strong>竞赛中尽量别用。</strong></p>\n<p><strong>记得加函数返回值！</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">MyFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\">// ...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h3 id=\"运算符重载\"><a class=\"anchor\" href=\"#运算符重载\">#</a> 运算符重载</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">struct</span> <span class=\"token class-name\">MyStruct</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">int</span> val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> MyStruct <span class=\"token operator\">&amp;</span>u1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">return</span> val <span class=\"token operator\">&lt;</span> u1<span class=\"token punctuation\">.</span>val<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"io\"><a class=\"anchor\" href=\"#io\">#</a> IO</h2>\n<h3 id=\"long-long-读写\"><a class=\"anchor\" href=\"#long-long-读写\">#</a> long long 读写</h3>\n<p>记得用 <code>%lld</code> ！</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 读写 long long 注意用 % lld </span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%lld\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"整行读入\"><a class=\"anchor\" href=\"#整行读入\">#</a> 整行读入</h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token operator\">::</span>string a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>cin<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"stl\"><a class=\"anchor\" href=\"#stl\">#</a> STL</h2>\n<h3 id=\"includemath\"><a class=\"anchor\" href=\"#includemath\">#</a>  <code>#include&lt;math&gt;</code></h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//x^y</span></pre></td></tr></table></figure><p><strong>请勿使用  <code>cmath</code>  库中的  <code>abs</code>  函数！</strong></p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//DO NOT USE THEM!!!</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">double</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<p>C++ 有很多 <s>bug</s> 你想不到的事！</p>\n<p>相信 OIers 经常盯着一个他认为没毛病的程序，找问题。一小时后，他把</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;cmath></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>改成</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">myabs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span>n<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>后就 AC 了</p>\n<p>来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL2Jsb2cvc2l0ZW9ma29iYXlhc2hpL2dlaS1zdW8teW91LXpodW4tYmVpLWppbmctc2FpLWRpLXRvbmcteHVl\">给所有准备竞赛的同学 - Nothing But Something - 洛谷博客</span></p>\n</blockquote>\n<p>如果你非得要用 STL 的  <code>abs</code> ，请用  <code>cstdlib</code>  库中的。</p>\n<h3 id=\"includealgorithm\"><a class=\"anchor\" href=\"#includealgorithm\">#</a>  <code>#include&lt;algorithm&gt;</code></h3>\n<p><code>sort</code>  函数的第二个参数为<ins>待排序区间最后一个元素的<strong>后一个元素</strong>地址</ins>。</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>std<span class=\"token operator\">::</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 升序排序 a [0...n-1]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>std<span class=\"token operator\">::</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 升序排序 a [1...n]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">bool</span> <span class=\"token function\">cmp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>u1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>u2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">return</span> u1 <span class=\"token operator\">></span> u2<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>  <span class=\"token comment\">// 重写比较函数</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>std<span class=\"token operator\">::</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> a <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 降序排序 a [0...n-1]</span></pre></td></tr></table></figure><h3 id=\"includevector\"><a class=\"anchor\" href=\"#includevector\">#</a>  <code>#include&lt;vector&gt;</code></h3>\n<p>当数组用</p>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> a<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\">// 插入</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 翻转</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\">// 查询大小</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// 查询是否为空</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// 清空</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>b<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 删除</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> b <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>             <span class=\"token comment\">// 复制，速度极快</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a<span class=\"token punctuation\">.</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                          <span class=\"token comment\">// 交换</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">::</span>iterator i <span class=\"token operator\">=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">!=</span> a<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 迭代器</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"includequeue\"><a class=\"anchor\" href=\"#includequeue\">#</a>  <code>#include&lt;queue&gt;</code></h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">// Queue</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token operator\">::</span>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q1<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 队列</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q1<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 压入</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>q1<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 查询队头元素</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>q1<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>            <span class=\"token comment\">// 弹出</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q1<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\">// 查询是否为空</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q1<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 查询大小</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">// Deque</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>std<span class=\"token operator\">::</span>deque<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q2<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 双端队列</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>q2<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>q2<span class=\"token punctuation\">.</span><span class=\"token function\">push_front</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>q2<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>q2<span class=\"token punctuation\">.</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>q2<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>q2<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">// Priority Queue</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>std<span class=\"token operator\">::</span>priority_queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q3<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 优先队列（自动排序的队列）</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">// 默认升序排列，如果需要降序排列可重写小于号操作符 &lt;</span></pre></td></tr></table></figure><h3 id=\"includeutility\"><a class=\"anchor\" href=\"#includeutility\">#</a>  <code>#include&lt;utility&gt;</code></h3>\n<figure class=\"highlight cpp\"><figcaption data-lang=\"C++\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;utility></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>std<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> a <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">make_pair</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"0x7f-神奇的网站\"><a class=\"anchor\" href=\"#0x7f-神奇的网站\">#</a> 0x7F 神奇的网站</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL29laXMub3Jn\">数列推导式查询 OEIS</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sdW9ndS5vcmc=\">洛谷 luogu</span></p>\n<h2 id=\"引用-or-有帮助的文章\"><a class=\"anchor\" href=\"#引用-or-有帮助的文章\">#</a> 引用 or 有帮助的文章</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3Uub3JnL2Jsb2cvZXhwZWN0L3lpLW1lbmctd2VpLW1hLWZvdS1mdS1zaGFvLWh1YS1jc3AyMDE5LWthby1xaWFuLXRpLXhpbmc=\">以梦为马，不负韶华 ——CSP2019 考前提醒</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3Uub3JnL2Jsb2cvdHdpL3poaS1jc3AtbWVuZy14aW4tZm91LWt1YWktc2hpLXlvbmctbm9pLWxpbnV4LWRpLXJlbi1xdW4=\">致 CSP 萌新 / 不会使用 NOI LINUX 的人群</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3Uub3JnL2Jsb2cvZGFya2ZsYW1lcy9ub2ktbGludXg=\">Noi Linux 的使用</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhhbmdrYWkueGluL2Jsb2cvQWJvdXQtTk9JLUxpbnV4Lw==\">NOI Linux 使用心得</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM5Mzg0NDYxL2FydGljbGUvZGV0YWlscy84MTI3NzcwNw==\">【模板】Noi-Linux 下的一些配置</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Zja3VfODgvYXJ0aWNsZS9kZXRhaWxzLzg4Mjk4MzQw\">C/C++ 字符串与数字相互转换</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dfbGludXgvYXJ0aWNsZS9kZXRhaWxzLzc2MjIyMTEy\">C++ sort 排序函数用法</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vYW1pbnh1L3AvNDY4NjMzMi5odG1s\">C++ 中 vector 使用详细说明 （转）</span></li>\n</ol>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://fidel.js.org/2019/04/19/i-am-back/",
            "url": "https://fidel.js.org/2019/04/19/i-am-back/",
            "title": "失踪人口回归",
            "date_published": "2019-04-18T16:00:00.000Z",
            "content_html": "<p>总之怎么说，我又回来了。</p>\n<p>之前因为学业的原因这个博客荒废了一段时间，现在重新修理了一下这个小破站。</p>\n<span id=\"more\"></span>\n<hr />\n<p>先列出 Rain City 改动了的地方：</p>\n<ul>\n<li>更换了字体  <code>Source Han Sans CN</code> 。</li>\n<li>添加了几位大佬的友链。</li>\n<li>Valine-admin 评论系统及邮件回复更新。</li>\n<li>添加了文章访问量统计。</li>\n<li>添加新访问域名 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9maWRlbHh5ei5tbA==\">fidelxyz.ml</span>。<em>Freenom 上免费注册的。~~ 目前 SSL 证书还没申请到，先用着 HTTP 吧。~~ 目前 SSL 证书已生效。（Coding Pages 的自动申请 SSL 证书好评）</em></li>\n<li>站内搜索现在可用。<em>（不知道为什么我放了百度的站内搜索还是会自动跳转到 Google，有时间解决下。不过其实用 Google 的也不错）</em></li>\n<li>访问速度略微优化。</li>\n<li>增加了网站的 favicon。<em>（从 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9taW5lY3JhZnQtemguZ2FtZXBlZGlhLmNvbS8=\">Minecraft WIKI</span> 下载的的 Redstone Lamp (Active) 图标，后面想到更好的再换）</em></li>\n<li>在 sidebar 中添加 console 栏，方便开发和写作时访问链接。</li>\n</ul>\n<p>改动的内容大概就这些。同时删掉了几篇不想公开的文章。</p>\n<p>最近还是发生了挺多事情的，也做了不少 Project。后面会把前段时间落下的几篇文章补一补。</p>\n<h1 id=\"关于新域名\"><a class=\"anchor\" href=\"#关于新域名\">#</a> 关于新域名</h1>\n<p>就是在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZnJlZW5vbS5jb20vemgvaW5kZXguaHRtbD9sYW5nPXpo\">Freenom</span> 上免费注册了一个新域名 <span class=\"exturl\" data-url=\"aHR0cDovL2ZpZGVseHl6Lm1s\">fidelxyz.ml</span>，1 年有效期。估计一年之后就忘了要重新注册了，主要还是用着 <a href=\"http://fidel.js.org\">fidel.js.org</a> 访问吧。</p>\n<p><img data-src=\"https://s2.ax1x.com/2019/04/19/E9fhcV.png\" alt=\"Freenom 的免费域名\" /></p>\n<p>目前在用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubm9kZWNhY2hlLmNvbS8=\">NodeCache</span> 的 DNS 解析。（尝试过 NodeCache 的 CDN 加速大几率抽风，原因未知）</p>\n<p>Coding Pages 会自动申请 SSL 证书，一天生效，好评。</p>\n<p>目前没有开启强制 HTTPS 访问，因为开启之后通过 <a href=\"http://fidel.js.org\">fidel.js.org</a> 这个域名访问会 “重定向次数过多”。</p>\n<p>把首页的 Banner 从 png 转到了 jpg 格式，大幅提高加载速度。（之前怎么没留意到这个坑）</p>\n<p>顺便捣鼓了下阿里的免费企业邮箱。既然 1 年免费，5 年也免费，干脆就直接来个 5 年呗！</p>\n<p><img data-src=\"https://s2.ax1x.com/2019/04/19/E9f06f.png\" alt=\"阿里免费的企业邮箱\" /></p>\n<p>说实话这个域名邮箱用处也不大，毕竟评论通知收发邮件现在用了 Foxmail 就懒得再改了…… 倒是可以用学校的名字申请的域名 “假装下官方”？（逃</p>\n<h1 id=\"something-else\"><a class=\"anchor\" href=\"#something-else\">#</a> something else</h1>\n<h2 id=\"小麦云盘-u-file\"><a class=\"anchor\" href=\"#小麦云盘-u-file\">#</a> 小麦云盘 &amp; U-File</h2>\n<p>最近朋友推荐了 <span class=\"exturl\" data-url=\"aHR0cDovL3dwLm93bi1jbG91ZC5jbi8=\">小麦网盘</span>，知名度不高，貌似挺良心的。初始有 500G 的免费空间（！），外链分享要实名认证或者给 10 块钱。（可是比度盘良心多了，最近被度盘的限速烦到抓狂）</p>\n<p>还有一个 <span class=\"exturl\" data-url=\"aHR0cDovL3UtZmlsZS5jbi8=\">U-File 直链云</span>，使用 FTP 管理文件，储存空间不限量（！），可以绑定域名后作为直链使用。</p>\n<p>但是直链需要有域名备案，然而我这一个海外域名 + 海外主机就没法了……</p>\n<h2 id=\"yu-writer\"><a class=\"anchor\" href=\"#yu-writer\">#</a> Yu Writer</h2>\n<p>写到这段的时候发现前几天新装的 Yu Writer 加了一个统计字数和写作时间的新功能。</p>\n<p><img data-src=\"https://s2.ax1x.com/2019/04/19/E9h33q.png\" alt=\"Yu Writer 的新版功能\" /></p>\n<p>（你跟我说我写这一篇文章花了一个钟？我不信！）</p>\n<hr />\n<p>大概的事情也就这么多，更多的后面想起来再补充。</p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "https://fidel.js.org/2018/08/13/hello-hexo/",
            "url": "https://fidel.js.org/2018/08/13/hello-hexo/",
            "title": "Hexo，走起！",
            "date_published": "2018-08-12T16:00:00.000Z",
            "content_html": "<p>Rain City 又搬家啦！</p>\n<p>正巧，Rain City <a href=\"https://fidel.js.org/2018/04/30/hello-raincity/\">在 Github Pages 上正式建成</a> 的 5 个月后，Rain City 转移到了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RpbmcubmV0L3YyL3BhZ2VzLw==\">Coding Pages</span> 上。目前仅完成了全部文章和部分 Hexo 主题的转移，后续将会继续完善。</p>\n<span id=\"more\"></span>\n<h1 id=\"为啥-rain-city-搬家了\"><a class=\"anchor\" href=\"#为啥-rain-city-搬家了\">#</a> 为啥 Rain City 搬家了？</h1>\n<p>最最主要的原因，就是 Github Pages 在国内的稳定性实在不敢恭维，写篇文章都要科学上网（见 Rain City 建成时写的文章：<a href=\"https://fidel.js.org/2018/04/30/hello-raincity/#%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%90%AD%E5%BB%BA\">Hello, Rain City!</a>）。于是就换到了由 <span class=\"exturl\" data-url=\"aHR0cDovL0NvZGluZy5uZXQ=\">Coding.net</span> 提供的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RpbmcubmV0L3YyL3BhZ2VzLw==\">Coding Pages</span> 服务。由于 Coding 的业务主要面向国内，所以对国内的访问会友好不少，虽然主机还是在香港（国内要备案，Coding 也玩不起）。</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/PgQqfJ.png\" alt=\"Coding Pages 的 Ping 检测结果\" /></p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/PgQbY4.png\" alt=\"Github Pages 的 Ping 检测结果\" /></p>\n<p><s>乍看之下好像差不多诶……</s></p>\n<p>然而事实上 Github Pages 一堆超时…… 毕竟 Github Pages 的服务器在美国，跨了大半个地球啊。所以说，还是用 Coding Pages 吧。</p>\n<p>（说实话我觉得 Github 最大的优点在于 GitHub Desktop，完全不需要命令行来配置 Git 啊，而且界面也十分漂亮）</p>\n<p>Rain City 的访问域名依旧是 <a href=\"http://fidel.js.org\">fidel.js.org</a>，使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9qcy5vcmcv\">JS.ORG</span> 的 CNAME DNS 解析。全站使用 https 加密，使用 <span class=\"exturl\" data-url=\"aHR0cDovL0pTLk9SRw==\">JS.ORG</span> 的 SSL 证书，由 CloudFlare Inc ECC CA-2 颁发。</p>\n<h1 id=\"hello-hexo\"><a class=\"anchor\" href=\"#hello-hexo\">#</a> Hello, Hexo!</h1>\n<p>不仅换了 Pages 服务，这次连 Blog 系统也换了，从 Jekyll 换成了大名鼎鼎的 Hexo。</p>\n<p>其实我很早就听说过 Hexo 了，只是 Github Pages 本身就支持 Jekyll，而且也找到了一个不错的 Jekyll 博客主题，当时想着直接 Fork 下来就 OK 了（然而事实上我后面还是改了很多，<s>而且改得乱七八糟</s>……），然而发现写博客还是会比较麻烦。后来既然要换到 Coding Pages 上，就干脆换成 Hexo 试试看，其实更多是奔着 Hexo 有中文文档来的。</p>\n<p>以前没装过 Node.js 和 npm，都得全部装一遍。然后一打开 Blog 页面，WOW！</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/Pgl49H.png\" alt=\"Rain City 的首页\" /></p>\n<p>比 Jekyll 不知道漂亮到哪去了。</p>\n<p>然后我又发现 Hexo 居然内置了一键部署至 Git！</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/Pg1kUU.png\" alt=\"Hexo 的一键部署\" /></p>\n<p>Hexo 大法好！</p>\n<p>写了两个 bat 放在 Blog 的本地目录下面，直接双击就可以直接运行。</p>\n<p>附上 bat 命令：</p>\n<ul>\n<li>运行服务器：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo server</pre></td></tr></table></figure><ul>\n<li>一键部署静态文件至 Git（需要配置）：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>hexo deploy --generate</pre></td></tr></table></figure><p>考虑到其实在手机上写博客会比较麻烦，所以决定在电脑上写完文章后直接部署静态文件到 Coding 上。因此也专门找了一个支持 Windows 的 Markdown 编辑器 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9pdmFycHRyLmdpdGh1Yi5pby95dS13cml0ZXIuc2l0ZS8=\">Yu Writer</span>，界面也非常漂亮。免安装，直接下载解压后就能使用。</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/Pg1J8H.png\" alt=\"Yu Writer，写这篇文章的时候正好顺便截了个图\" /></p>\n<p>完整版需要付费，不过免费版本对于我来说也足够用了。</p>\n<h1 id=\"评论系统\"><a class=\"anchor\" href=\"#评论系统\">#</a> 评论系统</h1>\n<p>现在 Rain City 的评论系统依旧使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly92YWxpbmUuanMub3JnLw==\">Valine</span>。原本也想过换用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9saXZlcmUuY29tLw==\">来必力</span> 的，但无奈来必力在国外的服务器从国内访问依旧不稳定，于是继续使用 Valine。目前所有的评论已全部转移。</p>\n<p>同时这次使用了 Valine 的升级版 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Bhbmp1bndlbi9WYWxpbmUtQWRtaW4=\">Valine-Admin</span>，支持评论后台管理，以及采用了新的邮件通知。</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/Pg8zgH.png\" alt=\"Valine-Admin 的后台评论管理\" /></p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/PgUtBj.png\" alt=\"Valine 回复邮件通知\" /></p>\n<p>因为 LeanCloud 云引擎自动休眠的原因，评论回复可能无法及时收到邮件通知，详见 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW5qdW53ZW4uY29tL2RpeS1hLWNvbW1lbnQtc3lzdGVtLyNsZWFuYXBw\">Valine-Admin 的说明</span>。</p>\n<h1 id=\"新功能-正在开发的功能\"><a class=\"anchor\" href=\"#新功能-正在开发的功能\">#</a> 新功能 &amp; 正在开发的功能</h1>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/PgGMbq.png\" alt=\"RSS &amp; Search\" /></p>\n<p>没错，这里有两个新功能都放在右上角了。</p>\n<p>左边的按钮是 RSS 订阅。右键订阅图标，复制链接地址，输入到 RSS 订阅软件中，即可完成订阅。（RSS 订阅链接地址：<a href=\"https://fidel.js.org/atom.xml\">https://fidel.js.org/atom.xml</a>）</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/PgYNH1.png\" alt=\"Foxmail 中的 RSS 订阅\" /></p>\n<p>这里以 Foxmail 的 RSS 订阅举个例子，切换到左侧标签栏的 “订阅”，点击左上角 “添加订阅” 按钮，粘贴 Rain City 的订阅链接，就可以看到 Rain City 最新的文章啦。（虽说我这里测试的时候出了点 bug，添加订阅的时候 Foxmail 会卡住，不过其他平台的操作也大同小异了）</p>\n<p>右边的站内搜索功能使用了 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1nZW5lcmF0b3Itc2VhcmNo\">hexo-generator-search</span> 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2JhcnJldGxlZS9oZXhvLXNlYXJjaC1wbHVnaW4tc25pcHBldHM=\">hexo-search-plugin-snippets</span> 插件，但是不知道为什么没有效果，后面会继续研究一下。也请各位大佬指点一下，不尽感谢。</p>\n<p>除此之外，右侧的 sidebar 和音乐播放器也正在移植，其他的小细节也会持续优化。感谢关注 Rain City！</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/08/13/PgUBCV.png\" alt=\"赞赏一下呗～\" /></p>\n",
            "tags": [
                "杂记"
            ]
        },
        {
            "id": "https://fidel.js.org/2018/04/30/samsung-TGY/",
            "url": "https://fidel.js.org/2018/04/30/samsung-TGY/",
            "title": "三星 NOTE4 刷港版手记",
            "date_published": "2018-04-29T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>关于 ROM 免费获取服务，请参见文末。</p>\n</div>\n<p>之前在知乎上看到一个提问 <a href=\"https://www.zhihu.com/question/36413593\"><strong>【使用全套谷歌服务是种什么样的体验？- 知乎】</strong></a>，发现我在这之前用到 Google 服务相比起来简直是凤毛麟角。在之前体验过 Google 服务是有多么好用后，决定给自己的手机安装 Google 框架（<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pZmFuci5jb20vYXBwLzY5MzQ1Ng==\">【如何才能享用 Google 全套服务？| 有用功 | 爱范儿】</span>，对于非三星手机的用户，也可以看看这篇文章）。但无奈我用的三星手机没办法通过 root 的方式解决，于是毅然决定刷港版。</p>\n<span id=\"more\"></span>\n<blockquote>\n<p>三星手机上 Root 和安装框架的服务都有些复杂。所幸，对于三星手机的刷机还算简单。（妹子们：并不简单好吗！）</p>\n</blockquote>\n<p>还好，对于一个善于钻研各种设备的我来说，<s>应该不算太难…… 吧。</s></p>\n<p><img data-src=\"https://s1.ax1x.com/2018/04/30/CG6Gn0.png\" alt=\"仿佛刷了个假的系统\" /></p>\n<p>然而一上来居然刷错系统了…… 刷了个貌似是三星 S 系列的曲面屏手机的系统，并且貌似捆绑了很多国产软件。（看见那恶心的 360 浏览器没！）不过界面够漂亮，还据说挺省电。</p>\n<p>另外这波卡刷还让我见识了三星牛逼的 Recovery 界面，其实就是用 Teamwin 定制的。（由于事发匆忙，并没有来得及拍照）</p>\n<h1 id=\"开始刷机\"><a class=\"anchor\" href=\"#开始刷机\">#</a> 开始刷机</h1>\n<p>经过一番小意外，总算可以进入正题了。</p>\n<p>在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25yb21zLmNvbQ==\">ROM 中国</span> 找了一个刷机包，下载。这里推荐用更加方便的一体包。（话说还要买邀请码的哦，13 块一个账号，购买后无限下载，不过丰富并且高质量的 ROM 资源绝对值了。<strong>如果有需要免费提供 ROM 下载链接的请转到文末</strong>）</p>\n<p>顺便下载 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jbnJvbXMuY29tL2Rvd25sb2FkLW9kaW4uaHRtbA==\">Odin3</span>，三星的驱动也在链接里有。</p>\n<p>这里的连接需要注意：三星的挖煤模式跟其他手机不一样，Recovery 和 Download 模式是分开的，<strong>用【音量上】+【电源键】+【HOME 键】进入 Recovery 的图形界面以后需要点击右下角的【重启】，选择【Download 模式】才能与 Odin 连接。</strong></p>\n<p>顺便说一句，<strong>如果卡在 Teamwin 的加载界面的话，不要慌张，等个三四分钟，这段时间挺长的并且不会有任何提示。</strong> 如果实在加载不出来，拔电池再来一遍。</p>\n<p>接下来的流程就跟网上说的一样了，解压压缩包放入 Odin 的 AP 文件位中，连接手机，Start。然后再等个四五分钟就行。</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/05/06/CU3GeH.png\" alt=\"Odin\" /></p>\n<p><img data-src=\"https://s1.ax1x.com/2018/05/06/CU3Jwd.png\" alt=\"Odin\" /></p>\n<p>刷机完后手机会自动重启，进入新系统。我刷机的时候前两次都是卡在 “SAMSUNG” 的加载界面，如果出现这种情况的话拔电池重启，如果还是不行，<strong>用【音量上】+【电源键】+【HOME 键】进入 Recovery，这时候注意，刷机后的 Recovery 界面会有所改变，不再是 Teamwin 的图形界面，而是像普通手机的命令行系统。用音量键选择 Power Off，正常进入系统。</strong> 出现 “SAMSUNG” 的界面等多三四分钟即可，这段时间也会比较长。如果再次卡住，则按照上面的办法再来一遍。</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/04/30/CGg6YD.png\" alt=\"设置界面\" /></p>\n<p>成功启动系统后，就会进入设置界面了。需要注意，因为我刷的是港版系统，所以会有一个 Google 检查网络的过程，但是因为 GFW 的封锁在国内是无法访问 Google 的服务器的。于是就会卡在 “正在检查网络连接” 这一步。</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/04/30/CGgrTK.png\" alt=\"正在检查网络连接\" /></p>\n<p>按照百度到的方法，可以用连了 VPN 的电脑共享 WiFi 给手机，但是我试了试不太行，于是干脆关机，把 SIM 卡拔掉，重新开机，把 WiFi 关掉，完美跳过网络检查。<strong>但据说这方法只有在之前没装过 Google 框架的手机上才行，就算用这样的方法通过后再恢复出厂设置，就不能用这样的方法了。</strong></p>\n<p>设置时要登录 Google 或者三星账号的全部跳过，设置完后第一件事就是<strong>赶紧装 VPN</strong>，万一哪天又来个网络验证，……</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/04/30/CGgcfe.png\" alt=\"设置界面\" /></p>\n<p>至此，刷机完美完成。顺便附上几张截图：</p>\n<p><img data-src=\"https://s1.ax1x.com/2018/04/30/CGg2SH.png\" alt=\"Google 全套服务\" /></p>\n<p><img data-src=\"https://s1.ax1x.com/2018/04/30/CGgRld.png\" alt=\"主屏幕截图\" /></p>\n<p><img data-src=\"https://s1.ax1x.com/2018/04/30/CGgyFO.png\" alt=\"Google Play\" /></p>\n<h1 id=\"关于-vpn\"><a class=\"anchor\" href=\"#关于-vpn\">#</a> 关于 VPN</h1>\n<p>目前我正在使用 SSR 连接 VPN，服务器在这里找：<span class=\"exturl\" data-url=\"aHR0cDovLzUyc3NyLmNu\">52ssr.cn</span></p>\n<p>SSR 下载点这里：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NoYWRvd3NvY2tzcnIvc2hhZG93c29ja3NyLWFuZHJvaWQvcmVsZWFzZXM=\">https://github.com/shadowsocksrr/shadowsocksr-android/releases</span></p>\n<div class=\"note info\">\n<p><span class=\"exturl\" data-url=\"aHR0cDovLzUyc3NyLmNu\">52ssr.cn</span> 已失效，详见文末。</p>\n</div>\n<h1 id=\"rom-免费提供\"><a class=\"anchor\" href=\"#rom-免费提供\">#</a> ROM 免费提供</h1>\n<p>如果有需要 ROM 的用户，<strong>请在 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25yb21zLmNvbQ==\">ROM 中国</span> 找到您的手机型号适用的 ROM，并将文章链接通过下面评论的方式留言，并填写您的邮箱地址</strong>，我会尽快将下载链接回复给您，您的邮箱也会收到通知邮件。</p>\n<hr />\n<h1 id=\"补充\"><a class=\"anchor\" href=\"#补充\">#</a> 补充</h1>\n<h2 id=\"2018-05-26\"><a class=\"anchor\" href=\"#2018-05-26\">#</a> 2018-05-26</h2>\n<p>昨天发现 <span class=\"exturl\" data-url=\"aHR0cDovLzUyc3NyLmNu\">52ssr.cn</span> 登录不上了。</p>\n<p>一个新的 ssr 提供网站：<span class=\"exturl\" data-url=\"aHR0cDovL2dldHNzci50aw==\">getssr.tk</span>。</p>\n<hr />\n<h2 id=\"some-days-later\"><a class=\"anchor\" href=\"#some-days-later\">#</a> Some days later</h2>\n<p>貌似 <span class=\"exturl\" data-url=\"aHR0cDovL2dldHNzci50aw==\">getssr.tk</span> 也连不上了。</p>\n<p>再推荐一个：<span class=\"exturl\" data-url=\"aHR0cDovL3Bvcm8uaWN1Lw==\">Poro</span></p>\n<p>（Poro 貌似是有 alibaba 撑着？！细思极恐）</p>\n<hr />\n<h2 id=\"2019-4-13\"><a class=\"anchor\" href=\"#2019-4-13\">#</a> 2019-4-13</h2>\n<p>最近 Poro 也不好使了。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2dldHNzci50aw==\">getssr.tk</span> 回归？</p>\n",
            "tags": [
                "技术",
                "周边服务"
            ]
        }
    ]
}